{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"pantograph pantograph is another way to automate releases for your apps. \ud83d\ude80 It handles all tedious tasks, like generating screenshots, dealing with code signing, and releasing your application. You can start by creating a Pantfile file in your repository, here\u2019s one that defines your release process: lane :release do test_app build_app deploy_app end lane :test_app do gradle ( task : 'clean testRelease' ) end lane :build_app do gradle ( task : 'clean assembleRelease' ) end lane :deploy_app do artifactory slack # Let your team-mates know the new version is live end You just defined 4 different lanes, one for release deployement. To release your app, all you have to do is: pantograph release Why pantograph? pantograph \ud83d\ude80 Save hours every time you push a new release \u2728 Integrates with many of your existing tools and services \ud83d\udcd6 100% open source under the MIT license \ud83c\udfa9 Easy setup assistant to get started in a few minutes \u2692 Runs on your machine, it's your app and your data \ud83d\udc7b Integrates with all major CI systems \ud83d\udd27 Extend and customise pantograph to fit your needs, you're not dependent on anyone \ud83d\udcad Never remember any commands any more, just pantograph \ud83d\udea2 Deploy from any computer, including a CI server Getting Started Install the latest Xcode command line tools: xcode-select --install Install pantograph using # Install ruby via homebrew (macOS & linux only) brew install ruby # Set ruby in your shell path (example uses Zsh) echo 'export PATH=\"/usr/local/opt/ruby/bin:$PATH\"' >> ~/.zshrc # Using RubyGems gem install pantograph Questions and support Before submitting a new GitHub issue, please make sure to search for existing GitHub issues . If that doesn't help, please submit an issue on GitHub and provide information about your setup, in particular the output of the pantograph env command. System requirements Currently, pantograph is officially supported to run on Linux and macOS. But we are working on \ud83d\udda5\ufe0f Windows support for parts of pantograph . Many other tools and actions can theoretically also work on other platforms. pantograph team John Knapp Special thanks to all contributors for extending and improving pantograph . Metrics pantograph tracks a few key metrics to understand how developers are using the tool and to help us know what areas need improvement. No personal/sensitive information is ever collected. Metrics that are collected include: The number of pantograph runs A salted hash of the app identifier or package name, which helps us anonymously identify unique usage of pantograph You can easily opt-out of metrics collection by adding opt_out_usage at the top of your Pantfile or by setting the environment variable PANTOGRAPH_OPT_OUT_USAGE . Check out the metrics code on GitHub License This project is licensed under the terms of the MIT license. See the LICENSE file.","title":"Home"},{"location":"#pantograph","text":"pantograph is another way to automate releases for your apps. \ud83d\ude80 It handles all tedious tasks, like generating screenshots, dealing with code signing, and releasing your application. You can start by creating a Pantfile file in your repository, here\u2019s one that defines your release process: lane :release do test_app build_app deploy_app end lane :test_app do gradle ( task : 'clean testRelease' ) end lane :build_app do gradle ( task : 'clean assembleRelease' ) end lane :deploy_app do artifactory slack # Let your team-mates know the new version is live end You just defined 4 different lanes, one for release deployement. To release your app, all you have to do is: pantograph release","title":"pantograph"},{"location":"#why-pantograph","text":"pantograph \ud83d\ude80 Save hours every time you push a new release \u2728 Integrates with many of your existing tools and services \ud83d\udcd6 100% open source under the MIT license \ud83c\udfa9 Easy setup assistant to get started in a few minutes \u2692 Runs on your machine, it's your app and your data \ud83d\udc7b Integrates with all major CI systems \ud83d\udd27 Extend and customise pantograph to fit your needs, you're not dependent on anyone \ud83d\udcad Never remember any commands any more, just pantograph \ud83d\udea2 Deploy from any computer, including a CI server","title":"Why pantograph?"},{"location":"#getting-started","text":"Install the latest Xcode command line tools: xcode-select --install Install pantograph using # Install ruby via homebrew (macOS & linux only) brew install ruby # Set ruby in your shell path (example uses Zsh) echo 'export PATH=\"/usr/local/opt/ruby/bin:$PATH\"' >> ~/.zshrc # Using RubyGems gem install pantograph","title":"Getting Started"},{"location":"#questions-and-support","text":"Before submitting a new GitHub issue, please make sure to search for existing GitHub issues . If that doesn't help, please submit an issue on GitHub and provide information about your setup, in particular the output of the pantograph env command.","title":"Questions and support"},{"location":"#system-requirements","text":"Currently, pantograph is officially supported to run on Linux and macOS. But we are working on \ud83d\udda5\ufe0f Windows support for parts of pantograph . Many other tools and actions can theoretically also work on other platforms.","title":"System requirements"},{"location":"#pantograph-team","text":"","title":"pantograph team"},{"location":"#metrics","text":"pantograph tracks a few key metrics to understand how developers are using the tool and to help us know what areas need improvement. No personal/sensitive information is ever collected. Metrics that are collected include: The number of pantograph runs A salted hash of the app identifier or package name, which helps us anonymously identify unique usage of pantograph You can easily opt-out of metrics collection by adding opt_out_usage at the top of your Pantfile or by setting the environment variable PANTOGRAPH_OPT_OUT_USAGE . Check out the metrics code on GitHub","title":"Metrics"},{"location":"#license","text":"This project is licensed under the terms of the MIT license. See the LICENSE file.","title":"License"},{"location":"actions/","text":".pantograph-setup { border-left: .4rem solid #00b0ff; border-bottom: .1rem solid rgba(0,176,255,.1); background-color: rgba(0,176,255,.1); padding: 15px; margin-bottom: 20px; font-weight: 200; } .pantograph-setup-wrapper { background-color: rgba(0,176,255,.05); } .pantograph-setup-wrapper[open] { padding-bottom: 1px; } .pantograph-setup-header { font-size: 20px; font-weight: 500; } .pantograph-setup-more-details { font-size: 18px; font-weight: 350; } New to pantograph? Click here to open the installation & setup instructions first 1) Install the latest Xcode command line tools xcode-select --install Install _pantograph_ using Homebrew & Rubygems # Install ruby via homebrew (macOS & linux only) brew install ruby # Set ruby in your shell path (example uses Zsh) echo 'export PATH=\"/usr/local/opt/ruby/bin:$PATH\"' >> ~/.zshrc # Using RubyGems gem install pantograph 3) Navigate to your project and run pantograph init More Details pantograph actions This page contains a list of all built-in pantograph actions and their available options. To get the most up-to-date information from the command line on your current version you can also run pantograph actions # list all available pantograph actions pantograph action [ action_name ] # more information for a specific action You can import another Pantfile by using the import action. This is useful if you have shared lanes across multiple apps and you want to store a Pantfile in a separate folder. The path must be relative to the Pantfile this is called from. import './path/to/other/Pantfile' For pantograph plugins, check out the available plugins page. If you want to create your own action, check out the local actions page. Testing Building Documentation Beta Push Releasing your app Source Control Notifications Misc Deprecated Plugins Testing Action Description Supported Platforms sonar Invokes sonar-scanner to programmatically run SonarQube analysis mac, linux, windows Building Action Description Supported Platforms gradle All gradle related actions, including building and testing your application mac, linux, windows Documentation Action Description Supported Platforms Beta Action Description Supported Platforms Push Action Description Supported Platforms Releasing your app Action Description Supported Platforms Source Control Action Description Supported Platforms ensure_git_status_clean Raises error if there are uncommitted git changes mac, linux, windows git_branch Returns the name of the current git branch mac, linux, windows last_git_commit Return last git commit hash, abbreviated commit hash, commit message and author mac, linux, windows reset_git_repo Resets git repo to a clean state by discarding uncommitted changes mac, linux, windows changelog_from_git_commits Collect git commit messages into a changelog mac, linux, windows number_of_commits Return the number of commits in current git branch mac, linux, windows git_pull Executes a simple git pull command mac, linux, windows push_to_git_remote Push local changes to the remote branch mac, linux, windows git_tag_exists Checks if the git tag with the given name exists mac, linux, windows ensure_git_branch Raises an exception if not on a specific git branch mac, linux, windows git_commit Directly commit the given file with the given message mac, linux, windows push_git_tags Push local tags to the remote - this will only push tags mac, linux, windows danger Runs danger for the project mac, linux, windows set_github_release This will create a new release on GitHub and upload assets for it mac, linux, windows create_pull_request This will create a new pull request on GitHub mac, linux, windows get_github_release This will verify if a given release version is available on GitHub mac, linux, windows github_api Call a GitHub API endpoint and get the resulting JSON response mac, linux, windows git_pull_tags Executes a simple git fetch --tags command mac, linux, windows git_submodule_update Execute git submodule command mac, linux, windows Notifications Action Description Supported Platforms slack Send a success/error message to your Slack group mac, linux, windows twitter Post a tweet on Twitter.com mac, linux, windows Misc Action Description Supported Platforms puts Prints out the given text mac, linux, windows default_platform Defines a default platform to not have to specify the platform mac, linux, windows pantograph_version Alias for the min_pantograph_version action mac, linux, windows lane_context Access lane context values mac, linux, windows import Import another Pantfile to use its lanes mac, linux, windows import_from_git Import another Pantfile from a remote git repository to use its lanes mac, linux, windows skip_docs Skip the creation of the pantograph/README.md file when running pantograph mac, linux, windows is_ci Is the current run being executed on a CI system, like Jenkins or Travis mac, linux, windows update_pantograph Makes sure pantograph-tools are up-to-date when running pantograph mac, linux, windows bundle_install This action runs bundle install (if available) mac, linux, windows prompt Ask the user for a value or for confirmation mac, linux, windows say This action speaks the given text out loud mac, linux, windows zip Compress a file or folder to a zip mac, linux, windows artifactory This action uploads an artifact to artifactory mac, linux, windows erb Allows to Generate output files based on ERB templates mac, linux, windows download Download a file from a remote server (e.g. JSON file) mac, linux, windows rocket Outputs ascii-art for a rocket \ud83d\ude80 mac, linux, windows debug Print out an overview of the lane context values mac, linux, windows cloc Generates a Code Count that can be read by Jenkins (xml format) mac rsync Rsync files from :source to :destination mac, linux, windows jira Leave a comment on JIRA tickets mac, linux, windows ssh Allows remote command execution using ssh mac, linux, windows prompt_secure Ask the user for a value or for confirmation mac, linux, windows sh Runs a shell command mac, linux, windows ensure_env_vars Raises an exception if the specified env vars are not set mac, linux, windows opt_out_usage This will stop uploading the information which actions were run mac, linux, windows min_pantograph_version Verifies the minimum pantograph version required mac, linux, windows println Alias for the puts action mac, linux, windows echo Alias for the puts action mac, linux, windows is_verbose Returns Boolean whether --verbose flag was set mac, linux, windows ensure_bundle_exec Raises an exception if not using bundle exec to run pantograph mac, linux, windows plugin_scores \u001b[1;31mNo description provided\u001b[0m mac, linux, windows ruby_version Verifies the minimum ruby version required mac, linux, windows Deprecated Action Description Supported Platforms","title":"Actions"},{"location":"actions/#pantograph-actions","text":"This page contains a list of all built-in pantograph actions and their available options. To get the most up-to-date information from the command line on your current version you can also run pantograph actions # list all available pantograph actions pantograph action [ action_name ] # more information for a specific action You can import another Pantfile by using the import action. This is useful if you have shared lanes across multiple apps and you want to store a Pantfile in a separate folder. The path must be relative to the Pantfile this is called from. import './path/to/other/Pantfile' For pantograph plugins, check out the available plugins page. If you want to create your own action, check out the local actions page. Testing Building Documentation Beta Push Releasing your app Source Control Notifications Misc Deprecated Plugins","title":"pantograph actions"},{"location":"actions/#testing","text":"Action Description Supported Platforms sonar Invokes sonar-scanner to programmatically run SonarQube analysis mac, linux, windows","title":"Testing"},{"location":"actions/#building","text":"Action Description Supported Platforms gradle All gradle related actions, including building and testing your application mac, linux, windows","title":"Building"},{"location":"actions/#documentation","text":"Action Description Supported Platforms","title":"Documentation"},{"location":"actions/#beta","text":"Action Description Supported Platforms","title":"Beta"},{"location":"actions/#push","text":"Action Description Supported Platforms","title":"Push"},{"location":"actions/#releasing-your-app","text":"Action Description Supported Platforms","title":"Releasing your app"},{"location":"actions/#source-control","text":"Action Description Supported Platforms ensure_git_status_clean Raises error if there are uncommitted git changes mac, linux, windows git_branch Returns the name of the current git branch mac, linux, windows last_git_commit Return last git commit hash, abbreviated commit hash, commit message and author mac, linux, windows reset_git_repo Resets git repo to a clean state by discarding uncommitted changes mac, linux, windows changelog_from_git_commits Collect git commit messages into a changelog mac, linux, windows number_of_commits Return the number of commits in current git branch mac, linux, windows git_pull Executes a simple git pull command mac, linux, windows push_to_git_remote Push local changes to the remote branch mac, linux, windows git_tag_exists Checks if the git tag with the given name exists mac, linux, windows ensure_git_branch Raises an exception if not on a specific git branch mac, linux, windows git_commit Directly commit the given file with the given message mac, linux, windows push_git_tags Push local tags to the remote - this will only push tags mac, linux, windows danger Runs danger for the project mac, linux, windows set_github_release This will create a new release on GitHub and upload assets for it mac, linux, windows create_pull_request This will create a new pull request on GitHub mac, linux, windows get_github_release This will verify if a given release version is available on GitHub mac, linux, windows github_api Call a GitHub API endpoint and get the resulting JSON response mac, linux, windows git_pull_tags Executes a simple git fetch --tags command mac, linux, windows git_submodule_update Execute git submodule command mac, linux, windows","title":"Source Control"},{"location":"actions/#notifications","text":"Action Description Supported Platforms slack Send a success/error message to your Slack group mac, linux, windows twitter Post a tweet on Twitter.com mac, linux, windows","title":"Notifications"},{"location":"actions/#misc","text":"Action Description Supported Platforms puts Prints out the given text mac, linux, windows default_platform Defines a default platform to not have to specify the platform mac, linux, windows pantograph_version Alias for the min_pantograph_version action mac, linux, windows lane_context Access lane context values mac, linux, windows import Import another Pantfile to use its lanes mac, linux, windows import_from_git Import another Pantfile from a remote git repository to use its lanes mac, linux, windows skip_docs Skip the creation of the pantograph/README.md file when running pantograph mac, linux, windows is_ci Is the current run being executed on a CI system, like Jenkins or Travis mac, linux, windows update_pantograph Makes sure pantograph-tools are up-to-date when running pantograph mac, linux, windows bundle_install This action runs bundle install (if available) mac, linux, windows prompt Ask the user for a value or for confirmation mac, linux, windows say This action speaks the given text out loud mac, linux, windows zip Compress a file or folder to a zip mac, linux, windows artifactory This action uploads an artifact to artifactory mac, linux, windows erb Allows to Generate output files based on ERB templates mac, linux, windows download Download a file from a remote server (e.g. JSON file) mac, linux, windows rocket Outputs ascii-art for a rocket \ud83d\ude80 mac, linux, windows debug Print out an overview of the lane context values mac, linux, windows cloc Generates a Code Count that can be read by Jenkins (xml format) mac rsync Rsync files from :source to :destination mac, linux, windows jira Leave a comment on JIRA tickets mac, linux, windows ssh Allows remote command execution using ssh mac, linux, windows prompt_secure Ask the user for a value or for confirmation mac, linux, windows sh Runs a shell command mac, linux, windows ensure_env_vars Raises an exception if the specified env vars are not set mac, linux, windows opt_out_usage This will stop uploading the information which actions were run mac, linux, windows min_pantograph_version Verifies the minimum pantograph version required mac, linux, windows println Alias for the puts action mac, linux, windows echo Alias for the puts action mac, linux, windows is_verbose Returns Boolean whether --verbose flag was set mac, linux, windows ensure_bundle_exec Raises an exception if not using bundle exec to run pantograph mac, linux, windows plugin_scores \u001b[1;31mNo description provided\u001b[0m mac, linux, windows ruby_version Verifies the minimum ruby version required mac, linux, windows","title":"Misc"},{"location":"actions/#deprecated","text":"Action Description Supported Platforms","title":"Deprecated"},{"location":"advanced/","text":".pantograph-setup { border-left: .4rem solid #00b0ff; border-bottom: .1rem solid rgba(0,176,255,.1); background-color: rgba(0,176,255,.1); padding: 15px; margin-bottom: 20px; font-weight: 200; } .pantograph-setup-wrapper { background-color: rgba(0,176,255,.05); } .pantograph-setup-wrapper[open] { padding-bottom: 1px; } .pantograph-setup-header { font-size: 20px; font-weight: 500; } .pantograph-setup-more-details { font-size: 18px; font-weight: 350; } New to pantograph? Click here to open the installation & setup instructions first 1) Install the latest Xcode command line tools xcode-select --install Install _pantograph_ using Homebrew & Rubygems # Install ruby via homebrew (macOS & linux only) brew install ruby # Set ruby in your shell path (example uses Zsh) echo 'export PATH=\"/usr/local/opt/ruby/bin:$PATH\"' >> ~/.zshrc # Using RubyGems gem install pantograph 3) Navigate to your project and run pantograph init More Details Advanced pantograph This file is not used any more and its content was moved to subpages. Please follow the links to the content's new location. // Closure-wrapped for security. (function () { var anchorMap = { // templates \"A\": \"/advanced/actions/\", \"C\": \"/advanced/Pantfile/\", \"D\": \"/advanced/lanes/\", \"E\": \"/advanced/other/\", \"F\": \"/advanced/pantograph/\", // actual anchors \"passing-parameters\": \"/advanced/lanes/\", \"switching-lanes\": \"/advanced/lanes/\", \"output-environment-variables\": \"/advanced/pantograph/\", \"interacting-with-the-user\": \"/advanced/actions/\", \"run-actions-directly\": \"/advanced/actions/\", \"shell-values\": \"/advanced/actions/\", \"priorities-of-parameters-and-options\": \"/advanced/pantograph/\", \"importing-another-fastfile\": \"/advanced/Pantfile/\", \"using-pantograph_require\": \"/advanced/Pantfile/\", \"environment-variables\": \"/advanced/other/\", \"lane-properties\": \"/advanced/lanes/\", \"lane-context\": \"/advanced/lanes/\", \"private-lanes\": \"/advanced/lanes/\", \"load-own-actions-from-external-folder\": \"/advanced/Pantfile/\", \"skip-update-check-when-launching-pantograph\": \"/advanced/pantograph/\", \"hide-changelog-information-at-the-end-of-running-pantograph\": \"/advanced/pantograph/\", \"control-configuration-by-lane-and-by-platform\": \"/advanced/lanes/\", \"manually-manage-the-pantograph-match-repo\": \"/advanced/other/\", \"directory-behavior\": \"/advanced/pantograph/\", \"building-actions\": \"/advanced/actions/\", } /* * Best practice for extracting hashes: * https://stackoverflow.com/a/10076097/151365 */ var hash = window.location.hash.substring(1); if (hash) { /* * Best practice for javascript redirects: * https://stackoverflow.com/a/506004/151365 */ if (anchorMap[hash]) { link = anchorMap[hash] + '#' + hash; window.location.replace(link); } } })(); Passing Parameters This content was moved and now lives here . Switching lanes This content was moved and now lives here . Output environment variables This content was moved and now lives here . Interacting with the user This content was moved and now lives here . Run actions directly This content was moved and now lives here . Shell values This content was moved and now lives here . Priorities of parameters and options This content was moved and now lives here . Importing another Pantfile This content was moved and now lives here . Using pantograph_require This content was moved and now lives here . Environment Variables This content was moved and now lives here . Lane Properties This content was moved and now lives here . Lane Context This content was moved and now lives here . Private Lanes This content was moved and now lives here . Load own actions from external folder This content was moved and now lives here . Skip update check when launching pantograph This content was moved and now lives here . Hide changelog information at the end of running pantograph This content was moved and now lives here . Control configuration by lane and by platform This content was moved and now lives here . Manually Manage the pantograph match Repo This content was moved and now lives here . Directory behavior This content was moved and now lives here . Building Actions This content was moved and now lives here .","title":"Advanced"},{"location":"advanced/#advanced-pantograph","text":"This file is not used any more and its content was moved to subpages. Please follow the links to the content's new location. // Closure-wrapped for security. (function () { var anchorMap = { // templates \"A\": \"/advanced/actions/\", \"C\": \"/advanced/Pantfile/\", \"D\": \"/advanced/lanes/\", \"E\": \"/advanced/other/\", \"F\": \"/advanced/pantograph/\", // actual anchors \"passing-parameters\": \"/advanced/lanes/\", \"switching-lanes\": \"/advanced/lanes/\", \"output-environment-variables\": \"/advanced/pantograph/\", \"interacting-with-the-user\": \"/advanced/actions/\", \"run-actions-directly\": \"/advanced/actions/\", \"shell-values\": \"/advanced/actions/\", \"priorities-of-parameters-and-options\": \"/advanced/pantograph/\", \"importing-another-fastfile\": \"/advanced/Pantfile/\", \"using-pantograph_require\": \"/advanced/Pantfile/\", \"environment-variables\": \"/advanced/other/\", \"lane-properties\": \"/advanced/lanes/\", \"lane-context\": \"/advanced/lanes/\", \"private-lanes\": \"/advanced/lanes/\", \"load-own-actions-from-external-folder\": \"/advanced/Pantfile/\", \"skip-update-check-when-launching-pantograph\": \"/advanced/pantograph/\", \"hide-changelog-information-at-the-end-of-running-pantograph\": \"/advanced/pantograph/\", \"control-configuration-by-lane-and-by-platform\": \"/advanced/lanes/\", \"manually-manage-the-pantograph-match-repo\": \"/advanced/other/\", \"directory-behavior\": \"/advanced/pantograph/\", \"building-actions\": \"/advanced/actions/\", } /* * Best practice for extracting hashes: * https://stackoverflow.com/a/10076097/151365 */ var hash = window.location.hash.substring(1); if (hash) { /* * Best practice for javascript redirects: * https://stackoverflow.com/a/506004/151365 */ if (anchorMap[hash]) { link = anchorMap[hash] + '#' + hash; window.location.replace(link); } } })();","title":"Advanced pantograph"},{"location":"advanced/#passing-parameters","text":"This content was moved and now lives here .","title":"Passing Parameters"},{"location":"advanced/#switching-lanes","text":"This content was moved and now lives here .","title":"Switching lanes"},{"location":"advanced/#output-environment-variables","text":"This content was moved and now lives here .","title":"Output environment variables"},{"location":"advanced/#interacting-with-the-user","text":"This content was moved and now lives here .","title":"Interacting with the user"},{"location":"advanced/#run-actions-directly","text":"This content was moved and now lives here .","title":"Run actions directly"},{"location":"advanced/#shell-values","text":"This content was moved and now lives here .","title":"Shell values"},{"location":"advanced/#priorities-of-parameters-and-options","text":"This content was moved and now lives here .","title":"Priorities of parameters and options"},{"location":"advanced/#importing-another-pantfile","text":"This content was moved and now lives here .","title":"Importing another Pantfile"},{"location":"advanced/#using-pantograph_require","text":"This content was moved and now lives here .","title":"Using pantograph_require"},{"location":"advanced/#environment-variables","text":"This content was moved and now lives here .","title":"Environment Variables"},{"location":"advanced/#lane-properties","text":"This content was moved and now lives here .","title":"Lane Properties"},{"location":"advanced/#lane-context","text":"This content was moved and now lives here .","title":"Lane Context"},{"location":"advanced/#private-lanes","text":"This content was moved and now lives here .","title":"Private Lanes"},{"location":"advanced/#load-own-actions-from-external-folder","text":"This content was moved and now lives here .","title":"Load own actions from external folder"},{"location":"advanced/#skip-update-check-when-launching-pantograph","text":"This content was moved and now lives here .","title":"Skip update check when launching pantograph"},{"location":"advanced/#hide-changelog-information-at-the-end-of-running-pantograph","text":"This content was moved and now lives here .","title":"Hide changelog information at the end of running pantograph"},{"location":"advanced/#control-configuration-by-lane-and-by-platform","text":"This content was moved and now lives here .","title":"Control configuration by lane and by platform"},{"location":"advanced/#manually-manage-the-pantograph-match-repo","text":"This content was moved and now lives here .","title":"Manually Manage the pantograph match Repo"},{"location":"advanced/#directory-behavior","text":"This content was moved and now lives here .","title":"Directory behavior"},{"location":"advanced/#building-actions","text":"This content was moved and now lives here .","title":"Building Actions"},{"location":"create-action/","text":"Local actions You can create your own actions to extend the functionality of pantograph for your project. The action you create will behave exactly like the built in actions. Just run pantograph new_action , enter the name of the action and edit the generated Ruby file in pantograph/actions/[action_name].rb . After you finished writing your action, add it to your version control, so it is available for your whole team. From then on, you can just use your action in your Pantfile , just like any other action. Submitting the action to the pantograph main repo Please be aware we may not accept all actions submitted to be bundled with pantograph . Before you submit a pull request adding the action to the pantograph code base, submit an issue proposing the new action and why it should be built-in. In general we tend to accept actions that Generally usable for a big majority of developers (e.g. basic interactions with git) Solve pain points for application developers have an easy to read documentation and great test coverage In general, we might not accept actions that Solve specific use-cases for only a small subset of developers Access the API of a third party service, the third party service should own and maintain the action Complex actions, that will require a lot of work to maintain in the future","title":"Create Your Own Action"},{"location":"create-action/#local-actions","text":"You can create your own actions to extend the functionality of pantograph for your project. The action you create will behave exactly like the built in actions. Just run pantograph new_action , enter the name of the action and edit the generated Ruby file in pantograph/actions/[action_name].rb . After you finished writing your action, add it to your version control, so it is available for your whole team. From then on, you can just use your action in your Pantfile , just like any other action.","title":"Local actions"},{"location":"create-action/#submitting-the-action-to-the-pantograph-main-repo","text":"Please be aware we may not accept all actions submitted to be bundled with pantograph . Before you submit a pull request adding the action to the pantograph code base, submit an issue proposing the new action and why it should be built-in. In general we tend to accept actions that Generally usable for a big majority of developers (e.g. basic interactions with git) Solve pain points for application developers have an easy to read documentation and great test coverage In general, we might not accept actions that Solve specific use-cases for only a small subset of developers Access the API of a third party service, the third party service should own and maintain the action Complex actions, that will require a lot of work to maintain in the future","title":"Submitting the action to the pantograph main repo"},{"location":"faqs/","text":"FAQs I'm getting an SSL error If your output contains something like SSL_connect returned = 1 errno = 0 state = SSLv3 read server certificate B: certificate verify failed that usually means you are using an outdated version of OpenSSL. Make sure to install the latest one using homebrew . brew update && brew upgrade openssl pantograph is slow (to start) If you experience slow launch times of pantograph , there are 2 solutions to solve this problem: Uninstall unused gems [ sudo ] gem cleanup Error when running pantograph with Jenkins This is usually caused when running Jenkins as its own user. While this is possible, you'll have to take care of creating a temporary Keychain, filling it and then using it when building your application. For more information about the recommended setup with Jenkins open the Jenkins Guide . Multiple targets of the same underlying app If you have one code base, but multiple branded applications Create different .env files for each environment Example: Create a .env.app1 , .env.app2 , and .env.app3 . Define each of these like the following: DLV_FIRST_NAME = Josh DLV_LAST_NAME = Holtz DLV_PRIM_CATG = Business DLV_SCND_CATG = Games Now your Pantfile file should look something like this: lane :build do puts ( [ first_name : ENV [ 'DLV_FIRST_NAME' ] , last_name : ENV [ 'DLV_LAST_NAME' ] ] ) Now to run this, all you need to do is specify the environment argument when running pantograph and it will pull from the .env file that matches the same name: Ex: pantograph build --env app1 will use .env.app1 Ex: pantograph build --env app2 will use .env.app2 You can also references these environment variables almost anywhere in pantograph . You can even define a lane to perform actions on multiple targets: desc 'Deploy both versions' lane :deploy_all do sh ( 'pantograph deploy --env paid' ) sh ( 'pantograph deploy --env free' ) end And you can combine multiple envs in one go Ex: pantograph build --env app1,env1,env2 will use .env.app1 .env.env1 and .env.env2 More on the .env file can be found here . Disable colored output Set the PANTOGRAPH_DISABLE_COLORS environment variable to disable ANSI colors (e.g. for CI machines) export PANTOGRAPH_DISABLE_COLORS = 1 Enable tab auto complete for pantograph lane names Supported shells: bash , zsh , fish . pantograph enable_auto_complete Follow the on screen prompt to add a line to your bash / zsh / fish profile. \"User interaction is not allowed\" when using pantograph via SSH This error can occur when you run pantograph via SSH. To fix it check out this reply on StackOverflow . Some pantograph commands hang indefinitely or produce strange errors and symbols Make sure your LC_ALL and LANG variables are set up correctly. pantograph requires an UTF-8 environment, so setting those variables to en_US.UTF-8 should fix your issues.","title":"FAQs"},{"location":"faqs/#faqs","text":"","title":"FAQs"},{"location":"faqs/#im-getting-an-ssl-error","text":"If your output contains something like SSL_connect returned = 1 errno = 0 state = SSLv3 read server certificate B: certificate verify failed that usually means you are using an outdated version of OpenSSL. Make sure to install the latest one using homebrew . brew update && brew upgrade openssl","title":"I'm getting an SSL error"},{"location":"faqs/#pantograph-is-slow-to-start","text":"If you experience slow launch times of pantograph , there are 2 solutions to solve this problem:","title":"pantograph is slow (to start)"},{"location":"faqs/#uninstall-unused-gems","text":"[ sudo ] gem cleanup","title":"Uninstall unused gems"},{"location":"faqs/#error-when-running-pantograph-with-jenkins","text":"This is usually caused when running Jenkins as its own user. While this is possible, you'll have to take care of creating a temporary Keychain, filling it and then using it when building your application. For more information about the recommended setup with Jenkins open the Jenkins Guide .","title":"Error when running pantograph with Jenkins"},{"location":"faqs/#multiple-targets-of-the-same-underlying-app","text":"If you have one code base, but multiple branded applications Create different .env files for each environment Example: Create a .env.app1 , .env.app2 , and .env.app3 . Define each of these like the following: DLV_FIRST_NAME = Josh DLV_LAST_NAME = Holtz DLV_PRIM_CATG = Business DLV_SCND_CATG = Games Now your Pantfile file should look something like this: lane :build do puts ( [ first_name : ENV [ 'DLV_FIRST_NAME' ] , last_name : ENV [ 'DLV_LAST_NAME' ] ] ) Now to run this, all you need to do is specify the environment argument when running pantograph and it will pull from the .env file that matches the same name: Ex: pantograph build --env app1 will use .env.app1 Ex: pantograph build --env app2 will use .env.app2 You can also references these environment variables almost anywhere in pantograph . You can even define a lane to perform actions on multiple targets: desc 'Deploy both versions' lane :deploy_all do sh ( 'pantograph deploy --env paid' ) sh ( 'pantograph deploy --env free' ) end And you can combine multiple envs in one go Ex: pantograph build --env app1,env1,env2 will use .env.app1 .env.env1 and .env.env2 More on the .env file can be found here .","title":"Multiple targets of the same underlying app"},{"location":"faqs/#disable-colored-output","text":"Set the PANTOGRAPH_DISABLE_COLORS environment variable to disable ANSI colors (e.g. for CI machines) export PANTOGRAPH_DISABLE_COLORS = 1","title":"Disable colored output"},{"location":"faqs/#enable-tab-auto-complete-for-pantograph-lane-names","text":"Supported shells: bash , zsh , fish . pantograph enable_auto_complete Follow the on screen prompt to add a line to your bash / zsh / fish profile.","title":"Enable tab auto complete for pantograph lane names"},{"location":"faqs/#user-interaction-is-not-allowed-when-using-pantograph-via-ssh","text":"This error can occur when you run pantograph via SSH. To fix it check out this reply on StackOverflow .","title":"\"User interaction is not allowed\" when using pantograph via SSH"},{"location":"faqs/#some-pantograph-commands-hang-indefinitely-or-produce-strange-errors-and-symbols","text":"Make sure your LC_ALL and LANG variables are set up correctly. pantograph requires an UTF-8 environment, so setting those variables to en_US.UTF-8 should fix your issues.","title":"Some pantograph commands hang indefinitely or produce strange errors and symbols"},{"location":"actions/artifactory/","text":"artifactory This action uploads an artifact to artifactory artifactory Supported platforms mac, linux, windows Author @koglinjg, @tommeier 1 Example artifactory ( username : \"username\" , password : \"password\" , endpoint : \"https://artifactory.example.com/artifactory/\" , file : \"example.ipa\" , # File to upload repo : \"angular_artifacts\" , # Artifactory repo repo_path : \"/project/appname/example-major.minor.jar\" # Path to place the artifact including its filename ) Parameters Key Description Default file File to be uploaded to artifactory repo Artifactory repo to put the file in repo_path Path to deploy within the repo, including filename endpoint Artifactory endpoint username Artifactory username password Artifactory password properties Artifact properties hash {} ssl_pem_file Location of pem file to use for ssl verification ssl_verify Verify SSL true proxy_username Proxy username proxy_password Proxy password proxy_address Proxy address proxy_port Proxy port read_timeout Read timeout * = default value is dependent on the user's system Lane Variables Actions can communicate with each other using a shared hash lane_context , that can be accessed in other actions, plugins or your lanes: lane_context[SharedValues:XYZ] . The artifactory action generates the following Lane Variables: SharedValue Description SharedValues::ARTIFACTORY_DOWNLOAD_URL The download url for file uploaded SharedValues::ARTIFACTORY_DOWNLOAD_SIZE The reported file size for file uploaded To get more information check the Lanes documentation . Documentation To show the documentation in your terminal, run pantograph action artifactory CLI It is recommended to add the above action into your Pantfile , however sometimes you might want to run one-offs. To do so, you can run the following command from your terminal pantograph run artifactory To pass parameters, make use of the : symbol, for example pantograph run artifactory parameter1: \"value1\" parameter2: \"value2\" It's important to note that the CLI supports primitive types like integers, floats, booleans, and strings. Arrays can be passed as a comma delimited string (e.g. param:\"1,2,3\" ). Hashes are not currently supported. It is recommended to add all pantograph actions you use to your Pantfile . Source code This action, just like the rest of pantograph , is fully open source, view the source code on GitHub Back to actions","title":"artifactory"},{"location":"actions/artifactory/#artifactory","text":"This action uploads an artifact to artifactory artifactory Supported platforms mac, linux, windows Author @koglinjg, @tommeier","title":"artifactory"},{"location":"actions/artifactory/#1-example","text":"artifactory ( username : \"username\" , password : \"password\" , endpoint : \"https://artifactory.example.com/artifactory/\" , file : \"example.ipa\" , # File to upload repo : \"angular_artifacts\" , # Artifactory repo repo_path : \"/project/appname/example-major.minor.jar\" # Path to place the artifact including its filename )","title":"1 Example"},{"location":"actions/artifactory/#parameters","text":"Key Description Default file File to be uploaded to artifactory repo Artifactory repo to put the file in repo_path Path to deploy within the repo, including filename endpoint Artifactory endpoint username Artifactory username password Artifactory password properties Artifact properties hash {} ssl_pem_file Location of pem file to use for ssl verification ssl_verify Verify SSL true proxy_username Proxy username proxy_password Proxy password proxy_address Proxy address proxy_port Proxy port read_timeout Read timeout * = default value is dependent on the user's system","title":"Parameters"},{"location":"actions/artifactory/#lane-variables","text":"Actions can communicate with each other using a shared hash lane_context , that can be accessed in other actions, plugins or your lanes: lane_context[SharedValues:XYZ] . The artifactory action generates the following Lane Variables: SharedValue Description SharedValues::ARTIFACTORY_DOWNLOAD_URL The download url for file uploaded SharedValues::ARTIFACTORY_DOWNLOAD_SIZE The reported file size for file uploaded To get more information check the Lanes documentation .","title":"Lane Variables"},{"location":"actions/artifactory/#documentation","text":"To show the documentation in your terminal, run pantograph action artifactory","title":"Documentation"},{"location":"actions/artifactory/#cli","text":"It is recommended to add the above action into your Pantfile , however sometimes you might want to run one-offs. To do so, you can run the following command from your terminal pantograph run artifactory To pass parameters, make use of the : symbol, for example pantograph run artifactory parameter1: \"value1\" parameter2: \"value2\" It's important to note that the CLI supports primitive types like integers, floats, booleans, and strings. Arrays can be passed as a comma delimited string (e.g. param:\"1,2,3\" ). Hashes are not currently supported. It is recommended to add all pantograph actions you use to your Pantfile .","title":"CLI"},{"location":"actions/artifactory/#source-code","text":"This action, just like the rest of pantograph , is fully open source, view the source code on GitHub Back to actions","title":"Source code"},{"location":"actions/bundle_install/","text":"bundle_install This action runs bundle install (if available) bundle_install Supported platforms mac, linux, windows Author @birmacher, @koglinjg Parameters Key Description Default binstubs Generate bin stubs for bundled gems to ./bin clean Run bundle clean automatically after install false full_index Use the rubygems modern index instead of the API endpoint false gemfile Use the specified gemfile instead of Gemfile jobs Install gems using parallel workers local Do not attempt to fetch gems remotely and use the gem cache instead false deployment Install using defaults tuned for deployment and CI environments false no_cache Don't update the existing gem cache false no_prune Don't remove stale gems from the cache false path Specify a different path than the system default ($BUNDLE_PATH or $GEM_HOME). Bundler will remember this value for future installs on this machine system Install to the system location ($BUNDLE_PATH or $GEM_HOME) even if the bundle was previously installed somewhere else for this application false quiet Only output warnings and errors false retry Retry network and git requests that have failed shebang Specify a different shebang executable name than the default (usually 'ruby') standalone Make a bundle that can work without the Bundler runtime trust_policy Sets level of security when dealing with signed gems. Accepts LowSecurity , MediumSecurity and HighSecurity as values without Exclude gems that are part of the specified named group with Include gems that are part of the specified named group * = default value is dependent on the user's system Documentation To show the documentation in your terminal, run pantograph action bundle_install CLI It is recommended to add the above action into your Pantfile , however sometimes you might want to run one-offs. To do so, you can run the following command from your terminal pantograph run bundle_install To pass parameters, make use of the : symbol, for example pantograph run bundle_install parameter1: \"value1\" parameter2: \"value2\" It's important to note that the CLI supports primitive types like integers, floats, booleans, and strings. Arrays can be passed as a comma delimited string (e.g. param:\"1,2,3\" ). Hashes are not currently supported. It is recommended to add all pantograph actions you use to your Pantfile . Source code This action, just like the rest of pantograph , is fully open source, view the source code on GitHub Back to actions","title":"bundle_install"},{"location":"actions/bundle_install/#bundle_install","text":"This action runs bundle install (if available) bundle_install Supported platforms mac, linux, windows Author @birmacher, @koglinjg","title":"bundle_install"},{"location":"actions/bundle_install/#parameters","text":"Key Description Default binstubs Generate bin stubs for bundled gems to ./bin clean Run bundle clean automatically after install false full_index Use the rubygems modern index instead of the API endpoint false gemfile Use the specified gemfile instead of Gemfile jobs Install gems using parallel workers local Do not attempt to fetch gems remotely and use the gem cache instead false deployment Install using defaults tuned for deployment and CI environments false no_cache Don't update the existing gem cache false no_prune Don't remove stale gems from the cache false path Specify a different path than the system default ($BUNDLE_PATH or $GEM_HOME). Bundler will remember this value for future installs on this machine system Install to the system location ($BUNDLE_PATH or $GEM_HOME) even if the bundle was previously installed somewhere else for this application false quiet Only output warnings and errors false retry Retry network and git requests that have failed shebang Specify a different shebang executable name than the default (usually 'ruby') standalone Make a bundle that can work without the Bundler runtime trust_policy Sets level of security when dealing with signed gems. Accepts LowSecurity , MediumSecurity and HighSecurity as values without Exclude gems that are part of the specified named group with Include gems that are part of the specified named group * = default value is dependent on the user's system","title":"Parameters"},{"location":"actions/bundle_install/#documentation","text":"To show the documentation in your terminal, run pantograph action bundle_install","title":"Documentation"},{"location":"actions/bundle_install/#cli","text":"It is recommended to add the above action into your Pantfile , however sometimes you might want to run one-offs. To do so, you can run the following command from your terminal pantograph run bundle_install To pass parameters, make use of the : symbol, for example pantograph run bundle_install parameter1: \"value1\" parameter2: \"value2\" It's important to note that the CLI supports primitive types like integers, floats, booleans, and strings. Arrays can be passed as a comma delimited string (e.g. param:\"1,2,3\" ). Hashes are not currently supported. It is recommended to add all pantograph actions you use to your Pantfile .","title":"CLI"},{"location":"actions/bundle_install/#source-code","text":"This action, just like the rest of pantograph , is fully open source, view the source code on GitHub Back to actions","title":"Source code"},{"location":"actions/changelog_from_git_commits/","text":"changelog_from_git_commits Collect git commit messages into a changelog By default, messages will be collected back to the last tag, but the range can be controlled changelog_from_git_commits Supported platforms mac, linux, windows Author @mfurtak, @asfalcone, @SiarheiFedartsou, @allewun Returns Returns a String containing your formatted git commits 2 Examples changelog_from_git_commits changelog_from_git_commits ( between : [ \"7b092b3\" , \"HEAD\" ] , # Optional, lets you specify a revision/tag range between which to collect commit info pretty : \"- (%ae) %s\" , # Optional, lets you provide a custom format to apply to each commit when generating the changelog text date_format : \"short\" , # Optional, lets you provide an additional date format to dates within the pretty-formatted string match_lightweight_tag : false , # Optional, lets you ignore lightweight (non-annotated) tags when searching for the last tag merge_commit_filtering : \"exclude_merges\" # Optional, lets you filter out merge commits ) Parameters Key Description Default between Array containing two Git revision values between which to collect messages, you mustn't use it with :commits_count key at the same time commits_count Number of commits to include in changelog, you mustn't use it with :between key at the same time path Path of the git repository ./ pretty The format applied to each commit while generating the collected value %B date_format The date format applied to each commit while generating the collected value ancestry_path Whether or not to use ancestry-path param false tag_match_pattern A glob(7) pattern to match against when finding the last git tag match_lightweight_tag Whether or not to match a lightweight tag when searching for the last one true quiet Whether or not to disable changelog output false include_merges DEPRECATED! Use :merge_commit_filtering instead - Whether or not to include any commits that are merges merge_commit_filtering Controls inclusion of merge commits when collecting the changelog. Valid values: :include_merges , :exclude_merges , :only_include_merges include_merges * = default value is dependent on the user's system Lane Variables Actions can communicate with each other using a shared hash lane_context , that can be accessed in other actions, plugins or your lanes: lane_context[SharedValues:XYZ] . The changelog_from_git_commits action generates the following Lane Variables: SharedValue Description SharedValues::PANT_CHANGELOG The changelog string generated from the collected git commit messages To get more information check the Lanes documentation . Documentation To show the documentation in your terminal, run pantograph action changelog_from_git_commits CLI It is recommended to add the above action into your Pantfile , however sometimes you might want to run one-offs. To do so, you can run the following command from your terminal pantograph run changelog_from_git_commits To pass parameters, make use of the : symbol, for example pantograph run changelog_from_git_commits parameter1: \"value1\" parameter2: \"value2\" It's important to note that the CLI supports primitive types like integers, floats, booleans, and strings. Arrays can be passed as a comma delimited string (e.g. param:\"1,2,3\" ). Hashes are not currently supported. It is recommended to add all pantograph actions you use to your Pantfile . Source code This action, just like the rest of pantograph , is fully open source, view the source code on GitHub Back to actions","title":"changelog_from_git_commits"},{"location":"actions/changelog_from_git_commits/#changelog_from_git_commits","text":"Collect git commit messages into a changelog By default, messages will be collected back to the last tag, but the range can be controlled changelog_from_git_commits Supported platforms mac, linux, windows Author @mfurtak, @asfalcone, @SiarheiFedartsou, @allewun Returns Returns a String containing your formatted git commits","title":"changelog_from_git_commits"},{"location":"actions/changelog_from_git_commits/#2-examples","text":"changelog_from_git_commits changelog_from_git_commits ( between : [ \"7b092b3\" , \"HEAD\" ] , # Optional, lets you specify a revision/tag range between which to collect commit info pretty : \"- (%ae) %s\" , # Optional, lets you provide a custom format to apply to each commit when generating the changelog text date_format : \"short\" , # Optional, lets you provide an additional date format to dates within the pretty-formatted string match_lightweight_tag : false , # Optional, lets you ignore lightweight (non-annotated) tags when searching for the last tag merge_commit_filtering : \"exclude_merges\" # Optional, lets you filter out merge commits )","title":"2 Examples"},{"location":"actions/changelog_from_git_commits/#parameters","text":"Key Description Default between Array containing two Git revision values between which to collect messages, you mustn't use it with :commits_count key at the same time commits_count Number of commits to include in changelog, you mustn't use it with :between key at the same time path Path of the git repository ./ pretty The format applied to each commit while generating the collected value %B date_format The date format applied to each commit while generating the collected value ancestry_path Whether or not to use ancestry-path param false tag_match_pattern A glob(7) pattern to match against when finding the last git tag match_lightweight_tag Whether or not to match a lightweight tag when searching for the last one true quiet Whether or not to disable changelog output false include_merges DEPRECATED! Use :merge_commit_filtering instead - Whether or not to include any commits that are merges merge_commit_filtering Controls inclusion of merge commits when collecting the changelog. Valid values: :include_merges , :exclude_merges , :only_include_merges include_merges * = default value is dependent on the user's system","title":"Parameters"},{"location":"actions/changelog_from_git_commits/#lane-variables","text":"Actions can communicate with each other using a shared hash lane_context , that can be accessed in other actions, plugins or your lanes: lane_context[SharedValues:XYZ] . The changelog_from_git_commits action generates the following Lane Variables: SharedValue Description SharedValues::PANT_CHANGELOG The changelog string generated from the collected git commit messages To get more information check the Lanes documentation .","title":"Lane Variables"},{"location":"actions/changelog_from_git_commits/#documentation","text":"To show the documentation in your terminal, run pantograph action changelog_from_git_commits","title":"Documentation"},{"location":"actions/changelog_from_git_commits/#cli","text":"It is recommended to add the above action into your Pantfile , however sometimes you might want to run one-offs. To do so, you can run the following command from your terminal pantograph run changelog_from_git_commits To pass parameters, make use of the : symbol, for example pantograph run changelog_from_git_commits parameter1: \"value1\" parameter2: \"value2\" It's important to note that the CLI supports primitive types like integers, floats, booleans, and strings. Arrays can be passed as a comma delimited string (e.g. param:\"1,2,3\" ). Hashes are not currently supported. It is recommended to add all pantograph actions you use to your Pantfile .","title":"CLI"},{"location":"actions/changelog_from_git_commits/#source-code","text":"This action, just like the rest of pantograph , is fully open source, view the source code on GitHub Back to actions","title":"Source code"},{"location":"actions/cloc/","text":"cloc Generates a Code Count that can be read by Jenkins (xml format) This action will run cloc to generate a code count report See https://github.com/AlDanial/cloc for more information. cloc Supported platforms mac Author @johnknapprs 1 Example # Generate JSON report of project code count cloc ( exclude_dir : \"build\" , source_directory : \".\" , output_directory : \"pantograph/reports\" , output_type : \"json\" ) Parameters Key Description Default binary_path Where the cloc binary lives on your system (full path including \"cloc\") /usr/local/bin/cloc exclude_dir Comma separated list of directories to exclude source_directory Starting point for Cloc analysis . output_directory Where to put the generated report file pantograph/reports output_type Output file type: xml, yaml, cvs, json yaml list_each_file List each individual file in cloc report true * = default value is dependent on the user's system Documentation To show the documentation in your terminal, run pantograph action cloc CLI It is recommended to add the above action into your Pantfile , however sometimes you might want to run one-offs. To do so, you can run the following command from your terminal pantograph run cloc To pass parameters, make use of the : symbol, for example pantograph run cloc parameter1: \"value1\" parameter2: \"value2\" It's important to note that the CLI supports primitive types like integers, floats, booleans, and strings. Arrays can be passed as a comma delimited string (e.g. param:\"1,2,3\" ). Hashes are not currently supported. It is recommended to add all pantograph actions you use to your Pantfile . Source code This action, just like the rest of pantograph , is fully open source, view the source code on GitHub Back to actions","title":"cloc"},{"location":"actions/cloc/#cloc","text":"Generates a Code Count that can be read by Jenkins (xml format) This action will run cloc to generate a code count report See https://github.com/AlDanial/cloc for more information. cloc Supported platforms mac Author @johnknapprs","title":"cloc"},{"location":"actions/cloc/#1-example","text":"# Generate JSON report of project code count cloc ( exclude_dir : \"build\" , source_directory : \".\" , output_directory : \"pantograph/reports\" , output_type : \"json\" )","title":"1 Example"},{"location":"actions/cloc/#parameters","text":"Key Description Default binary_path Where the cloc binary lives on your system (full path including \"cloc\") /usr/local/bin/cloc exclude_dir Comma separated list of directories to exclude source_directory Starting point for Cloc analysis . output_directory Where to put the generated report file pantograph/reports output_type Output file type: xml, yaml, cvs, json yaml list_each_file List each individual file in cloc report true * = default value is dependent on the user's system","title":"Parameters"},{"location":"actions/cloc/#documentation","text":"To show the documentation in your terminal, run pantograph action cloc","title":"Documentation"},{"location":"actions/cloc/#cli","text":"It is recommended to add the above action into your Pantfile , however sometimes you might want to run one-offs. To do so, you can run the following command from your terminal pantograph run cloc To pass parameters, make use of the : symbol, for example pantograph run cloc parameter1: \"value1\" parameter2: \"value2\" It's important to note that the CLI supports primitive types like integers, floats, booleans, and strings. Arrays can be passed as a comma delimited string (e.g. param:\"1,2,3\" ). Hashes are not currently supported. It is recommended to add all pantograph actions you use to your Pantfile .","title":"CLI"},{"location":"actions/cloc/#source-code","text":"This action, just like the rest of pantograph , is fully open source, view the source code on GitHub Back to actions","title":"Source code"},{"location":"actions/create_pull_request/","text":"create_pull_request This will create a new pull request on GitHub create_pull_request Supported platforms mac, linux, windows Author @seei, @tommeier, @marumemomo Returns The pull request URL when successful 1 Example create_pull_request ( api_token : \"secret\" , # optional, defaults to ENV[\"GITHUB_API_TOKEN\"] repo : \"johnknapprs/pantograph\" , title : \"Amazing new feature\" , head : \"my-feature\" , # optional, defaults to current branch name base : \"master\" , # optional, defaults to \"master\" body : \"Please pull this in!\" , # optional api_url : \"http://yourdomain/api/v3\" # optional, for GitHub Enterprise, defaults to \"https://api.github.com\" ) Parameters Key Description Default api_token Personal API Token for GitHub - generate one at https://github.com/settings/tokens * repo The name of the repository you want to submit the pull request to title The title of the pull request body The contents of the pull request labels The labels for the pull request head The name of the branch where your changes are implemented (defaults to the current branch name) * base The name of the branch you want your changes pulled into (defaults to master ) master api_url The URL of GitHub API - used when the Enterprise (default to https://api.github.com ) https://api.github.com assignees The assignees for the pull request * = default value is dependent on the user's system Lane Variables Actions can communicate with each other using a shared hash lane_context , that can be accessed in other actions, plugins or your lanes: lane_context[SharedValues:XYZ] . The create_pull_request action generates the following Lane Variables: SharedValue Description SharedValues::CREATE_PULL_REQUEST_HTML_URL The HTML URL to the created pull request To get more information check the Lanes documentation . Documentation To show the documentation in your terminal, run pantograph action create_pull_request CLI It is recommended to add the above action into your Pantfile , however sometimes you might want to run one-offs. To do so, you can run the following command from your terminal pantograph run create_pull_request To pass parameters, make use of the : symbol, for example pantograph run create_pull_request parameter1: \"value1\" parameter2: \"value2\" It's important to note that the CLI supports primitive types like integers, floats, booleans, and strings. Arrays can be passed as a comma delimited string (e.g. param:\"1,2,3\" ). Hashes are not currently supported. It is recommended to add all pantograph actions you use to your Pantfile . Source code This action, just like the rest of pantograph , is fully open source, view the source code on GitHub Back to actions","title":"create_pull_request"},{"location":"actions/create_pull_request/#create_pull_request","text":"This will create a new pull request on GitHub create_pull_request Supported platforms mac, linux, windows Author @seei, @tommeier, @marumemomo Returns The pull request URL when successful","title":"create_pull_request"},{"location":"actions/create_pull_request/#1-example","text":"create_pull_request ( api_token : \"secret\" , # optional, defaults to ENV[\"GITHUB_API_TOKEN\"] repo : \"johnknapprs/pantograph\" , title : \"Amazing new feature\" , head : \"my-feature\" , # optional, defaults to current branch name base : \"master\" , # optional, defaults to \"master\" body : \"Please pull this in!\" , # optional api_url : \"http://yourdomain/api/v3\" # optional, for GitHub Enterprise, defaults to \"https://api.github.com\" )","title":"1 Example"},{"location":"actions/create_pull_request/#parameters","text":"Key Description Default api_token Personal API Token for GitHub - generate one at https://github.com/settings/tokens * repo The name of the repository you want to submit the pull request to title The title of the pull request body The contents of the pull request labels The labels for the pull request head The name of the branch where your changes are implemented (defaults to the current branch name) * base The name of the branch you want your changes pulled into (defaults to master ) master api_url The URL of GitHub API - used when the Enterprise (default to https://api.github.com ) https://api.github.com assignees The assignees for the pull request * = default value is dependent on the user's system","title":"Parameters"},{"location":"actions/create_pull_request/#lane-variables","text":"Actions can communicate with each other using a shared hash lane_context , that can be accessed in other actions, plugins or your lanes: lane_context[SharedValues:XYZ] . The create_pull_request action generates the following Lane Variables: SharedValue Description SharedValues::CREATE_PULL_REQUEST_HTML_URL The HTML URL to the created pull request To get more information check the Lanes documentation .","title":"Lane Variables"},{"location":"actions/create_pull_request/#documentation","text":"To show the documentation in your terminal, run pantograph action create_pull_request","title":"Documentation"},{"location":"actions/create_pull_request/#cli","text":"It is recommended to add the above action into your Pantfile , however sometimes you might want to run one-offs. To do so, you can run the following command from your terminal pantograph run create_pull_request To pass parameters, make use of the : symbol, for example pantograph run create_pull_request parameter1: \"value1\" parameter2: \"value2\" It's important to note that the CLI supports primitive types like integers, floats, booleans, and strings. Arrays can be passed as a comma delimited string (e.g. param:\"1,2,3\" ). Hashes are not currently supported. It is recommended to add all pantograph actions you use to your Pantfile .","title":"CLI"},{"location":"actions/create_pull_request/#source-code","text":"This action, just like the rest of pantograph , is fully open source, view the source code on GitHub Back to actions","title":"Source code"},{"location":"actions/danger/","text":"danger Runs danger for the project Stop Saying your Forgot in Source Control More information: https://github.com/danger/danger . danger Supported platforms mac, linux, windows Author @KrauseFx, @johnknapprs 2 Examples danger danger ( danger_id : \"unit-tests\" , dangerfile : \"tests/MyOtherDangerFile\" , github_api_token : ENV [ \"GITHUB_API_TOKEN\" ] , verbose : true ) Parameters Key Description Default use_bundle_exec Use bundle exec when there is a Gemfile presented true verbose Show more debugging information false danger_id The identifier of this Danger instance dangerfile The location of your Dangerfile Dangerfile github_api_token GitHub API token for danger fail_on_errors Should always fail the build process, defaults to false false new_comment Makes Danger post a new comment instead of editing its previous one false remove_previous_comments Makes Danger remove all previous comment and create a new one in the end of the list false base A branch/tag/commit to use as the base of the diff. [master|dev|stable] head A branch/tag/commit to use as the head. [master|dev|stable] pr Run danger on a specific pull request. e.g. \\\"https://github.com/danger/danger/pull/518\\\" * = default value is dependent on the user's system Documentation To show the documentation in your terminal, run pantograph action danger CLI It is recommended to add the above action into your Pantfile , however sometimes you might want to run one-offs. To do so, you can run the following command from your terminal pantograph run danger To pass parameters, make use of the : symbol, for example pantograph run danger parameter1: \"value1\" parameter2: \"value2\" It's important to note that the CLI supports primitive types like integers, floats, booleans, and strings. Arrays can be passed as a comma delimited string (e.g. param:\"1,2,3\" ). Hashes are not currently supported. It is recommended to add all pantograph actions you use to your Pantfile . Source code This action, just like the rest of pantograph , is fully open source, view the source code on GitHub Back to actions","title":"danger"},{"location":"actions/danger/#danger","text":"Runs danger for the project Stop Saying your Forgot in Source Control More information: https://github.com/danger/danger . danger Supported platforms mac, linux, windows Author @KrauseFx, @johnknapprs","title":"danger"},{"location":"actions/danger/#2-examples","text":"danger danger ( danger_id : \"unit-tests\" , dangerfile : \"tests/MyOtherDangerFile\" , github_api_token : ENV [ \"GITHUB_API_TOKEN\" ] , verbose : true )","title":"2 Examples"},{"location":"actions/danger/#parameters","text":"Key Description Default use_bundle_exec Use bundle exec when there is a Gemfile presented true verbose Show more debugging information false danger_id The identifier of this Danger instance dangerfile The location of your Dangerfile Dangerfile github_api_token GitHub API token for danger fail_on_errors Should always fail the build process, defaults to false false new_comment Makes Danger post a new comment instead of editing its previous one false remove_previous_comments Makes Danger remove all previous comment and create a new one in the end of the list false base A branch/tag/commit to use as the base of the diff. [master|dev|stable] head A branch/tag/commit to use as the head. [master|dev|stable] pr Run danger on a specific pull request. e.g. \\\"https://github.com/danger/danger/pull/518\\\" * = default value is dependent on the user's system","title":"Parameters"},{"location":"actions/danger/#documentation","text":"To show the documentation in your terminal, run pantograph action danger","title":"Documentation"},{"location":"actions/danger/#cli","text":"It is recommended to add the above action into your Pantfile , however sometimes you might want to run one-offs. To do so, you can run the following command from your terminal pantograph run danger To pass parameters, make use of the : symbol, for example pantograph run danger parameter1: \"value1\" parameter2: \"value2\" It's important to note that the CLI supports primitive types like integers, floats, booleans, and strings. Arrays can be passed as a comma delimited string (e.g. param:\"1,2,3\" ). Hashes are not currently supported. It is recommended to add all pantograph actions you use to your Pantfile .","title":"CLI"},{"location":"actions/danger/#source-code","text":"This action, just like the rest of pantograph , is fully open source, view the source code on GitHub Back to actions","title":"Source code"},{"location":"actions/debug/","text":"debug Print out an overview of the lane context values debug Supported platforms mac, linux, windows Author @KrauseFx 1 Example debug Documentation To show the documentation in your terminal, run pantograph action debug CLI It is recommended to add the above action into your Pantfile , however sometimes you might want to run one-offs. To do so, you can run the following command from your terminal pantograph run debug To pass parameters, make use of the : symbol, for example pantograph run debug parameter1: \"value1\" parameter2: \"value2\" It's important to note that the CLI supports primitive types like integers, floats, booleans, and strings. Arrays can be passed as a comma delimited string (e.g. param:\"1,2,3\" ). Hashes are not currently supported. It is recommended to add all pantograph actions you use to your Pantfile . Source code This action, just like the rest of pantograph , is fully open source, view the source code on GitHub Back to actions","title":"debug"},{"location":"actions/debug/#debug","text":"Print out an overview of the lane context values debug Supported platforms mac, linux, windows Author @KrauseFx","title":"debug"},{"location":"actions/debug/#1-example","text":"debug","title":"1 Example"},{"location":"actions/debug/#documentation","text":"To show the documentation in your terminal, run pantograph action debug","title":"Documentation"},{"location":"actions/debug/#cli","text":"It is recommended to add the above action into your Pantfile , however sometimes you might want to run one-offs. To do so, you can run the following command from your terminal pantograph run debug To pass parameters, make use of the : symbol, for example pantograph run debug parameter1: \"value1\" parameter2: \"value2\" It's important to note that the CLI supports primitive types like integers, floats, booleans, and strings. Arrays can be passed as a comma delimited string (e.g. param:\"1,2,3\" ). Hashes are not currently supported. It is recommended to add all pantograph actions you use to your Pantfile .","title":"CLI"},{"location":"actions/debug/#source-code","text":"This action, just like the rest of pantograph , is fully open source, view the source code on GitHub Back to actions","title":"Source code"},{"location":"actions/default_platform/","text":"default_platform Defines a default platform to not have to specify the platform default_platform Supported platforms mac, linux, windows Author @KrauseFx 1 Example default_platform ( :gradle ) Lane Variables Actions can communicate with each other using a shared hash lane_context , that can be accessed in other actions, plugins or your lanes: lane_context[SharedValues:XYZ] . The default_platform action generates the following Lane Variables: SharedValue Description SharedValues::DEFAULT_PLATFORM The default platform To get more information check the Lanes documentation . Documentation To show the documentation in your terminal, run pantograph action default_platform CLI It is recommended to add the above action into your Pantfile , however sometimes you might want to run one-offs. To do so, you can run the following command from your terminal pantograph run default_platform To pass parameters, make use of the : symbol, for example pantograph run default_platform parameter1: \"value1\" parameter2: \"value2\" It's important to note that the CLI supports primitive types like integers, floats, booleans, and strings. Arrays can be passed as a comma delimited string (e.g. param:\"1,2,3\" ). Hashes are not currently supported. It is recommended to add all pantograph actions you use to your Pantfile . Source code This action, just like the rest of pantograph , is fully open source, view the source code on GitHub Back to actions","title":"default_platform"},{"location":"actions/default_platform/#default_platform","text":"Defines a default platform to not have to specify the platform default_platform Supported platforms mac, linux, windows Author @KrauseFx","title":"default_platform"},{"location":"actions/default_platform/#1-example","text":"default_platform ( :gradle )","title":"1 Example"},{"location":"actions/default_platform/#lane-variables","text":"Actions can communicate with each other using a shared hash lane_context , that can be accessed in other actions, plugins or your lanes: lane_context[SharedValues:XYZ] . The default_platform action generates the following Lane Variables: SharedValue Description SharedValues::DEFAULT_PLATFORM The default platform To get more information check the Lanes documentation .","title":"Lane Variables"},{"location":"actions/default_platform/#documentation","text":"To show the documentation in your terminal, run pantograph action default_platform","title":"Documentation"},{"location":"actions/default_platform/#cli","text":"It is recommended to add the above action into your Pantfile , however sometimes you might want to run one-offs. To do so, you can run the following command from your terminal pantograph run default_platform To pass parameters, make use of the : symbol, for example pantograph run default_platform parameter1: \"value1\" parameter2: \"value2\" It's important to note that the CLI supports primitive types like integers, floats, booleans, and strings. Arrays can be passed as a comma delimited string (e.g. param:\"1,2,3\" ). Hashes are not currently supported. It is recommended to add all pantograph actions you use to your Pantfile .","title":"CLI"},{"location":"actions/default_platform/#source-code","text":"This action, just like the rest of pantograph , is fully open source, view the source code on GitHub Back to actions","title":"Source code"},{"location":"actions/download/","text":"download Download a file from a remote server (e.g. JSON file) Specify the URL to download and get the content as a return value. Automatically parses JSON into a Ruby data structure. download Supported platforms mac, linux, windows Author @KrauseFx 1 Example data = download ( url : \"https://host.com/api.json\" ) Parameters Key Description Default url The URL that should be downloaded * = default value is dependent on the user's system Lane Variables Actions can communicate with each other using a shared hash lane_context , that can be accessed in other actions, plugins or your lanes: lane_context[SharedValues:XYZ] . The download action generates the following Lane Variables: SharedValue Description SharedValues::DOWNLOAD_CONTENT The content of the file we just downloaded To get more information check the Lanes documentation . Documentation To show the documentation in your terminal, run pantograph action download CLI It is recommended to add the above action into your Pantfile , however sometimes you might want to run one-offs. To do so, you can run the following command from your terminal pantograph run download To pass parameters, make use of the : symbol, for example pantograph run download parameter1: \"value1\" parameter2: \"value2\" It's important to note that the CLI supports primitive types like integers, floats, booleans, and strings. Arrays can be passed as a comma delimited string (e.g. param:\"1,2,3\" ). Hashes are not currently supported. It is recommended to add all pantograph actions you use to your Pantfile . Source code This action, just like the rest of pantograph , is fully open source, view the source code on GitHub Back to actions","title":"download"},{"location":"actions/download/#download","text":"Download a file from a remote server (e.g. JSON file) Specify the URL to download and get the content as a return value. Automatically parses JSON into a Ruby data structure. download Supported platforms mac, linux, windows Author @KrauseFx","title":"download"},{"location":"actions/download/#1-example","text":"data = download ( url : \"https://host.com/api.json\" )","title":"1 Example"},{"location":"actions/download/#parameters","text":"Key Description Default url The URL that should be downloaded * = default value is dependent on the user's system","title":"Parameters"},{"location":"actions/download/#lane-variables","text":"Actions can communicate with each other using a shared hash lane_context , that can be accessed in other actions, plugins or your lanes: lane_context[SharedValues:XYZ] . The download action generates the following Lane Variables: SharedValue Description SharedValues::DOWNLOAD_CONTENT The content of the file we just downloaded To get more information check the Lanes documentation .","title":"Lane Variables"},{"location":"actions/download/#documentation","text":"To show the documentation in your terminal, run pantograph action download","title":"Documentation"},{"location":"actions/download/#cli","text":"It is recommended to add the above action into your Pantfile , however sometimes you might want to run one-offs. To do so, you can run the following command from your terminal pantograph run download To pass parameters, make use of the : symbol, for example pantograph run download parameter1: \"value1\" parameter2: \"value2\" It's important to note that the CLI supports primitive types like integers, floats, booleans, and strings. Arrays can be passed as a comma delimited string (e.g. param:\"1,2,3\" ). Hashes are not currently supported. It is recommended to add all pantograph actions you use to your Pantfile .","title":"CLI"},{"location":"actions/download/#source-code","text":"This action, just like the rest of pantograph , is fully open source, view the source code on GitHub Back to actions","title":"Source code"},{"location":"actions/echo/","text":"echo Alias for the puts action echo Supported platforms mac, linux, windows Author @KrauseFx 1 Example puts \"Hi there\" Parameters Key Description Default message Message to be printed out * = default value is dependent on the user's system Documentation To show the documentation in your terminal, run pantograph action echo CLI It is recommended to add the above action into your Pantfile , however sometimes you might want to run one-offs. To do so, you can run the following command from your terminal pantograph run echo To pass parameters, make use of the : symbol, for example pantograph run echo parameter1: \"value1\" parameter2: \"value2\" It's important to note that the CLI supports primitive types like integers, floats, booleans, and strings. Arrays can be passed as a comma delimited string (e.g. param:\"1,2,3\" ). Hashes are not currently supported. It is recommended to add all pantograph actions you use to your Pantfile . Source code This action, just like the rest of pantograph , is fully open source, view the source code on GitHub Back to actions","title":"echo"},{"location":"actions/echo/#echo","text":"Alias for the puts action echo Supported platforms mac, linux, windows Author @KrauseFx","title":"echo"},{"location":"actions/echo/#1-example","text":"puts \"Hi there\"","title":"1 Example"},{"location":"actions/echo/#parameters","text":"Key Description Default message Message to be printed out * = default value is dependent on the user's system","title":"Parameters"},{"location":"actions/echo/#documentation","text":"To show the documentation in your terminal, run pantograph action echo","title":"Documentation"},{"location":"actions/echo/#cli","text":"It is recommended to add the above action into your Pantfile , however sometimes you might want to run one-offs. To do so, you can run the following command from your terminal pantograph run echo To pass parameters, make use of the : symbol, for example pantograph run echo parameter1: \"value1\" parameter2: \"value2\" It's important to note that the CLI supports primitive types like integers, floats, booleans, and strings. Arrays can be passed as a comma delimited string (e.g. param:\"1,2,3\" ). Hashes are not currently supported. It is recommended to add all pantograph actions you use to your Pantfile .","title":"CLI"},{"location":"actions/echo/#source-code","text":"This action, just like the rest of pantograph , is fully open source, view the source code on GitHub Back to actions","title":"Source code"},{"location":"actions/ensure_bundle_exec/","text":"ensure_bundle_exec Raises an exception if not using bundle exec to run pantograph This action will check if you are using bundle exec to run pantograph. ensure_bundle_exec Supported platforms mac, linux, windows Author @rishabhtayal, @johnknapprs 2 Examples ensure_bundle_exec # always check before running a lane before_all do ensure_bundle_exec end Documentation To show the documentation in your terminal, run pantograph action ensure_bundle_exec CLI It is recommended to add the above action into your Pantfile , however sometimes you might want to run one-offs. To do so, you can run the following command from your terminal pantograph run ensure_bundle_exec To pass parameters, make use of the : symbol, for example pantograph run ensure_bundle_exec parameter1: \"value1\" parameter2: \"value2\" It's important to note that the CLI supports primitive types like integers, floats, booleans, and strings. Arrays can be passed as a comma delimited string (e.g. param:\"1,2,3\" ). Hashes are not currently supported. It is recommended to add all pantograph actions you use to your Pantfile . Source code This action, just like the rest of pantograph , is fully open source, view the source code on GitHub Back to actions","title":"ensure_bundle_exec"},{"location":"actions/ensure_bundle_exec/#ensure_bundle_exec","text":"Raises an exception if not using bundle exec to run pantograph This action will check if you are using bundle exec to run pantograph. ensure_bundle_exec Supported platforms mac, linux, windows Author @rishabhtayal, @johnknapprs","title":"ensure_bundle_exec"},{"location":"actions/ensure_bundle_exec/#2-examples","text":"ensure_bundle_exec # always check before running a lane before_all do ensure_bundle_exec end","title":"2 Examples"},{"location":"actions/ensure_bundle_exec/#documentation","text":"To show the documentation in your terminal, run pantograph action ensure_bundle_exec","title":"Documentation"},{"location":"actions/ensure_bundle_exec/#cli","text":"It is recommended to add the above action into your Pantfile , however sometimes you might want to run one-offs. To do so, you can run the following command from your terminal pantograph run ensure_bundle_exec To pass parameters, make use of the : symbol, for example pantograph run ensure_bundle_exec parameter1: \"value1\" parameter2: \"value2\" It's important to note that the CLI supports primitive types like integers, floats, booleans, and strings. Arrays can be passed as a comma delimited string (e.g. param:\"1,2,3\" ). Hashes are not currently supported. It is recommended to add all pantograph actions you use to your Pantfile .","title":"CLI"},{"location":"actions/ensure_bundle_exec/#source-code","text":"This action, just like the rest of pantograph , is fully open source, view the source code on GitHub Back to actions","title":"Source code"},{"location":"actions/ensure_env_vars/","text":"ensure_env_vars Raises an exception if the specified env vars are not set ensure_env_vars Supported platforms mac, linux, windows Author @johnknapprs 1 Example ensure_env_vars ( vars : [ 'GITHUB_USER_NAME' , 'GITHUB_API_TOKEN' ] ) Parameters Key Description Default vars The ENV variables keys to verify * = default value is dependent on the user's system Documentation To show the documentation in your terminal, run pantograph action ensure_env_vars CLI It is recommended to add the above action into your Pantfile , however sometimes you might want to run one-offs. To do so, you can run the following command from your terminal pantograph run ensure_env_vars To pass parameters, make use of the : symbol, for example pantograph run ensure_env_vars parameter1: \"value1\" parameter2: \"value2\" It's important to note that the CLI supports primitive types like integers, floats, booleans, and strings. Arrays can be passed as a comma delimited string (e.g. param:\"1,2,3\" ). Hashes are not currently supported. It is recommended to add all pantograph actions you use to your Pantfile . Source code This action, just like the rest of pantograph , is fully open source, view the source code on GitHub Back to actions","title":"ensure_env_vars"},{"location":"actions/ensure_env_vars/#ensure_env_vars","text":"Raises an exception if the specified env vars are not set ensure_env_vars Supported platforms mac, linux, windows Author @johnknapprs","title":"ensure_env_vars"},{"location":"actions/ensure_env_vars/#1-example","text":"ensure_env_vars ( vars : [ 'GITHUB_USER_NAME' , 'GITHUB_API_TOKEN' ] )","title":"1 Example"},{"location":"actions/ensure_env_vars/#parameters","text":"Key Description Default vars The ENV variables keys to verify * = default value is dependent on the user's system","title":"Parameters"},{"location":"actions/ensure_env_vars/#documentation","text":"To show the documentation in your terminal, run pantograph action ensure_env_vars","title":"Documentation"},{"location":"actions/ensure_env_vars/#cli","text":"It is recommended to add the above action into your Pantfile , however sometimes you might want to run one-offs. To do so, you can run the following command from your terminal pantograph run ensure_env_vars To pass parameters, make use of the : symbol, for example pantograph run ensure_env_vars parameter1: \"value1\" parameter2: \"value2\" It's important to note that the CLI supports primitive types like integers, floats, booleans, and strings. Arrays can be passed as a comma delimited string (e.g. param:\"1,2,3\" ). Hashes are not currently supported. It is recommended to add all pantograph actions you use to your Pantfile .","title":"CLI"},{"location":"actions/ensure_env_vars/#source-code","text":"This action, just like the rest of pantograph , is fully open source, view the source code on GitHub Back to actions","title":"Source code"},{"location":"actions/ensure_git_branch/","text":"ensure_git_branch Raises an exception if not on a specific git branch This action will check if your git repo is checked out to a specific branch. You may only want to make releases from a specific branch, so ensure_git_branch will stop a lane if it was accidentally executed on an incorrect branch. ensure_git_branch Supported platforms mac, linux, windows Author @dbachrach, @Liquidsoul, @johnknapprs 2 Examples ensure_git_branch # defaults to `master` branch ensure_git_branch ( branch : 'develop' ) Parameters Key Description Default branch The branch that should be checked for. String that can be either the full name of the branch or a regex to match master * = default value is dependent on the user's system Documentation To show the documentation in your terminal, run pantograph action ensure_git_branch CLI It is recommended to add the above action into your Pantfile , however sometimes you might want to run one-offs. To do so, you can run the following command from your terminal pantograph run ensure_git_branch To pass parameters, make use of the : symbol, for example pantograph run ensure_git_branch parameter1: \"value1\" parameter2: \"value2\" It's important to note that the CLI supports primitive types like integers, floats, booleans, and strings. Arrays can be passed as a comma delimited string (e.g. param:\"1,2,3\" ). Hashes are not currently supported. It is recommended to add all pantograph actions you use to your Pantfile . Source code This action, just like the rest of pantograph , is fully open source, view the source code on GitHub Back to actions","title":"ensure_git_branch"},{"location":"actions/ensure_git_branch/#ensure_git_branch","text":"Raises an exception if not on a specific git branch This action will check if your git repo is checked out to a specific branch. You may only want to make releases from a specific branch, so ensure_git_branch will stop a lane if it was accidentally executed on an incorrect branch. ensure_git_branch Supported platforms mac, linux, windows Author @dbachrach, @Liquidsoul, @johnknapprs","title":"ensure_git_branch"},{"location":"actions/ensure_git_branch/#2-examples","text":"ensure_git_branch # defaults to `master` branch ensure_git_branch ( branch : 'develop' )","title":"2 Examples"},{"location":"actions/ensure_git_branch/#parameters","text":"Key Description Default branch The branch that should be checked for. String that can be either the full name of the branch or a regex to match master * = default value is dependent on the user's system","title":"Parameters"},{"location":"actions/ensure_git_branch/#documentation","text":"To show the documentation in your terminal, run pantograph action ensure_git_branch","title":"Documentation"},{"location":"actions/ensure_git_branch/#cli","text":"It is recommended to add the above action into your Pantfile , however sometimes you might want to run one-offs. To do so, you can run the following command from your terminal pantograph run ensure_git_branch To pass parameters, make use of the : symbol, for example pantograph run ensure_git_branch parameter1: \"value1\" parameter2: \"value2\" It's important to note that the CLI supports primitive types like integers, floats, booleans, and strings. Arrays can be passed as a comma delimited string (e.g. param:\"1,2,3\" ). Hashes are not currently supported. It is recommended to add all pantograph actions you use to your Pantfile .","title":"CLI"},{"location":"actions/ensure_git_branch/#source-code","text":"This action, just like the rest of pantograph , is fully open source, view the source code on GitHub Back to actions","title":"Source code"},{"location":"actions/ensure_git_status_clean/","text":"ensure_git_status_clean Raises error if there are uncommitted git changes ensure_git_status_clean Supported platforms mac, linux, windows Author @lmirosevic, @antondomashnev, @johnknapprs 1 Example before_all do # Prevent pantograph from running lanes when git is in a dirty state ensure_git_status_clean end Lane Variables Actions can communicate with each other using a shared hash lane_context , that can be accessed in other actions, plugins or your lanes: lane_context[SharedValues:XYZ] . The ensure_git_status_clean action generates the following Lane Variables: SharedValue Description SharedValues::ENSURE_GIT_STATUS_CLEAN Returns true if status clean when executed To get more information check the Lanes documentation . Documentation To show the documentation in your terminal, run pantograph action ensure_git_status_clean CLI It is recommended to add the above action into your Pantfile , however sometimes you might want to run one-offs. To do so, you can run the following command from your terminal pantograph run ensure_git_status_clean To pass parameters, make use of the : symbol, for example pantograph run ensure_git_status_clean parameter1: \"value1\" parameter2: \"value2\" It's important to note that the CLI supports primitive types like integers, floats, booleans, and strings. Arrays can be passed as a comma delimited string (e.g. param:\"1,2,3\" ). Hashes are not currently supported. It is recommended to add all pantograph actions you use to your Pantfile . Source code This action, just like the rest of pantograph , is fully open source, view the source code on GitHub Back to actions","title":"ensure_git_status_clean"},{"location":"actions/ensure_git_status_clean/#ensure_git_status_clean","text":"Raises error if there are uncommitted git changes ensure_git_status_clean Supported platforms mac, linux, windows Author @lmirosevic, @antondomashnev, @johnknapprs","title":"ensure_git_status_clean"},{"location":"actions/ensure_git_status_clean/#1-example","text":"before_all do # Prevent pantograph from running lanes when git is in a dirty state ensure_git_status_clean end","title":"1 Example"},{"location":"actions/ensure_git_status_clean/#lane-variables","text":"Actions can communicate with each other using a shared hash lane_context , that can be accessed in other actions, plugins or your lanes: lane_context[SharedValues:XYZ] . The ensure_git_status_clean action generates the following Lane Variables: SharedValue Description SharedValues::ENSURE_GIT_STATUS_CLEAN Returns true if status clean when executed To get more information check the Lanes documentation .","title":"Lane Variables"},{"location":"actions/ensure_git_status_clean/#documentation","text":"To show the documentation in your terminal, run pantograph action ensure_git_status_clean","title":"Documentation"},{"location":"actions/ensure_git_status_clean/#cli","text":"It is recommended to add the above action into your Pantfile , however sometimes you might want to run one-offs. To do so, you can run the following command from your terminal pantograph run ensure_git_status_clean To pass parameters, make use of the : symbol, for example pantograph run ensure_git_status_clean parameter1: \"value1\" parameter2: \"value2\" It's important to note that the CLI supports primitive types like integers, floats, booleans, and strings. Arrays can be passed as a comma delimited string (e.g. param:\"1,2,3\" ). Hashes are not currently supported. It is recommended to add all pantograph actions you use to your Pantfile .","title":"CLI"},{"location":"actions/ensure_git_status_clean/#source-code","text":"This action, just like the rest of pantograph , is fully open source, view the source code on GitHub Back to actions","title":"Source code"},{"location":"actions/erb/","text":"erb Allows to Generate output files based on ERB templates Renders an ERB template with :placeholders given as a hash via parameter. If no :destination is set, it returns the rendered template as string. erb Supported platforms mac, linux, windows Author @hjanuschka 1 Example # Example `erb` template: # Variable1 <%= var1 %> # Variable2 <%= var2 %> # <% for item in var3 %> # <%= item %> # <% end %> erb ( template : \"1.erb\" , destination : \"/tmp/rendered.out\" , placeholders : { :var1 => 123 , :var2 => \"string\" , :var3 => [ \"element1\" , \"element2\" ] } ) Parameters Key Description Default template ERB Template File destination Destination file placeholders Placeholders given as a hash {} * = default value is dependent on the user's system Documentation To show the documentation in your terminal, run pantograph action erb CLI It is recommended to add the above action into your Pantfile , however sometimes you might want to run one-offs. To do so, you can run the following command from your terminal pantograph run erb To pass parameters, make use of the : symbol, for example pantograph run erb parameter1: \"value1\" parameter2: \"value2\" It's important to note that the CLI supports primitive types like integers, floats, booleans, and strings. Arrays can be passed as a comma delimited string (e.g. param:\"1,2,3\" ). Hashes are not currently supported. It is recommended to add all pantograph actions you use to your Pantfile . Source code This action, just like the rest of pantograph , is fully open source, view the source code on GitHub Back to actions","title":"erb"},{"location":"actions/erb/#erb","text":"Allows to Generate output files based on ERB templates Renders an ERB template with :placeholders given as a hash via parameter. If no :destination is set, it returns the rendered template as string. erb Supported platforms mac, linux, windows Author @hjanuschka","title":"erb"},{"location":"actions/erb/#1-example","text":"# Example `erb` template: # Variable1 <%= var1 %> # Variable2 <%= var2 %> # <% for item in var3 %> # <%= item %> # <% end %> erb ( template : \"1.erb\" , destination : \"/tmp/rendered.out\" , placeholders : { :var1 => 123 , :var2 => \"string\" , :var3 => [ \"element1\" , \"element2\" ] } )","title":"1 Example"},{"location":"actions/erb/#parameters","text":"Key Description Default template ERB Template File destination Destination file placeholders Placeholders given as a hash {} * = default value is dependent on the user's system","title":"Parameters"},{"location":"actions/erb/#documentation","text":"To show the documentation in your terminal, run pantograph action erb","title":"Documentation"},{"location":"actions/erb/#cli","text":"It is recommended to add the above action into your Pantfile , however sometimes you might want to run one-offs. To do so, you can run the following command from your terminal pantograph run erb To pass parameters, make use of the : symbol, for example pantograph run erb parameter1: \"value1\" parameter2: \"value2\" It's important to note that the CLI supports primitive types like integers, floats, booleans, and strings. Arrays can be passed as a comma delimited string (e.g. param:\"1,2,3\" ). Hashes are not currently supported. It is recommended to add all pantograph actions you use to your Pantfile .","title":"CLI"},{"location":"actions/erb/#source-code","text":"This action, just like the rest of pantograph , is fully open source, view the source code on GitHub Back to actions","title":"Source code"},{"location":"actions/get_github_release/","text":"get_github_release This will verify if a given release version is available on GitHub This will return all information about a release. For example: { \"url\" => \"https://api.github.com/repos/KrauseFx/pantograph/releases/1537713\" , \"assets_url\" => \"https://api.github.com/repos/KrauseFx/pantograph/releases/1537713/assets\" , \"upload_url\" => \"https://uploads.github.com/repos/KrauseFx/pantograph/releases/1537713/assets{?name}\" , \"html_url\" => \"https://github.com/johnknapprs/pantograph/releases/tag/1.8.0\" , \"id\" => 1537713 , \"tag_name\" => \"1.8.0\" , \"target_commitish\" => \"master\" , \"name\" => \"1.8.0 Switch Lanes & Pass Parameters\" , \"draft\" => false , \"author\" => { \"login\" => \"KrauseFx\" , \"id\" => 869950 , \"avatar_url\" => \"https://avatars.githubusercontent.com/u/869950?v=3\" , \"gravatar_id\" => \"\" , \"url\" => \"https://api.github.com/users/KrauseFx\" , \"html_url\" => \"https://github.com/pantograph\" , \"followers_url\" => \"https://api.github.com/users/KrauseFx/followers\" , \"following_url\" => \"https://api.github.com/users/KrauseFx/following{/other_user}\" , \"gists_url\" => \"https://api.github.com/users/KrauseFx/gists{/gist_id}\" , \"starred_url\" => \"https://api.github.com/users/KrauseFx/starred{/owner}{/repo}\" , \"subscriptions_url\" => \"https://api.github.com/users/KrauseFx/subscriptions\" , \"organizations_url\" => \"https://api.github.com/users/KrauseFx/orgs\" , \"repos_url\" => \"https://api.github.com/users/KrauseFx/repos\" , \"events_url\" => \"https://api.github.com/users/KrauseFx/events{/privacy}\" , \"received_events_url\" => \"https://api.github.com/users/KrauseFx/received_events\" , \"type\" => \"User\" , \"site_admin\" => false }, \"prerelease\" => false , \"created_at\" => \"2015-07-14T23:33:01Z\" , \"published_at\" => \"2015-07-14T23:44:10Z\" , \"assets\" => [], \"tarball_url\" => \"https://api.github.com/repos/KrauseFx/pantograph/tarball/1.8.0\" , \"zipball_url\" => \"https://api.github.com/repos/KrauseFx/pantograph/zipball/1.8.0\" , \"body\" => ...Markdown... \"This is one of the biggest updates of _pantograph_ yet\" } get_github_release Supported platforms mac, linux, windows Author @KrauseFx, @czechboy0, @jaleksynas, @tommeier 1 Example release = get_github_release ( url : \"johnknapprs/pantograph\" , version : \"1.0.0\" ) puts release [ \"name\" ] Parameters Key Description Default url The path to your repo, e.g. 'johnknapprs/pantograph' server_url The server url. e.g. 'https://your.github.server/api/v3' (Default: 'https://api.github.com') https://api.github.com version The version tag of the release to check api_token GitHub Personal Token (required for private repositories) * = default value is dependent on the user's system Lane Variables Actions can communicate with each other using a shared hash lane_context , that can be accessed in other actions, plugins or your lanes: lane_context[SharedValues:XYZ] . The get_github_release action generates the following Lane Variables: SharedValue Description SharedValues::GET_GITHUB_RELEASE_INFO Contains all the information about this release To get more information check the Lanes documentation . Documentation To show the documentation in your terminal, run pantograph action get_github_release CLI It is recommended to add the above action into your Pantfile , however sometimes you might want to run one-offs. To do so, you can run the following command from your terminal pantograph run get_github_release To pass parameters, make use of the : symbol, for example pantograph run get_github_release parameter1: \"value1\" parameter2: \"value2\" It's important to note that the CLI supports primitive types like integers, floats, booleans, and strings. Arrays can be passed as a comma delimited string (e.g. param:\"1,2,3\" ). Hashes are not currently supported. It is recommended to add all pantograph actions you use to your Pantfile . Source code This action, just like the rest of pantograph , is fully open source, view the source code on GitHub Back to actions","title":"get_github_release"},{"location":"actions/get_github_release/#get_github_release","text":"This will verify if a given release version is available on GitHub This will return all information about a release. For example: { \"url\" => \"https://api.github.com/repos/KrauseFx/pantograph/releases/1537713\" , \"assets_url\" => \"https://api.github.com/repos/KrauseFx/pantograph/releases/1537713/assets\" , \"upload_url\" => \"https://uploads.github.com/repos/KrauseFx/pantograph/releases/1537713/assets{?name}\" , \"html_url\" => \"https://github.com/johnknapprs/pantograph/releases/tag/1.8.0\" , \"id\" => 1537713 , \"tag_name\" => \"1.8.0\" , \"target_commitish\" => \"master\" , \"name\" => \"1.8.0 Switch Lanes & Pass Parameters\" , \"draft\" => false , \"author\" => { \"login\" => \"KrauseFx\" , \"id\" => 869950 , \"avatar_url\" => \"https://avatars.githubusercontent.com/u/869950?v=3\" , \"gravatar_id\" => \"\" , \"url\" => \"https://api.github.com/users/KrauseFx\" , \"html_url\" => \"https://github.com/pantograph\" , \"followers_url\" => \"https://api.github.com/users/KrauseFx/followers\" , \"following_url\" => \"https://api.github.com/users/KrauseFx/following{/other_user}\" , \"gists_url\" => \"https://api.github.com/users/KrauseFx/gists{/gist_id}\" , \"starred_url\" => \"https://api.github.com/users/KrauseFx/starred{/owner}{/repo}\" , \"subscriptions_url\" => \"https://api.github.com/users/KrauseFx/subscriptions\" , \"organizations_url\" => \"https://api.github.com/users/KrauseFx/orgs\" , \"repos_url\" => \"https://api.github.com/users/KrauseFx/repos\" , \"events_url\" => \"https://api.github.com/users/KrauseFx/events{/privacy}\" , \"received_events_url\" => \"https://api.github.com/users/KrauseFx/received_events\" , \"type\" => \"User\" , \"site_admin\" => false }, \"prerelease\" => false , \"created_at\" => \"2015-07-14T23:33:01Z\" , \"published_at\" => \"2015-07-14T23:44:10Z\" , \"assets\" => [], \"tarball_url\" => \"https://api.github.com/repos/KrauseFx/pantograph/tarball/1.8.0\" , \"zipball_url\" => \"https://api.github.com/repos/KrauseFx/pantograph/zipball/1.8.0\" , \"body\" => ...Markdown... \"This is one of the biggest updates of _pantograph_ yet\" } get_github_release Supported platforms mac, linux, windows Author @KrauseFx, @czechboy0, @jaleksynas, @tommeier","title":"get_github_release"},{"location":"actions/get_github_release/#1-example","text":"release = get_github_release ( url : \"johnknapprs/pantograph\" , version : \"1.0.0\" ) puts release [ \"name\" ]","title":"1 Example"},{"location":"actions/get_github_release/#parameters","text":"Key Description Default url The path to your repo, e.g. 'johnknapprs/pantograph' server_url The server url. e.g. 'https://your.github.server/api/v3' (Default: 'https://api.github.com') https://api.github.com version The version tag of the release to check api_token GitHub Personal Token (required for private repositories) * = default value is dependent on the user's system","title":"Parameters"},{"location":"actions/get_github_release/#lane-variables","text":"Actions can communicate with each other using a shared hash lane_context , that can be accessed in other actions, plugins or your lanes: lane_context[SharedValues:XYZ] . The get_github_release action generates the following Lane Variables: SharedValue Description SharedValues::GET_GITHUB_RELEASE_INFO Contains all the information about this release To get more information check the Lanes documentation .","title":"Lane Variables"},{"location":"actions/get_github_release/#documentation","text":"To show the documentation in your terminal, run pantograph action get_github_release","title":"Documentation"},{"location":"actions/get_github_release/#cli","text":"It is recommended to add the above action into your Pantfile , however sometimes you might want to run one-offs. To do so, you can run the following command from your terminal pantograph run get_github_release To pass parameters, make use of the : symbol, for example pantograph run get_github_release parameter1: \"value1\" parameter2: \"value2\" It's important to note that the CLI supports primitive types like integers, floats, booleans, and strings. Arrays can be passed as a comma delimited string (e.g. param:\"1,2,3\" ). Hashes are not currently supported. It is recommended to add all pantograph actions you use to your Pantfile .","title":"CLI"},{"location":"actions/get_github_release/#source-code","text":"This action, just like the rest of pantograph , is fully open source, view the source code on GitHub Back to actions","title":"Source code"},{"location":"actions/git_add/","text":"git_add Directly add the given file or all files git_add Supported platforms mac, linux, windows Author @4brunu, @antondomashnev 7 Examples git_add git_add ( path : \"./version.txt\" ) git_add ( path : [ \"./version.txt\" , \"./changelog.txt\" ] ) git_add ( path : \"./Frameworks/*\" , shell_escape : false ) git_add ( path : [ \"*.h\" , \"*.m\" ] , shell_escape : false ) git_add ( path : \"./Frameworks/*\" , shell_escape : false ) git_add ( path : \"*.txt\" , shell_escape : false ) Parameters Key Description Default path The file(s) and path(s) you want to add shell_escape Shell escapes paths (set to false if using wildcards or manually escaping spaces in :path) true pathspec DEPRECATED! Use --path instead - The pathspec you want to add files from * = default value is dependent on the user's system Documentation To show the documentation in your terminal, run pantograph action git_add CLI It is recommended to add the above action into your Pantfile , however sometimes you might want to run one-offs. To do so, you can run the following command from your terminal pantograph run git_add To pass parameters, make use of the : symbol, for example pantograph run git_add parameter1: \"value1\" parameter2: \"value2\" It's important to note that the CLI supports primitive types like integers, floats, booleans, and strings. Arrays can be passed as a comma delimited string (e.g. param:\"1,2,3\" ). Hashes are not currently supported. It is recommended to add all pantograph actions you use to your Pantfile . Source code This action, just like the rest of pantograph , is fully open source, view the source code on GitHub Back to actions","title":"Git add"},{"location":"actions/git_add/#git_add","text":"Directly add the given file or all files git_add Supported platforms mac, linux, windows Author @4brunu, @antondomashnev","title":"git_add"},{"location":"actions/git_add/#7-examples","text":"git_add git_add ( path : \"./version.txt\" ) git_add ( path : [ \"./version.txt\" , \"./changelog.txt\" ] ) git_add ( path : \"./Frameworks/*\" , shell_escape : false ) git_add ( path : [ \"*.h\" , \"*.m\" ] , shell_escape : false ) git_add ( path : \"./Frameworks/*\" , shell_escape : false ) git_add ( path : \"*.txt\" , shell_escape : false )","title":"7 Examples"},{"location":"actions/git_add/#parameters","text":"Key Description Default path The file(s) and path(s) you want to add shell_escape Shell escapes paths (set to false if using wildcards or manually escaping spaces in :path) true pathspec DEPRECATED! Use --path instead - The pathspec you want to add files from * = default value is dependent on the user's system","title":"Parameters"},{"location":"actions/git_add/#documentation","text":"To show the documentation in your terminal, run pantograph action git_add","title":"Documentation"},{"location":"actions/git_add/#cli","text":"It is recommended to add the above action into your Pantfile , however sometimes you might want to run one-offs. To do so, you can run the following command from your terminal pantograph run git_add To pass parameters, make use of the : symbol, for example pantograph run git_add parameter1: \"value1\" parameter2: \"value2\" It's important to note that the CLI supports primitive types like integers, floats, booleans, and strings. Arrays can be passed as a comma delimited string (e.g. param:\"1,2,3\" ). Hashes are not currently supported. It is recommended to add all pantograph actions you use to your Pantfile .","title":"CLI"},{"location":"actions/git_add/#source-code","text":"This action, just like the rest of pantograph , is fully open source, view the source code on GitHub Back to actions","title":"Source code"},{"location":"actions/git_branch/","text":"git_branch Returns the name of the current git branch If no branch could be found, this action will return an empty string git_branch Supported platforms mac, linux, windows Author @johnknapprs 1 Example git_branch Lane Variables Actions can communicate with each other using a shared hash lane_context , that can be accessed in other actions, plugins or your lanes: lane_context[SharedValues:XYZ] . The git_branch action generates the following Lane Variables: SharedValue Description SharedValues::GIT_BRANCH_NAME The git branch name To get more information check the Lanes documentation . Documentation To show the documentation in your terminal, run pantograph action git_branch CLI It is recommended to add the above action into your Pantfile , however sometimes you might want to run one-offs. To do so, you can run the following command from your terminal pantograph run git_branch To pass parameters, make use of the : symbol, for example pantograph run git_branch parameter1: \"value1\" parameter2: \"value2\" It's important to note that the CLI supports primitive types like integers, floats, booleans, and strings. Arrays can be passed as a comma delimited string (e.g. param:\"1,2,3\" ). Hashes are not currently supported. It is recommended to add all pantograph actions you use to your Pantfile . Source code This action, just like the rest of pantograph , is fully open source, view the source code on GitHub Back to actions","title":"git_branch"},{"location":"actions/git_branch/#git_branch","text":"Returns the name of the current git branch If no branch could be found, this action will return an empty string git_branch Supported platforms mac, linux, windows Author @johnknapprs","title":"git_branch"},{"location":"actions/git_branch/#1-example","text":"git_branch","title":"1 Example"},{"location":"actions/git_branch/#lane-variables","text":"Actions can communicate with each other using a shared hash lane_context , that can be accessed in other actions, plugins or your lanes: lane_context[SharedValues:XYZ] . The git_branch action generates the following Lane Variables: SharedValue Description SharedValues::GIT_BRANCH_NAME The git branch name To get more information check the Lanes documentation .","title":"Lane Variables"},{"location":"actions/git_branch/#documentation","text":"To show the documentation in your terminal, run pantograph action git_branch","title":"Documentation"},{"location":"actions/git_branch/#cli","text":"It is recommended to add the above action into your Pantfile , however sometimes you might want to run one-offs. To do so, you can run the following command from your terminal pantograph run git_branch To pass parameters, make use of the : symbol, for example pantograph run git_branch parameter1: \"value1\" parameter2: \"value2\" It's important to note that the CLI supports primitive types like integers, floats, booleans, and strings. Arrays can be passed as a comma delimited string (e.g. param:\"1,2,3\" ). Hashes are not currently supported. It is recommended to add all pantograph actions you use to your Pantfile .","title":"CLI"},{"location":"actions/git_branch/#source-code","text":"This action, just like the rest of pantograph , is fully open source, view the source code on GitHub Back to actions","title":"Source code"},{"location":"actions/git_commit/","text":"git_commit Directly commit the given file with the given message git_commit Supported platforms mac, linux, windows Author @KrauseFx 4 Examples git_commit ( path : \"./version.txt\" , message : \"Version Bump\" ) git_commit ( path : [ \"./version.txt\" , \"./changelog.txt\" ] , message : \"Version Bump\" ) git_commit ( path : [ \"./*.txt\" , \"./*.md\" ] , message : \"Update documentation\" ) git_commit ( path : [ \"./*.txt\" , \"./*.md\" ] , message : \"Update documentation\" , skip_git_hooks : true ) Parameters Key Description Default path The file you want to commit message The commit message that should be used skip_git_hooks Set to true to pass --no-verify to git allow_nothing_to_commit Set to true to allow commit without any git changes * = default value is dependent on the user's system Documentation To show the documentation in your terminal, run pantograph action git_commit CLI It is recommended to add the above action into your Pantfile , however sometimes you might want to run one-offs. To do so, you can run the following command from your terminal pantograph run git_commit To pass parameters, make use of the : symbol, for example pantograph run git_commit parameter1: \"value1\" parameter2: \"value2\" It's important to note that the CLI supports primitive types like integers, floats, booleans, and strings. Arrays can be passed as a comma delimited string (e.g. param:\"1,2,3\" ). Hashes are not currently supported. It is recommended to add all pantograph actions you use to your Pantfile . Source code This action, just like the rest of pantograph , is fully open source, view the source code on GitHub Back to actions","title":"git_commit"},{"location":"actions/git_commit/#git_commit","text":"Directly commit the given file with the given message git_commit Supported platforms mac, linux, windows Author @KrauseFx","title":"git_commit"},{"location":"actions/git_commit/#4-examples","text":"git_commit ( path : \"./version.txt\" , message : \"Version Bump\" ) git_commit ( path : [ \"./version.txt\" , \"./changelog.txt\" ] , message : \"Version Bump\" ) git_commit ( path : [ \"./*.txt\" , \"./*.md\" ] , message : \"Update documentation\" ) git_commit ( path : [ \"./*.txt\" , \"./*.md\" ] , message : \"Update documentation\" , skip_git_hooks : true )","title":"4 Examples"},{"location":"actions/git_commit/#parameters","text":"Key Description Default path The file you want to commit message The commit message that should be used skip_git_hooks Set to true to pass --no-verify to git allow_nothing_to_commit Set to true to allow commit without any git changes * = default value is dependent on the user's system","title":"Parameters"},{"location":"actions/git_commit/#documentation","text":"To show the documentation in your terminal, run pantograph action git_commit","title":"Documentation"},{"location":"actions/git_commit/#cli","text":"It is recommended to add the above action into your Pantfile , however sometimes you might want to run one-offs. To do so, you can run the following command from your terminal pantograph run git_commit To pass parameters, make use of the : symbol, for example pantograph run git_commit parameter1: \"value1\" parameter2: \"value2\" It's important to note that the CLI supports primitive types like integers, floats, booleans, and strings. Arrays can be passed as a comma delimited string (e.g. param:\"1,2,3\" ). Hashes are not currently supported. It is recommended to add all pantograph actions you use to your Pantfile .","title":"CLI"},{"location":"actions/git_commit/#source-code","text":"This action, just like the rest of pantograph , is fully open source, view the source code on GitHub Back to actions","title":"Source code"},{"location":"actions/git_pull/","text":"git_pull Executes a simple git pull command git_pull Supported platforms mac, linux, windows Author @johnknapprs 1 Example git_pull Documentation To show the documentation in your terminal, run pantograph action git_pull CLI It is recommended to add the above action into your Pantfile , however sometimes you might want to run one-offs. To do so, you can run the following command from your terminal pantograph run git_pull To pass parameters, make use of the : symbol, for example pantograph run git_pull parameter1: \"value1\" parameter2: \"value2\" It's important to note that the CLI supports primitive types like integers, floats, booleans, and strings. Arrays can be passed as a comma delimited string (e.g. param:\"1,2,3\" ). Hashes are not currently supported. It is recommended to add all pantograph actions you use to your Pantfile . Source code This action, just like the rest of pantograph , is fully open source, view the source code on GitHub Back to actions","title":"git_pull"},{"location":"actions/git_pull/#git_pull","text":"Executes a simple git pull command git_pull Supported platforms mac, linux, windows Author @johnknapprs","title":"git_pull"},{"location":"actions/git_pull/#1-example","text":"git_pull","title":"1 Example"},{"location":"actions/git_pull/#documentation","text":"To show the documentation in your terminal, run pantograph action git_pull","title":"Documentation"},{"location":"actions/git_pull/#cli","text":"It is recommended to add the above action into your Pantfile , however sometimes you might want to run one-offs. To do so, you can run the following command from your terminal pantograph run git_pull To pass parameters, make use of the : symbol, for example pantograph run git_pull parameter1: \"value1\" parameter2: \"value2\" It's important to note that the CLI supports primitive types like integers, floats, booleans, and strings. Arrays can be passed as a comma delimited string (e.g. param:\"1,2,3\" ). Hashes are not currently supported. It is recommended to add all pantograph actions you use to your Pantfile .","title":"CLI"},{"location":"actions/git_pull/#source-code","text":"This action, just like the rest of pantograph , is fully open source, view the source code on GitHub Back to actions","title":"Source code"},{"location":"actions/git_pull_tags/","text":"git_pull_tags Executes a simple git fetch --tags command git_pull_tags Supported platforms mac, linux, windows Author @johnknapprs 1 Example git_pull_tags Documentation To show the documentation in your terminal, run pantograph action git_pull_tags CLI It is recommended to add the above action into your Pantfile , however sometimes you might want to run one-offs. To do so, you can run the following command from your terminal pantograph run git_pull_tags To pass parameters, make use of the : symbol, for example pantograph run git_pull_tags parameter1: \"value1\" parameter2: \"value2\" It's important to note that the CLI supports primitive types like integers, floats, booleans, and strings. Arrays can be passed as a comma delimited string (e.g. param:\"1,2,3\" ). Hashes are not currently supported. It is recommended to add all pantograph actions you use to your Pantfile . Source code This action, just like the rest of pantograph , is fully open source, view the source code on GitHub Back to actions","title":"git_pull_tags"},{"location":"actions/git_pull_tags/#git_pull_tags","text":"Executes a simple git fetch --tags command git_pull_tags Supported platforms mac, linux, windows Author @johnknapprs","title":"git_pull_tags"},{"location":"actions/git_pull_tags/#1-example","text":"git_pull_tags","title":"1 Example"},{"location":"actions/git_pull_tags/#documentation","text":"To show the documentation in your terminal, run pantograph action git_pull_tags","title":"Documentation"},{"location":"actions/git_pull_tags/#cli","text":"It is recommended to add the above action into your Pantfile , however sometimes you might want to run one-offs. To do so, you can run the following command from your terminal pantograph run git_pull_tags To pass parameters, make use of the : symbol, for example pantograph run git_pull_tags parameter1: \"value1\" parameter2: \"value2\" It's important to note that the CLI supports primitive types like integers, floats, booleans, and strings. Arrays can be passed as a comma delimited string (e.g. param:\"1,2,3\" ). Hashes are not currently supported. It is recommended to add all pantograph actions you use to your Pantfile .","title":"CLI"},{"location":"actions/git_pull_tags/#source-code","text":"This action, just like the rest of pantograph , is fully open source, view the source code on GitHub Back to actions","title":"Source code"},{"location":"actions/git_submodule_update/","text":"git_submodule_update Execute git submodule command git_submodule_update Supported platforms mac, linux, windows Author @johnknapprs Parameters Key Description Default recursive Add the --recursive flag false init Add the --init flag false * = default value is dependent on the user's system Documentation To show the documentation in your terminal, run pantograph action git_submodule_update CLI It is recommended to add the above action into your Pantfile , however sometimes you might want to run one-offs. To do so, you can run the following command from your terminal pantograph run git_submodule_update To pass parameters, make use of the : symbol, for example pantograph run git_submodule_update parameter1: \"value1\" parameter2: \"value2\" It's important to note that the CLI supports primitive types like integers, floats, booleans, and strings. Arrays can be passed as a comma delimited string (e.g. param:\"1,2,3\" ). Hashes are not currently supported. It is recommended to add all pantograph actions you use to your Pantfile . Source code This action, just like the rest of pantograph , is fully open source, view the source code on GitHub Back to actions","title":"git_submodule_update"},{"location":"actions/git_submodule_update/#git_submodule_update","text":"Execute git submodule command git_submodule_update Supported platforms mac, linux, windows Author @johnknapprs","title":"git_submodule_update"},{"location":"actions/git_submodule_update/#parameters","text":"Key Description Default recursive Add the --recursive flag false init Add the --init flag false * = default value is dependent on the user's system","title":"Parameters"},{"location":"actions/git_submodule_update/#documentation","text":"To show the documentation in your terminal, run pantograph action git_submodule_update","title":"Documentation"},{"location":"actions/git_submodule_update/#cli","text":"It is recommended to add the above action into your Pantfile , however sometimes you might want to run one-offs. To do so, you can run the following command from your terminal pantograph run git_submodule_update To pass parameters, make use of the : symbol, for example pantograph run git_submodule_update parameter1: \"value1\" parameter2: \"value2\" It's important to note that the CLI supports primitive types like integers, floats, booleans, and strings. Arrays can be passed as a comma delimited string (e.g. param:\"1,2,3\" ). Hashes are not currently supported. It is recommended to add all pantograph actions you use to your Pantfile .","title":"CLI"},{"location":"actions/git_submodule_update/#source-code","text":"This action, just like the rest of pantograph , is fully open source, view the source code on GitHub Back to actions","title":"Source code"},{"location":"actions/git_tag_exists/","text":"git_tag_exists Checks if the git tag with the given name exists git_tag_exists Supported platforms mac, linux, windows Author @johnknapprs Returns Returns Boolean value whether the tag exists 1 Example if git_tag_exists ( tag : \"1.1.0\" ) UI . message ( \"Git Tag Exists!\" ) end Parameters Key Description Default tag The tag name that should be checked * = default value is dependent on the user's system Lane Variables Actions can communicate with each other using a shared hash lane_context , that can be accessed in other actions, plugins or your lanes: lane_context[SharedValues:XYZ] . The git_tag_exists action generates the following Lane Variables: SharedValue Description SharedValues::GIT_TAG_EXISTS Boolean value whether tag exists To get more information check the Lanes documentation . Documentation To show the documentation in your terminal, run pantograph action git_tag_exists CLI It is recommended to add the above action into your Pantfile , however sometimes you might want to run one-offs. To do so, you can run the following command from your terminal pantograph run git_tag_exists To pass parameters, make use of the : symbol, for example pantograph run git_tag_exists parameter1: \"value1\" parameter2: \"value2\" It's important to note that the CLI supports primitive types like integers, floats, booleans, and strings. Arrays can be passed as a comma delimited string (e.g. param:\"1,2,3\" ). Hashes are not currently supported. It is recommended to add all pantograph actions you use to your Pantfile . Source code This action, just like the rest of pantograph , is fully open source, view the source code on GitHub Back to actions","title":"git_tag_exists"},{"location":"actions/git_tag_exists/#git_tag_exists","text":"Checks if the git tag with the given name exists git_tag_exists Supported platforms mac, linux, windows Author @johnknapprs Returns Returns Boolean value whether the tag exists","title":"git_tag_exists"},{"location":"actions/git_tag_exists/#1-example","text":"if git_tag_exists ( tag : \"1.1.0\" ) UI . message ( \"Git Tag Exists!\" ) end","title":"1 Example"},{"location":"actions/git_tag_exists/#parameters","text":"Key Description Default tag The tag name that should be checked * = default value is dependent on the user's system","title":"Parameters"},{"location":"actions/git_tag_exists/#lane-variables","text":"Actions can communicate with each other using a shared hash lane_context , that can be accessed in other actions, plugins or your lanes: lane_context[SharedValues:XYZ] . The git_tag_exists action generates the following Lane Variables: SharedValue Description SharedValues::GIT_TAG_EXISTS Boolean value whether tag exists To get more information check the Lanes documentation .","title":"Lane Variables"},{"location":"actions/git_tag_exists/#documentation","text":"To show the documentation in your terminal, run pantograph action git_tag_exists","title":"Documentation"},{"location":"actions/git_tag_exists/#cli","text":"It is recommended to add the above action into your Pantfile , however sometimes you might want to run one-offs. To do so, you can run the following command from your terminal pantograph run git_tag_exists To pass parameters, make use of the : symbol, for example pantograph run git_tag_exists parameter1: \"value1\" parameter2: \"value2\" It's important to note that the CLI supports primitive types like integers, floats, booleans, and strings. Arrays can be passed as a comma delimited string (e.g. param:\"1,2,3\" ). Hashes are not currently supported. It is recommended to add all pantograph actions you use to your Pantfile .","title":"CLI"},{"location":"actions/git_tag_exists/#source-code","text":"This action, just like the rest of pantograph , is fully open source, view the source code on GitHub Back to actions","title":"Source code"},{"location":"actions/github_api/","text":"github_api Call a GitHub API endpoint and get the resulting JSON response Calls any GitHub API endpoint. You must provide your GitHub Personal token (get one from https://github.com/settings/tokens/new ). Out parameters provide the status code and the full response JSON if valid, otherwise the raw response body. Documentation: https://developer.github.com/v3 . github_api Supported platforms mac, linux, windows Author @tommeier Returns A hash including the HTTP status code (:status), the response body (:body), and if valid JSON has been returned the parsed JSON (:json). 2 Examples result = github_api ( server_url : \"https://api.github.com\" , api_token : ENV [ \"GITHUB_TOKEN\" ] , http_method : \"GET\" , path : \"/repos/:owner/:repo/readme\" , body : { ref : \"master\" } ) # Alternatively call directly with optional error handling or block usage GithubApiAction . run ( server_url : \"https://api.github.com\" , api_token : ENV [ \"GITHUB_TOKEN\" ] , http_method : \"GET\" , path : \"/repos/:owner/:repo/readme\" , error_handlers : { 404 => proc do | result | UI . message ( \"Something went wrong - I couldn't find it...\" ) end , '*' => proc do | result | UI . message ( \"Handle all error codes other than 404\" ) end } ) do | result | UI . message ( \"JSON returned: #{ result [ :json ] } \" ) end Parameters Key Description Default server_url The server url. e.g. 'https://your.internal.github.host/api/v3' (Default: 'https://api.github.com') https://api.github.com api_token Personal API Token for GitHub - generate one at https://github.com/settings/tokens * http_method The HTTP method. e.g. GET / POST GET body The request body in JSON or hash format {} raw_body The request body taken verbatim instead of as JSON, useful for file uploads path The endpoint path. e.g. '/repos/:owner/:repo/readme' url The complete full url - used instead of path. e.g. 'https://uploads.github.com/repos/pantograph...' error_handlers Optional error handling hash based on status code, or pass '*' to handle all errors {} headers Optional headers to apply {} secure Optionally disable secure requests (ssl_verify_peer) true * = default value is dependent on the user's system Lane Variables Actions can communicate with each other using a shared hash lane_context , that can be accessed in other actions, plugins or your lanes: lane_context[SharedValues:XYZ] . The github_api action generates the following Lane Variables: SharedValue Description SharedValues::GITHUB_API_STATUS_CODE The status code returned from the request SharedValues::GITHUB_API_RESPONSE The full response body SharedValues::GITHUB_API_JSON The parsed json returned from GitHub To get more information check the Lanes documentation . Documentation To show the documentation in your terminal, run pantograph action github_api CLI It is recommended to add the above action into your Pantfile , however sometimes you might want to run one-offs. To do so, you can run the following command from your terminal pantograph run github_api To pass parameters, make use of the : symbol, for example pantograph run github_api parameter1: \"value1\" parameter2: \"value2\" It's important to note that the CLI supports primitive types like integers, floats, booleans, and strings. Arrays can be passed as a comma delimited string (e.g. param:\"1,2,3\" ). Hashes are not currently supported. It is recommended to add all pantograph actions you use to your Pantfile . Source code This action, just like the rest of pantograph , is fully open source, view the source code on GitHub Back to actions","title":"github_api"},{"location":"actions/github_api/#github_api","text":"Call a GitHub API endpoint and get the resulting JSON response Calls any GitHub API endpoint. You must provide your GitHub Personal token (get one from https://github.com/settings/tokens/new ). Out parameters provide the status code and the full response JSON if valid, otherwise the raw response body. Documentation: https://developer.github.com/v3 . github_api Supported platforms mac, linux, windows Author @tommeier Returns A hash including the HTTP status code (:status), the response body (:body), and if valid JSON has been returned the parsed JSON (:json).","title":"github_api"},{"location":"actions/github_api/#2-examples","text":"result = github_api ( server_url : \"https://api.github.com\" , api_token : ENV [ \"GITHUB_TOKEN\" ] , http_method : \"GET\" , path : \"/repos/:owner/:repo/readme\" , body : { ref : \"master\" } ) # Alternatively call directly with optional error handling or block usage GithubApiAction . run ( server_url : \"https://api.github.com\" , api_token : ENV [ \"GITHUB_TOKEN\" ] , http_method : \"GET\" , path : \"/repos/:owner/:repo/readme\" , error_handlers : { 404 => proc do | result | UI . message ( \"Something went wrong - I couldn't find it...\" ) end , '*' => proc do | result | UI . message ( \"Handle all error codes other than 404\" ) end } ) do | result | UI . message ( \"JSON returned: #{ result [ :json ] } \" ) end","title":"2 Examples"},{"location":"actions/github_api/#parameters","text":"Key Description Default server_url The server url. e.g. 'https://your.internal.github.host/api/v3' (Default: 'https://api.github.com') https://api.github.com api_token Personal API Token for GitHub - generate one at https://github.com/settings/tokens * http_method The HTTP method. e.g. GET / POST GET body The request body in JSON or hash format {} raw_body The request body taken verbatim instead of as JSON, useful for file uploads path The endpoint path. e.g. '/repos/:owner/:repo/readme' url The complete full url - used instead of path. e.g. 'https://uploads.github.com/repos/pantograph...' error_handlers Optional error handling hash based on status code, or pass '*' to handle all errors {} headers Optional headers to apply {} secure Optionally disable secure requests (ssl_verify_peer) true * = default value is dependent on the user's system","title":"Parameters"},{"location":"actions/github_api/#lane-variables","text":"Actions can communicate with each other using a shared hash lane_context , that can be accessed in other actions, plugins or your lanes: lane_context[SharedValues:XYZ] . The github_api action generates the following Lane Variables: SharedValue Description SharedValues::GITHUB_API_STATUS_CODE The status code returned from the request SharedValues::GITHUB_API_RESPONSE The full response body SharedValues::GITHUB_API_JSON The parsed json returned from GitHub To get more information check the Lanes documentation .","title":"Lane Variables"},{"location":"actions/github_api/#documentation","text":"To show the documentation in your terminal, run pantograph action github_api","title":"Documentation"},{"location":"actions/github_api/#cli","text":"It is recommended to add the above action into your Pantfile , however sometimes you might want to run one-offs. To do so, you can run the following command from your terminal pantograph run github_api To pass parameters, make use of the : symbol, for example pantograph run github_api parameter1: \"value1\" parameter2: \"value2\" It's important to note that the CLI supports primitive types like integers, floats, booleans, and strings. Arrays can be passed as a comma delimited string (e.g. param:\"1,2,3\" ). Hashes are not currently supported. It is recommended to add all pantograph actions you use to your Pantfile .","title":"CLI"},{"location":"actions/github_api/#source-code","text":"This action, just like the rest of pantograph , is fully open source, view the source code on GitHub Back to actions","title":"Source code"},{"location":"actions/gradle/","text":"gradle All gradle related actions, including building and testing your application Run ./gradlew tasks to get a list of all available gradle tasks for your project gradle Supported platforms mac, linux, windows Author @KrauseFx, @lmirosevic, @johnknapprs Returns The output of running the gradle task 1 Example gradle ( task : \"assemble\" , flavor : \"WorldDomination\" , build_type : \"Release\" ) To build an AAB use: gradle ( task : \"bundle\" , flavor : \"WorldDomination\" , build_type : \"Release\" ) You can pass properties to gradle: gradle ( # ... properties : { \"versionCode\" => 100 , \"versionName\" => \"1.0.0\" , # ... } ) You can use this to automatically [sign and zipalign] your app: gradle ( task : \"assemble\" , build_type : \"Release\" , print_command : false , properties : { \"app.injected.signing.store.file\" => \"keystore.jks\" , \"app.injected.signing.store.password\" => \"store_password\" , \"app.injected.signing.key.alias\" => \"key_alias\" , \"app.injected.signing.key.password\" => \"key_password\" , } ) If you need to pass sensitive information through the gradle action, and don't want the generated command to be printed before it is run, you can suppress that: gradle ( # ... print_command : false ) You can also suppress printing the output generated by running the generated Gradle command: gradle ( # ... print_command_output : false ) To pass any other CLI flags to gradle use: gradle ( # ... flags : \"--exitcode --xml file.xml\" ) Delete the build directory, generated artifacts gradle ( task : \"clean\" ) Parameters Key Description Default task The gradle task you want to execute, e.g. assemble , bundle or test . For tasks such as assembleMyFlavorRelease you should use gradle(task: 'assemble', flavor: 'Myflavor', build_type: 'Release') flavor The flavor that you want the task for, e.g. MyFlavor . If you are running the assemble task in a multi-flavor project, and you rely on Actions.lane_context[SharedValues::GRADLE_ARTIFACT _OUTPUT_PATH] then you must specify a flavor here or else this value will be undefined build_type The build type that you want the task for, e.g. Release . Useful for some tasks such as assemble flags All parameter flags you want to pass to the gradle command, e.g. --exitcode --xml file.xml project_dir The root directory of the gradle project . gradle_path The path to your gradlew . If you specify a relative path, it is assumed to be relative to the project_dir ./gradlew properties Gradle properties to be exposed to the gradle script artifact_extension Gradle build output filetype extension jar system_properties Gradle system properties to be exposed to the gradle script print_command Control whether the generated Gradle command is printed as output before running it (true/false) true print_command_output Control whether the output produced by given Gradle command is printed while running (true/false) true * = default value is dependent on the user's system Lane Variables Actions can communicate with each other using a shared hash lane_context , that can be accessed in other actions, plugins or your lanes: lane_context[SharedValues:XYZ] . The gradle action generates the following Lane Variables: SharedValue Description SharedValues::GRADLE_ARTIFACT_OUTPUT_PATH The path to the newly generated artifact file. Undefined in a multi-variant assemble scenario SharedValues::GRADLE_FLAVOR The flavor, e.g. MyFlavor SharedValues::GRADLE_BUILD_TYPE The build type, e.g. Release To get more information check the Lanes documentation . Documentation To show the documentation in your terminal, run pantograph action gradle CLI It is recommended to add the above action into your Pantfile , however sometimes you might want to run one-offs. To do so, you can run the following command from your terminal pantograph run gradle To pass parameters, make use of the : symbol, for example pantograph run gradle parameter1: \"value1\" parameter2: \"value2\" It's important to note that the CLI supports primitive types like integers, floats, booleans, and strings. Arrays can be passed as a comma delimited string (e.g. param:\"1,2,3\" ). Hashes are not currently supported. It is recommended to add all pantograph actions you use to your Pantfile . Source code This action, just like the rest of pantograph , is fully open source, view the source code on GitHub Back to actions","title":"gradle"},{"location":"actions/gradle/#gradle","text":"All gradle related actions, including building and testing your application Run ./gradlew tasks to get a list of all available gradle tasks for your project gradle Supported platforms mac, linux, windows Author @KrauseFx, @lmirosevic, @johnknapprs Returns The output of running the gradle task","title":"gradle"},{"location":"actions/gradle/#1-example","text":"gradle ( task : \"assemble\" , flavor : \"WorldDomination\" , build_type : \"Release\" ) To build an AAB use: gradle ( task : \"bundle\" , flavor : \"WorldDomination\" , build_type : \"Release\" ) You can pass properties to gradle: gradle ( # ... properties : { \"versionCode\" => 100 , \"versionName\" => \"1.0.0\" , # ... } ) You can use this to automatically [sign and zipalign] your app: gradle ( task : \"assemble\" , build_type : \"Release\" , print_command : false , properties : { \"app.injected.signing.store.file\" => \"keystore.jks\" , \"app.injected.signing.store.password\" => \"store_password\" , \"app.injected.signing.key.alias\" => \"key_alias\" , \"app.injected.signing.key.password\" => \"key_password\" , } ) If you need to pass sensitive information through the gradle action, and don't want the generated command to be printed before it is run, you can suppress that: gradle ( # ... print_command : false ) You can also suppress printing the output generated by running the generated Gradle command: gradle ( # ... print_command_output : false ) To pass any other CLI flags to gradle use: gradle ( # ... flags : \"--exitcode --xml file.xml\" ) Delete the build directory, generated artifacts gradle ( task : \"clean\" )","title":"1 Example"},{"location":"actions/gradle/#parameters","text":"Key Description Default task The gradle task you want to execute, e.g. assemble , bundle or test . For tasks such as assembleMyFlavorRelease you should use gradle(task: 'assemble', flavor: 'Myflavor', build_type: 'Release') flavor The flavor that you want the task for, e.g. MyFlavor . If you are running the assemble task in a multi-flavor project, and you rely on Actions.lane_context[SharedValues::GRADLE_ARTIFACT _OUTPUT_PATH] then you must specify a flavor here or else this value will be undefined build_type The build type that you want the task for, e.g. Release . Useful for some tasks such as assemble flags All parameter flags you want to pass to the gradle command, e.g. --exitcode --xml file.xml project_dir The root directory of the gradle project . gradle_path The path to your gradlew . If you specify a relative path, it is assumed to be relative to the project_dir ./gradlew properties Gradle properties to be exposed to the gradle script artifact_extension Gradle build output filetype extension jar system_properties Gradle system properties to be exposed to the gradle script print_command Control whether the generated Gradle command is printed as output before running it (true/false) true print_command_output Control whether the output produced by given Gradle command is printed while running (true/false) true * = default value is dependent on the user's system","title":"Parameters"},{"location":"actions/gradle/#lane-variables","text":"Actions can communicate with each other using a shared hash lane_context , that can be accessed in other actions, plugins or your lanes: lane_context[SharedValues:XYZ] . The gradle action generates the following Lane Variables: SharedValue Description SharedValues::GRADLE_ARTIFACT_OUTPUT_PATH The path to the newly generated artifact file. Undefined in a multi-variant assemble scenario SharedValues::GRADLE_FLAVOR The flavor, e.g. MyFlavor SharedValues::GRADLE_BUILD_TYPE The build type, e.g. Release To get more information check the Lanes documentation .","title":"Lane Variables"},{"location":"actions/gradle/#documentation","text":"To show the documentation in your terminal, run pantograph action gradle","title":"Documentation"},{"location":"actions/gradle/#cli","text":"It is recommended to add the above action into your Pantfile , however sometimes you might want to run one-offs. To do so, you can run the following command from your terminal pantograph run gradle To pass parameters, make use of the : symbol, for example pantograph run gradle parameter1: \"value1\" parameter2: \"value2\" It's important to note that the CLI supports primitive types like integers, floats, booleans, and strings. Arrays can be passed as a comma delimited string (e.g. param:\"1,2,3\" ). Hashes are not currently supported. It is recommended to add all pantograph actions you use to your Pantfile .","title":"CLI"},{"location":"actions/gradle/#source-code","text":"This action, just like the rest of pantograph , is fully open source, view the source code on GitHub Back to actions","title":"Source code"},{"location":"actions/import/","text":"import Import another Pantfile to use its lanes This is useful when sharing the same lanes across multiple projects The path must be relative to the Pantfile this is called from. import Supported platforms mac, linux, windows Author @KrauseFx 1 Example import ( \"./path/to/other/Pantfile\" ) Documentation To show the documentation in your terminal, run pantograph action import CLI It is recommended to add the above action into your Pantfile , however sometimes you might want to run one-offs. To do so, you can run the following command from your terminal pantograph run import To pass parameters, make use of the : symbol, for example pantograph run import parameter1: \"value1\" parameter2: \"value2\" It's important to note that the CLI supports primitive types like integers, floats, booleans, and strings. Arrays can be passed as a comma delimited string (e.g. param:\"1,2,3\" ). Hashes are not currently supported. It is recommended to add all pantograph actions you use to your Pantfile . Source code This action, just like the rest of pantograph , is fully open source, view the source code on GitHub Back to actions","title":"import"},{"location":"actions/import/#import","text":"Import another Pantfile to use its lanes This is useful when sharing the same lanes across multiple projects The path must be relative to the Pantfile this is called from. import Supported platforms mac, linux, windows Author @KrauseFx","title":"import"},{"location":"actions/import/#1-example","text":"import ( \"./path/to/other/Pantfile\" )","title":"1 Example"},{"location":"actions/import/#documentation","text":"To show the documentation in your terminal, run pantograph action import","title":"Documentation"},{"location":"actions/import/#cli","text":"It is recommended to add the above action into your Pantfile , however sometimes you might want to run one-offs. To do so, you can run the following command from your terminal pantograph run import To pass parameters, make use of the : symbol, for example pantograph run import parameter1: \"value1\" parameter2: \"value2\" It's important to note that the CLI supports primitive types like integers, floats, booleans, and strings. Arrays can be passed as a comma delimited string (e.g. param:\"1,2,3\" ). Hashes are not currently supported. It is recommended to add all pantograph actions you use to your Pantfile .","title":"CLI"},{"location":"actions/import/#source-code","text":"This action, just like the rest of pantograph , is fully open source, view the source code on GitHub Back to actions","title":"Source code"},{"location":"actions/import_from_git/","text":"import_from_git Import another Pantfile from a remote git repository to use its lanes This is useful when sharing the same lanes across multiple projects import_from_git Supported platforms mac, linux, windows Author @fabiomassimo, @KrauseFx, @Liquidsoul, @johnknapprs 3 Examples # Simple import on master branch import_from_git ( url : \"git@github.com:johnknapprs/pantograph.git\" ) # Import a Pantfile with an Optimistic version match operator import_from_git ( url : \"git@github.com:johnknapprs/pantograph.git\" , branch : \"master\" , path : \"pantograph/Pantfile\" , version : \"~> 1.0.0\" ) # Import a Pantfile with multiple version conditions import_from_git ( url : \"git@github.com:johnknapprs/pantograph.git\" , # The URL of the repository to import the Pantfile from. branch : \"development\" , # The branch to checkout on the repository version : [ \">= 1.1.0\" , \"< 2.0.0\" ] ) Parameters Key Description Default url The URL of the repository to import the Pantfile from branch The branch or tag to check-out on the repository master path The path of the Pantfile in the repository pantograph/Pantfile version The version to checkout on the repository. Optimistic match operator or multiple conditions can be used to select the version within constraints * = default value is dependent on the user's system Documentation To show the documentation in your terminal, run pantograph action import_from_git CLI It is recommended to add the above action into your Pantfile , however sometimes you might want to run one-offs. To do so, you can run the following command from your terminal pantograph run import_from_git To pass parameters, make use of the : symbol, for example pantograph run import_from_git parameter1: \"value1\" parameter2: \"value2\" It's important to note that the CLI supports primitive types like integers, floats, booleans, and strings. Arrays can be passed as a comma delimited string (e.g. param:\"1,2,3\" ). Hashes are not currently supported. It is recommended to add all pantograph actions you use to your Pantfile . Source code This action, just like the rest of pantograph , is fully open source, view the source code on GitHub Back to actions","title":"import_from_git"},{"location":"actions/import_from_git/#import_from_git","text":"Import another Pantfile from a remote git repository to use its lanes This is useful when sharing the same lanes across multiple projects import_from_git Supported platforms mac, linux, windows Author @fabiomassimo, @KrauseFx, @Liquidsoul, @johnknapprs","title":"import_from_git"},{"location":"actions/import_from_git/#3-examples","text":"# Simple import on master branch import_from_git ( url : \"git@github.com:johnknapprs/pantograph.git\" ) # Import a Pantfile with an Optimistic version match operator import_from_git ( url : \"git@github.com:johnknapprs/pantograph.git\" , branch : \"master\" , path : \"pantograph/Pantfile\" , version : \"~> 1.0.0\" ) # Import a Pantfile with multiple version conditions import_from_git ( url : \"git@github.com:johnknapprs/pantograph.git\" , # The URL of the repository to import the Pantfile from. branch : \"development\" , # The branch to checkout on the repository version : [ \">= 1.1.0\" , \"< 2.0.0\" ] )","title":"3 Examples"},{"location":"actions/import_from_git/#parameters","text":"Key Description Default url The URL of the repository to import the Pantfile from branch The branch or tag to check-out on the repository master path The path of the Pantfile in the repository pantograph/Pantfile version The version to checkout on the repository. Optimistic match operator or multiple conditions can be used to select the version within constraints * = default value is dependent on the user's system","title":"Parameters"},{"location":"actions/import_from_git/#documentation","text":"To show the documentation in your terminal, run pantograph action import_from_git","title":"Documentation"},{"location":"actions/import_from_git/#cli","text":"It is recommended to add the above action into your Pantfile , however sometimes you might want to run one-offs. To do so, you can run the following command from your terminal pantograph run import_from_git To pass parameters, make use of the : symbol, for example pantograph run import_from_git parameter1: \"value1\" parameter2: \"value2\" It's important to note that the CLI supports primitive types like integers, floats, booleans, and strings. Arrays can be passed as a comma delimited string (e.g. param:\"1,2,3\" ). Hashes are not currently supported. It is recommended to add all pantograph actions you use to your Pantfile .","title":"CLI"},{"location":"actions/import_from_git/#source-code","text":"This action, just like the rest of pantograph , is fully open source, view the source code on GitHub Back to actions","title":"Source code"},{"location":"actions/is_ci/","text":"is_ci Is the current run being executed on a CI system, like Jenkins or Travis Return true if pantograph is currently executed on Travis, Jenkins, or a similar CI service is_ci Supported platforms mac, linux, windows Author @KrauseFx 1 Example if is_ci? puts \"I'm a computer\" else say \"Hi Human!\" end Documentation To show the documentation in your terminal, run pantograph action is_ci CLI It is recommended to add the above action into your Pantfile , however sometimes you might want to run one-offs. To do so, you can run the following command from your terminal pantograph run is_ci To pass parameters, make use of the : symbol, for example pantograph run is_ci parameter1: \"value1\" parameter2: \"value2\" It's important to note that the CLI supports primitive types like integers, floats, booleans, and strings. Arrays can be passed as a comma delimited string (e.g. param:\"1,2,3\" ). Hashes are not currently supported. It is recommended to add all pantograph actions you use to your Pantfile . Source code This action, just like the rest of pantograph , is fully open source, view the source code on GitHub Back to actions","title":"is_ci"},{"location":"actions/is_ci/#is_ci","text":"Is the current run being executed on a CI system, like Jenkins or Travis Return true if pantograph is currently executed on Travis, Jenkins, or a similar CI service is_ci Supported platforms mac, linux, windows Author @KrauseFx","title":"is_ci"},{"location":"actions/is_ci/#1-example","text":"if is_ci? puts \"I'm a computer\" else say \"Hi Human!\" end","title":"1 Example"},{"location":"actions/is_ci/#documentation","text":"To show the documentation in your terminal, run pantograph action is_ci","title":"Documentation"},{"location":"actions/is_ci/#cli","text":"It is recommended to add the above action into your Pantfile , however sometimes you might want to run one-offs. To do so, you can run the following command from your terminal pantograph run is_ci To pass parameters, make use of the : symbol, for example pantograph run is_ci parameter1: \"value1\" parameter2: \"value2\" It's important to note that the CLI supports primitive types like integers, floats, booleans, and strings. Arrays can be passed as a comma delimited string (e.g. param:\"1,2,3\" ). Hashes are not currently supported. It is recommended to add all pantograph actions you use to your Pantfile .","title":"CLI"},{"location":"actions/is_ci/#source-code","text":"This action, just like the rest of pantograph , is fully open source, view the source code on GitHub Back to actions","title":"Source code"},{"location":"actions/is_verbose/","text":"is_verbose Returns Boolean whether --verbose flag was set is_verbose Supported platforms mac, linux, windows Author @johnknapprs 1 Example if is_verbose? UI . important ( \"Verbosity is turned on!\" ) else UI . message ( \"Verbosity is turned off!\" ) end Lane Variables Actions can communicate with each other using a shared hash lane_context , that can be accessed in other actions, plugins or your lanes: lane_context[SharedValues:XYZ] . The is_verbose action generates the following Lane Variables: SharedValue Description SharedValues::IS_VERBOSE Boolean whether verbosity flag was set To get more information check the Lanes documentation . Documentation To show the documentation in your terminal, run pantograph action is_verbose CLI It is recommended to add the above action into your Pantfile , however sometimes you might want to run one-offs. To do so, you can run the following command from your terminal pantograph run is_verbose To pass parameters, make use of the : symbol, for example pantograph run is_verbose parameter1: \"value1\" parameter2: \"value2\" It's important to note that the CLI supports primitive types like integers, floats, booleans, and strings. Arrays can be passed as a comma delimited string (e.g. param:\"1,2,3\" ). Hashes are not currently supported. It is recommended to add all pantograph actions you use to your Pantfile . Source code This action, just like the rest of pantograph , is fully open source, view the source code on GitHub Back to actions","title":"is_verbose"},{"location":"actions/is_verbose/#is_verbose","text":"Returns Boolean whether --verbose flag was set is_verbose Supported platforms mac, linux, windows Author @johnknapprs","title":"is_verbose"},{"location":"actions/is_verbose/#1-example","text":"if is_verbose? UI . important ( \"Verbosity is turned on!\" ) else UI . message ( \"Verbosity is turned off!\" ) end","title":"1 Example"},{"location":"actions/is_verbose/#lane-variables","text":"Actions can communicate with each other using a shared hash lane_context , that can be accessed in other actions, plugins or your lanes: lane_context[SharedValues:XYZ] . The is_verbose action generates the following Lane Variables: SharedValue Description SharedValues::IS_VERBOSE Boolean whether verbosity flag was set To get more information check the Lanes documentation .","title":"Lane Variables"},{"location":"actions/is_verbose/#documentation","text":"To show the documentation in your terminal, run pantograph action is_verbose","title":"Documentation"},{"location":"actions/is_verbose/#cli","text":"It is recommended to add the above action into your Pantfile , however sometimes you might want to run one-offs. To do so, you can run the following command from your terminal pantograph run is_verbose To pass parameters, make use of the : symbol, for example pantograph run is_verbose parameter1: \"value1\" parameter2: \"value2\" It's important to note that the CLI supports primitive types like integers, floats, booleans, and strings. Arrays can be passed as a comma delimited string (e.g. param:\"1,2,3\" ). Hashes are not currently supported. It is recommended to add all pantograph actions you use to your Pantfile .","title":"CLI"},{"location":"actions/is_verbose/#source-code","text":"This action, just like the rest of pantograph , is fully open source, view the source code on GitHub Back to actions","title":"Source code"},{"location":"actions/jira/","text":"jira Leave a comment on JIRA tickets jira Supported platforms mac, linux, windows Author @iAmChrisTruman 2 Examples jira ( url : \"https://bugs.yourdomain.com\" , username : \"Your username\" , password : \"Your password\" , ticket_id : \"Ticket ID, i.e. IOS-123\" , comment_text : \"Text to post as a comment\" ) jira ( url : \"https://yourserverdomain.com\" , context_path : \"/jira\" , username : \"Your username\" , password : \"Your password\" , ticket_id : \"Ticket ID, i.e. IOS-123\" , comment_text : \"Text to post as a comment\" ) Parameters Key Description Default url URL for Jira instance context_path Appends to the url (ex: \"/jira\") '' username Username for JIRA instance password Password for Jira ticket_id Ticket ID for Jira, i.e. APP-123 comment_text Text to add to the ticket as a comment * = default value is dependent on the user's system Documentation To show the documentation in your terminal, run pantograph action jira CLI It is recommended to add the above action into your Pantfile , however sometimes you might want to run one-offs. To do so, you can run the following command from your terminal pantograph run jira To pass parameters, make use of the : symbol, for example pantograph run jira parameter1: \"value1\" parameter2: \"value2\" It's important to note that the CLI supports primitive types like integers, floats, booleans, and strings. Arrays can be passed as a comma delimited string (e.g. param:\"1,2,3\" ). Hashes are not currently supported. It is recommended to add all pantograph actions you use to your Pantfile . Source code This action, just like the rest of pantograph , is fully open source, view the source code on GitHub Back to actions","title":"jira"},{"location":"actions/jira/#jira","text":"Leave a comment on JIRA tickets jira Supported platforms mac, linux, windows Author @iAmChrisTruman","title":"jira"},{"location":"actions/jira/#2-examples","text":"jira ( url : \"https://bugs.yourdomain.com\" , username : \"Your username\" , password : \"Your password\" , ticket_id : \"Ticket ID, i.e. IOS-123\" , comment_text : \"Text to post as a comment\" ) jira ( url : \"https://yourserverdomain.com\" , context_path : \"/jira\" , username : \"Your username\" , password : \"Your password\" , ticket_id : \"Ticket ID, i.e. IOS-123\" , comment_text : \"Text to post as a comment\" )","title":"2 Examples"},{"location":"actions/jira/#parameters","text":"Key Description Default url URL for Jira instance context_path Appends to the url (ex: \"/jira\") '' username Username for JIRA instance password Password for Jira ticket_id Ticket ID for Jira, i.e. APP-123 comment_text Text to add to the ticket as a comment * = default value is dependent on the user's system","title":"Parameters"},{"location":"actions/jira/#documentation","text":"To show the documentation in your terminal, run pantograph action jira","title":"Documentation"},{"location":"actions/jira/#cli","text":"It is recommended to add the above action into your Pantfile , however sometimes you might want to run one-offs. To do so, you can run the following command from your terminal pantograph run jira To pass parameters, make use of the : symbol, for example pantograph run jira parameter1: \"value1\" parameter2: \"value2\" It's important to note that the CLI supports primitive types like integers, floats, booleans, and strings. Arrays can be passed as a comma delimited string (e.g. param:\"1,2,3\" ). Hashes are not currently supported. It is recommended to add all pantograph actions you use to your Pantfile .","title":"CLI"},{"location":"actions/jira/#source-code","text":"This action, just like the rest of pantograph , is fully open source, view the source code on GitHub Back to actions","title":"Source code"},{"location":"actions/lane_context/","text":"lane_context Access lane context values More information about how the lane context works: https://johnknapprs.github.io/pantograph/advanced/#lane-context lane_context Supported platforms mac, linux, windows Author @KrauseFx 2 Examples lane_context [ :BUILD_NUMBER ] lane_context [ SharedValues :: IPA_OUTPUT_PATH ] Documentation To show the documentation in your terminal, run pantograph action lane_context CLI It is recommended to add the above action into your Pantfile , however sometimes you might want to run one-offs. To do so, you can run the following command from your terminal pantograph run lane_context To pass parameters, make use of the : symbol, for example pantograph run lane_context parameter1: \"value1\" parameter2: \"value2\" It's important to note that the CLI supports primitive types like integers, floats, booleans, and strings. Arrays can be passed as a comma delimited string (e.g. param:\"1,2,3\" ). Hashes are not currently supported. It is recommended to add all pantograph actions you use to your Pantfile . Source code This action, just like the rest of pantograph , is fully open source, view the source code on GitHub Back to actions","title":"lane_context"},{"location":"actions/lane_context/#lane_context","text":"Access lane context values More information about how the lane context works: https://johnknapprs.github.io/pantograph/advanced/#lane-context lane_context Supported platforms mac, linux, windows Author @KrauseFx","title":"lane_context"},{"location":"actions/lane_context/#2-examples","text":"lane_context [ :BUILD_NUMBER ] lane_context [ SharedValues :: IPA_OUTPUT_PATH ]","title":"2 Examples"},{"location":"actions/lane_context/#documentation","text":"To show the documentation in your terminal, run pantograph action lane_context","title":"Documentation"},{"location":"actions/lane_context/#cli","text":"It is recommended to add the above action into your Pantfile , however sometimes you might want to run one-offs. To do so, you can run the following command from your terminal pantograph run lane_context To pass parameters, make use of the : symbol, for example pantograph run lane_context parameter1: \"value1\" parameter2: \"value2\" It's important to note that the CLI supports primitive types like integers, floats, booleans, and strings. Arrays can be passed as a comma delimited string (e.g. param:\"1,2,3\" ). Hashes are not currently supported. It is recommended to add all pantograph actions you use to your Pantfile .","title":"CLI"},{"location":"actions/lane_context/#source-code","text":"This action, just like the rest of pantograph , is fully open source, view the source code on GitHub Back to actions","title":"Source code"},{"location":"actions/last_git_commit/","text":"last_git_commit Return last git commit hash, abbreviated commit hash, commit message and author last_git_commit Supported platforms mac, linux, windows Author @ngutman, @johnknapprs Returns Returns the following dict: 1 Example commit = last_git_commit crashlytics ( notes : commit [ :message ] ) # message of commit author = commit [ :author ] # author of the commit author_email = commit [ :author_email ] # email of the author of the commit hash = commit [ :commit_hash ] # long sha of commit short_hash = commit [ :abbreviated_commit_hash ] # short sha of commit Documentation To show the documentation in your terminal, run pantograph action last_git_commit CLI It is recommended to add the above action into your Pantfile , however sometimes you might want to run one-offs. To do so, you can run the following command from your terminal pantograph run last_git_commit To pass parameters, make use of the : symbol, for example pantograph run last_git_commit parameter1: \"value1\" parameter2: \"value2\" It's important to note that the CLI supports primitive types like integers, floats, booleans, and strings. Arrays can be passed as a comma delimited string (e.g. param:\"1,2,3\" ). Hashes are not currently supported. It is recommended to add all pantograph actions you use to your Pantfile . Source code This action, just like the rest of pantograph , is fully open source, view the source code on GitHub Back to actions","title":"last_git_commit"},{"location":"actions/last_git_commit/#last_git_commit","text":"Return last git commit hash, abbreviated commit hash, commit message and author last_git_commit Supported platforms mac, linux, windows Author @ngutman, @johnknapprs Returns Returns the following dict:","title":"last_git_commit"},{"location":"actions/last_git_commit/#1-example","text":"commit = last_git_commit crashlytics ( notes : commit [ :message ] ) # message of commit author = commit [ :author ] # author of the commit author_email = commit [ :author_email ] # email of the author of the commit hash = commit [ :commit_hash ] # long sha of commit short_hash = commit [ :abbreviated_commit_hash ] # short sha of commit","title":"1 Example"},{"location":"actions/last_git_commit/#documentation","text":"To show the documentation in your terminal, run pantograph action last_git_commit","title":"Documentation"},{"location":"actions/last_git_commit/#cli","text":"It is recommended to add the above action into your Pantfile , however sometimes you might want to run one-offs. To do so, you can run the following command from your terminal pantograph run last_git_commit To pass parameters, make use of the : symbol, for example pantograph run last_git_commit parameter1: \"value1\" parameter2: \"value2\" It's important to note that the CLI supports primitive types like integers, floats, booleans, and strings. Arrays can be passed as a comma delimited string (e.g. param:\"1,2,3\" ). Hashes are not currently supported. It is recommended to add all pantograph actions you use to your Pantfile .","title":"CLI"},{"location":"actions/last_git_commit/#source-code","text":"This action, just like the rest of pantograph , is fully open source, view the source code on GitHub Back to actions","title":"Source code"},{"location":"actions/make_changelog_from_jenkins/","text":"make_changelog_from_jenkins Generate a changelog using the Changes section from the current Jenkins build This is useful when deploying automated builds. The changelog from Jenkins lists all the commit messages since the last build. make_changelog_from_jenkins Supported platforms mac, linux, windows Author @mandrizzle 1 Example make_changelog_from_jenkins ( # Optional, lets you set a changelog in the case is not generated on Jenkins or if ran outside of Jenkins fallback_changelog : \"Bug fixes and performance enhancements\" ) Parameters Key Description Default fallback_changelog Fallback changelog if there is not one on Jenkins, or it could not be read '' include_commit_body Include the commit body along with the summary true * = default value is dependent on the user's system Lane Variables Actions can communicate with each other using a shared hash lane_context , that can be accessed in other actions, plugins or your lanes: lane_context[SharedValues:XYZ] . The make_changelog_from_jenkins action generates the following Lane Variables: SharedValue Description SharedValues::PANT_CHANGELOG The changelog generated by Jenkins To get more information check the Lanes documentation . Documentation To show the documentation in your terminal, run pantograph action make_changelog_from_jenkins CLI It is recommended to add the above action into your Pantfile , however sometimes you might want to run one-offs. To do so, you can run the following command from your terminal pantograph run make_changelog_from_jenkins To pass parameters, make use of the : symbol, for example pantograph run make_changelog_from_jenkins parameter1: \"value1\" parameter2: \"value2\" It's important to note that the CLI supports primitive types like integers, floats, booleans, and strings. Arrays can be passed as a comma delimited string (e.g. param:\"1,2,3\" ). Hashes are not currently supported. It is recommended to add all pantograph actions you use to your Pantfile . Source code This action, just like the rest of pantograph , is fully open source, view the source code on GitHub Back to actions","title":"Make changelog from jenkins"},{"location":"actions/make_changelog_from_jenkins/#make_changelog_from_jenkins","text":"Generate a changelog using the Changes section from the current Jenkins build This is useful when deploying automated builds. The changelog from Jenkins lists all the commit messages since the last build. make_changelog_from_jenkins Supported platforms mac, linux, windows Author @mandrizzle","title":"make_changelog_from_jenkins"},{"location":"actions/make_changelog_from_jenkins/#1-example","text":"make_changelog_from_jenkins ( # Optional, lets you set a changelog in the case is not generated on Jenkins or if ran outside of Jenkins fallback_changelog : \"Bug fixes and performance enhancements\" )","title":"1 Example"},{"location":"actions/make_changelog_from_jenkins/#parameters","text":"Key Description Default fallback_changelog Fallback changelog if there is not one on Jenkins, or it could not be read '' include_commit_body Include the commit body along with the summary true * = default value is dependent on the user's system","title":"Parameters"},{"location":"actions/make_changelog_from_jenkins/#lane-variables","text":"Actions can communicate with each other using a shared hash lane_context , that can be accessed in other actions, plugins or your lanes: lane_context[SharedValues:XYZ] . The make_changelog_from_jenkins action generates the following Lane Variables: SharedValue Description SharedValues::PANT_CHANGELOG The changelog generated by Jenkins To get more information check the Lanes documentation .","title":"Lane Variables"},{"location":"actions/make_changelog_from_jenkins/#documentation","text":"To show the documentation in your terminal, run pantograph action make_changelog_from_jenkins","title":"Documentation"},{"location":"actions/make_changelog_from_jenkins/#cli","text":"It is recommended to add the above action into your Pantfile , however sometimes you might want to run one-offs. To do so, you can run the following command from your terminal pantograph run make_changelog_from_jenkins To pass parameters, make use of the : symbol, for example pantograph run make_changelog_from_jenkins parameter1: \"value1\" parameter2: \"value2\" It's important to note that the CLI supports primitive types like integers, floats, booleans, and strings. Arrays can be passed as a comma delimited string (e.g. param:\"1,2,3\" ). Hashes are not currently supported. It is recommended to add all pantograph actions you use to your Pantfile .","title":"CLI"},{"location":"actions/make_changelog_from_jenkins/#source-code","text":"This action, just like the rest of pantograph , is fully open source, view the source code on GitHub Back to actions","title":"Source code"},{"location":"actions/min_pantograph_version/","text":"min_pantograph_version Verifies the minimum pantograph version required Add this to your Pantfile to require a certain version of pantograph . min_pantograph_version Supported platforms mac, linux, windows Author @KrauseFx, @johnknapprs 1 Example min_pantograph_version ( \"0.14.0\" ) Documentation To show the documentation in your terminal, run pantograph action min_pantograph_version CLI It is recommended to add the above action into your Pantfile , however sometimes you might want to run one-offs. To do so, you can run the following command from your terminal pantograph run min_pantograph_version To pass parameters, make use of the : symbol, for example pantograph run min_pantograph_version parameter1: \"value1\" parameter2: \"value2\" It's important to note that the CLI supports primitive types like integers, floats, booleans, and strings. Arrays can be passed as a comma delimited string (e.g. param:\"1,2,3\" ). Hashes are not currently supported. It is recommended to add all pantograph actions you use to your Pantfile . Source code This action, just like the rest of pantograph , is fully open source, view the source code on GitHub Back to actions","title":"min_pantograph_version"},{"location":"actions/min_pantograph_version/#min_pantograph_version","text":"Verifies the minimum pantograph version required Add this to your Pantfile to require a certain version of pantograph . min_pantograph_version Supported platforms mac, linux, windows Author @KrauseFx, @johnknapprs","title":"min_pantograph_version"},{"location":"actions/min_pantograph_version/#1-example","text":"min_pantograph_version ( \"0.14.0\" )","title":"1 Example"},{"location":"actions/min_pantograph_version/#documentation","text":"To show the documentation in your terminal, run pantograph action min_pantograph_version","title":"Documentation"},{"location":"actions/min_pantograph_version/#cli","text":"It is recommended to add the above action into your Pantfile , however sometimes you might want to run one-offs. To do so, you can run the following command from your terminal pantograph run min_pantograph_version To pass parameters, make use of the : symbol, for example pantograph run min_pantograph_version parameter1: \"value1\" parameter2: \"value2\" It's important to note that the CLI supports primitive types like integers, floats, booleans, and strings. Arrays can be passed as a comma delimited string (e.g. param:\"1,2,3\" ). Hashes are not currently supported. It is recommended to add all pantograph actions you use to your Pantfile .","title":"CLI"},{"location":"actions/min_pantograph_version/#source-code","text":"This action, just like the rest of pantograph , is fully open source, view the source code on GitHub Back to actions","title":"Source code"},{"location":"actions/nexus_upload/","text":"nexus_upload Upload a file to Sonatype Nexus platform nexus_upload Supported platforms mac, linux, windows Author @xfreebird, @mdio 2 Examples # for Nexus 2 nexus_upload ( file : \"/path/to/file.ipa\" , repo_id : \"artefacts\" , repo_group_id : \"com.pantograph\" , repo_project_name : \"ipa\" , repo_project_version : \"1.13\" , repo_classifier : \"dSYM\" , # Optional endpoint : \"http://localhost:8081\" , username : \"admin\" , password : \"admin123\" ) # for Nexus 3 nexus_upload ( nexus_version : 3 , mount_path : \"\" , file : \"/path/to/file.ipa\" , repo_id : \"artefacts\" , repo_group_id : \"com.pantograph\" , repo_project_name : \"ipa\" , repo_project_version : \"1.13\" , repo_classifier : \"dSYM\" , # Optional endpoint : \"http://localhost:8081\" , username : \"admin\" , password : \"admin123\" ) Parameters Key Description Default file File to be uploaded to Nexus repo_id Nexus repository id e.g. artefacts repo_group_id Nexus repository group id e.g. com.company repo_project_name Nexus repository commandect name. Only letters, digits, underscores(_), hyphens(-), and dots(.) are allowed repo_project_version Nexus repository commandect version repo_classifier Nexus repository artifact classifier (optional) endpoint Nexus endpoint e.g. http://nexus:8081 mount_path Nexus mount path (Nexus 3 instances have this configured as empty by default) /nexus username Nexus username password Nexus password ssl_verify Verify SSL true nexus_version Nexus major version 2 verbose Make detailed output false proxy_username Proxy username proxy_password Proxy password proxy_address Proxy address proxy_port Proxy port * = default value is dependent on the user's system Documentation To show the documentation in your terminal, run pantograph action nexus_upload CLI It is recommended to add the above action into your Pantfile , however sometimes you might want to run one-offs. To do so, you can run the following command from your terminal pantograph run nexus_upload To pass parameters, make use of the : symbol, for example pantograph run nexus_upload parameter1: \"value1\" parameter2: \"value2\" It's important to note that the CLI supports primitive types like integers, floats, booleans, and strings. Arrays can be passed as a comma delimited string (e.g. param:\"1,2,3\" ). Hashes are not currently supported. It is recommended to add all pantograph actions you use to your Pantfile . Source code This action, just like the rest of pantograph , is fully open source, view the source code on GitHub Back to actions","title":"Nexus upload"},{"location":"actions/nexus_upload/#nexus_upload","text":"Upload a file to Sonatype Nexus platform nexus_upload Supported platforms mac, linux, windows Author @xfreebird, @mdio","title":"nexus_upload"},{"location":"actions/nexus_upload/#2-examples","text":"# for Nexus 2 nexus_upload ( file : \"/path/to/file.ipa\" , repo_id : \"artefacts\" , repo_group_id : \"com.pantograph\" , repo_project_name : \"ipa\" , repo_project_version : \"1.13\" , repo_classifier : \"dSYM\" , # Optional endpoint : \"http://localhost:8081\" , username : \"admin\" , password : \"admin123\" ) # for Nexus 3 nexus_upload ( nexus_version : 3 , mount_path : \"\" , file : \"/path/to/file.ipa\" , repo_id : \"artefacts\" , repo_group_id : \"com.pantograph\" , repo_project_name : \"ipa\" , repo_project_version : \"1.13\" , repo_classifier : \"dSYM\" , # Optional endpoint : \"http://localhost:8081\" , username : \"admin\" , password : \"admin123\" )","title":"2 Examples"},{"location":"actions/nexus_upload/#parameters","text":"Key Description Default file File to be uploaded to Nexus repo_id Nexus repository id e.g. artefacts repo_group_id Nexus repository group id e.g. com.company repo_project_name Nexus repository commandect name. Only letters, digits, underscores(_), hyphens(-), and dots(.) are allowed repo_project_version Nexus repository commandect version repo_classifier Nexus repository artifact classifier (optional) endpoint Nexus endpoint e.g. http://nexus:8081 mount_path Nexus mount path (Nexus 3 instances have this configured as empty by default) /nexus username Nexus username password Nexus password ssl_verify Verify SSL true nexus_version Nexus major version 2 verbose Make detailed output false proxy_username Proxy username proxy_password Proxy password proxy_address Proxy address proxy_port Proxy port * = default value is dependent on the user's system","title":"Parameters"},{"location":"actions/nexus_upload/#documentation","text":"To show the documentation in your terminal, run pantograph action nexus_upload","title":"Documentation"},{"location":"actions/nexus_upload/#cli","text":"It is recommended to add the above action into your Pantfile , however sometimes you might want to run one-offs. To do so, you can run the following command from your terminal pantograph run nexus_upload To pass parameters, make use of the : symbol, for example pantograph run nexus_upload parameter1: \"value1\" parameter2: \"value2\" It's important to note that the CLI supports primitive types like integers, floats, booleans, and strings. Arrays can be passed as a comma delimited string (e.g. param:\"1,2,3\" ). Hashes are not currently supported. It is recommended to add all pantograph actions you use to your Pantfile .","title":"CLI"},{"location":"actions/nexus_upload/#source-code","text":"This action, just like the rest of pantograph , is fully open source, view the source code on GitHub Back to actions","title":"Source code"},{"location":"actions/number_of_commits/","text":"number_of_commits Return the number of commits in current git branch number_of_commits Supported platforms mac, linux, windows Author @onevcat, @samuelbeek, @johnknapprs Returns The total number of all commits in current git branch 2 Examples ENV [ \"VERSION_NAME\" ] = number_of_commits build_number = number_of_commits ( all : true ) increment_build_number ( build_number : build_number ) Parameters Key Description Default all Returns number of all commits instead of current branch * = default value is dependent on the user's system Lane Variables Actions can communicate with each other using a shared hash lane_context , that can be accessed in other actions, plugins or your lanes: lane_context[SharedValues:XYZ] . The number_of_commits action generates the following Lane Variables: SharedValue Description To get more information check the Lanes documentation . Documentation To show the documentation in your terminal, run pantograph action number_of_commits CLI It is recommended to add the above action into your Pantfile , however sometimes you might want to run one-offs. To do so, you can run the following command from your terminal pantograph run number_of_commits To pass parameters, make use of the : symbol, for example pantograph run number_of_commits parameter1: \"value1\" parameter2: \"value2\" It's important to note that the CLI supports primitive types like integers, floats, booleans, and strings. Arrays can be passed as a comma delimited string (e.g. param:\"1,2,3\" ). Hashes are not currently supported. It is recommended to add all pantograph actions you use to your Pantfile . Source code This action, just like the rest of pantograph , is fully open source, view the source code on GitHub Back to actions","title":"number_of_commits"},{"location":"actions/number_of_commits/#number_of_commits","text":"Return the number of commits in current git branch number_of_commits Supported platforms mac, linux, windows Author @onevcat, @samuelbeek, @johnknapprs Returns The total number of all commits in current git branch","title":"number_of_commits"},{"location":"actions/number_of_commits/#2-examples","text":"ENV [ \"VERSION_NAME\" ] = number_of_commits build_number = number_of_commits ( all : true ) increment_build_number ( build_number : build_number )","title":"2 Examples"},{"location":"actions/number_of_commits/#parameters","text":"Key Description Default all Returns number of all commits instead of current branch * = default value is dependent on the user's system","title":"Parameters"},{"location":"actions/number_of_commits/#lane-variables","text":"Actions can communicate with each other using a shared hash lane_context , that can be accessed in other actions, plugins or your lanes: lane_context[SharedValues:XYZ] . The number_of_commits action generates the following Lane Variables: SharedValue Description To get more information check the Lanes documentation .","title":"Lane Variables"},{"location":"actions/number_of_commits/#documentation","text":"To show the documentation in your terminal, run pantograph action number_of_commits","title":"Documentation"},{"location":"actions/number_of_commits/#cli","text":"It is recommended to add the above action into your Pantfile , however sometimes you might want to run one-offs. To do so, you can run the following command from your terminal pantograph run number_of_commits To pass parameters, make use of the : symbol, for example pantograph run number_of_commits parameter1: \"value1\" parameter2: \"value2\" It's important to note that the CLI supports primitive types like integers, floats, booleans, and strings. Arrays can be passed as a comma delimited string (e.g. param:\"1,2,3\" ). Hashes are not currently supported. It is recommended to add all pantograph actions you use to your Pantfile .","title":"CLI"},{"location":"actions/number_of_commits/#source-code","text":"This action, just like the rest of pantograph , is fully open source, view the source code on GitHub Back to actions","title":"Source code"},{"location":"actions/opt_out_usage/","text":"opt_out_usage This will stop uploading the information which actions were run By default, pantograph will track what actions are being used. No personal/sensitive information is recorded. Learn more at https://johnknapprs.github.io/pantograph/#metrics . Add opt_out_usage at the top of your Pantfile to disable metrics collection. opt_out_usage Supported platforms mac, linux, windows Author @KrauseFx 1 Example # add this to the top of your Pantfile opt_out_usage Documentation To show the documentation in your terminal, run pantograph action opt_out_usage CLI It is recommended to add the above action into your Pantfile , however sometimes you might want to run one-offs. To do so, you can run the following command from your terminal pantograph run opt_out_usage To pass parameters, make use of the : symbol, for example pantograph run opt_out_usage parameter1: \"value1\" parameter2: \"value2\" It's important to note that the CLI supports primitive types like integers, floats, booleans, and strings. Arrays can be passed as a comma delimited string (e.g. param:\"1,2,3\" ). Hashes are not currently supported. It is recommended to add all pantograph actions you use to your Pantfile . Source code This action, just like the rest of pantograph , is fully open source, view the source code on GitHub Back to actions","title":"opt_out_usage"},{"location":"actions/opt_out_usage/#opt_out_usage","text":"This will stop uploading the information which actions were run By default, pantograph will track what actions are being used. No personal/sensitive information is recorded. Learn more at https://johnknapprs.github.io/pantograph/#metrics . Add opt_out_usage at the top of your Pantfile to disable metrics collection. opt_out_usage Supported platforms mac, linux, windows Author @KrauseFx","title":"opt_out_usage"},{"location":"actions/opt_out_usage/#1-example","text":"# add this to the top of your Pantfile opt_out_usage","title":"1 Example"},{"location":"actions/opt_out_usage/#documentation","text":"To show the documentation in your terminal, run pantograph action opt_out_usage","title":"Documentation"},{"location":"actions/opt_out_usage/#cli","text":"It is recommended to add the above action into your Pantfile , however sometimes you might want to run one-offs. To do so, you can run the following command from your terminal pantograph run opt_out_usage To pass parameters, make use of the : symbol, for example pantograph run opt_out_usage parameter1: \"value1\" parameter2: \"value2\" It's important to note that the CLI supports primitive types like integers, floats, booleans, and strings. Arrays can be passed as a comma delimited string (e.g. param:\"1,2,3\" ). Hashes are not currently supported. It is recommended to add all pantograph actions you use to your Pantfile .","title":"CLI"},{"location":"actions/opt_out_usage/#source-code","text":"This action, just like the rest of pantograph , is fully open source, view the source code on GitHub Back to actions","title":"Source code"},{"location":"actions/pantograph_version/","text":"pantograph_version Alias for the min_pantograph_version action Add this to your Pantfile to require a certain version of pantograph . pantograph_version Supported platforms mac, linux, windows Author @KrauseFx, @johnknapprs 1 Example min_pantograph_version ( \"0.14.0\" ) Documentation To show the documentation in your terminal, run pantograph action pantograph_version CLI It is recommended to add the above action into your Pantfile , however sometimes you might want to run one-offs. To do so, you can run the following command from your terminal pantograph run pantograph_version To pass parameters, make use of the : symbol, for example pantograph run pantograph_version parameter1: \"value1\" parameter2: \"value2\" It's important to note that the CLI supports primitive types like integers, floats, booleans, and strings. Arrays can be passed as a comma delimited string (e.g. param:\"1,2,3\" ). Hashes are not currently supported. It is recommended to add all pantograph actions you use to your Pantfile . Source code This action, just like the rest of pantograph , is fully open source, view the source code on GitHub Back to actions","title":"pantograph_version"},{"location":"actions/pantograph_version/#pantograph_version","text":"Alias for the min_pantograph_version action Add this to your Pantfile to require a certain version of pantograph . pantograph_version Supported platforms mac, linux, windows Author @KrauseFx, @johnknapprs","title":"pantograph_version"},{"location":"actions/pantograph_version/#1-example","text":"min_pantograph_version ( \"0.14.0\" )","title":"1 Example"},{"location":"actions/pantograph_version/#documentation","text":"To show the documentation in your terminal, run pantograph action pantograph_version","title":"Documentation"},{"location":"actions/pantograph_version/#cli","text":"It is recommended to add the above action into your Pantfile , however sometimes you might want to run one-offs. To do so, you can run the following command from your terminal pantograph run pantograph_version To pass parameters, make use of the : symbol, for example pantograph run pantograph_version parameter1: \"value1\" parameter2: \"value2\" It's important to note that the CLI supports primitive types like integers, floats, booleans, and strings. Arrays can be passed as a comma delimited string (e.g. param:\"1,2,3\" ). Hashes are not currently supported. It is recommended to add all pantograph actions you use to your Pantfile .","title":"CLI"},{"location":"actions/pantograph_version/#source-code","text":"This action, just like the rest of pantograph , is fully open source, view the source code on GitHub Back to actions","title":"Source code"},{"location":"actions/println/","text":"println Alias for the puts action println Supported platforms mac, linux, windows Author @KrauseFx 1 Example puts \"Hi there\" Parameters Key Description Default message Message to be printed out * = default value is dependent on the user's system Documentation To show the documentation in your terminal, run pantograph action println CLI It is recommended to add the above action into your Pantfile , however sometimes you might want to run one-offs. To do so, you can run the following command from your terminal pantograph run println To pass parameters, make use of the : symbol, for example pantograph run println parameter1: \"value1\" parameter2: \"value2\" It's important to note that the CLI supports primitive types like integers, floats, booleans, and strings. Arrays can be passed as a comma delimited string (e.g. param:\"1,2,3\" ). Hashes are not currently supported. It is recommended to add all pantograph actions you use to your Pantfile . Source code This action, just like the rest of pantograph , is fully open source, view the source code on GitHub Back to actions","title":"println"},{"location":"actions/println/#println","text":"Alias for the puts action println Supported platforms mac, linux, windows Author @KrauseFx","title":"println"},{"location":"actions/println/#1-example","text":"puts \"Hi there\"","title":"1 Example"},{"location":"actions/println/#parameters","text":"Key Description Default message Message to be printed out * = default value is dependent on the user's system","title":"Parameters"},{"location":"actions/println/#documentation","text":"To show the documentation in your terminal, run pantograph action println","title":"Documentation"},{"location":"actions/println/#cli","text":"It is recommended to add the above action into your Pantfile , however sometimes you might want to run one-offs. To do so, you can run the following command from your terminal pantograph run println To pass parameters, make use of the : symbol, for example pantograph run println parameter1: \"value1\" parameter2: \"value2\" It's important to note that the CLI supports primitive types like integers, floats, booleans, and strings. Arrays can be passed as a comma delimited string (e.g. param:\"1,2,3\" ). Hashes are not currently supported. It is recommended to add all pantograph actions you use to your Pantfile .","title":"CLI"},{"location":"actions/println/#source-code","text":"This action, just like the rest of pantograph , is fully open source, view the source code on GitHub Back to actions","title":"Source code"},{"location":"actions/prompt/","text":"prompt Ask the user for a value or for confirmation You can use prompt to ask the user for a value or to just let the user confirm the next step. When this is executed on a CI service, the passed ci_input value will be returned. This action also supports multi-line inputs using the multi_line_end_keyword option. prompt Supported platforms mac, linux, windows Author @KrauseFx, @johnknapprs 2 Examples changelog = prompt ( text : \"Changelog: \" ) changelog = prompt ( text : \"Changelog: \" , multi_line_end_keyword : \"END\" ) crashlytics ( notes : changelog ) Parameters Key Description Default text The text that will be displayed to the user Please enter some text: ci_input The default text that will be used when being executed on a CI service '' boolean Is that a boolean question (yes/no)? This will add (y/n) at the end false secure_text Is that a secure text (yes/no)? false multi_line_end_keyword Enable multi-line inputs by providing an end text (e.g. 'END') which will stop the user input * = default value is dependent on the user's system Documentation To show the documentation in your terminal, run pantograph action prompt CLI It is recommended to add the above action into your Pantfile , however sometimes you might want to run one-offs. To do so, you can run the following command from your terminal pantograph run prompt To pass parameters, make use of the : symbol, for example pantograph run prompt parameter1: \"value1\" parameter2: \"value2\" It's important to note that the CLI supports primitive types like integers, floats, booleans, and strings. Arrays can be passed as a comma delimited string (e.g. param:\"1,2,3\" ). Hashes are not currently supported. It is recommended to add all pantograph actions you use to your Pantfile . Source code This action, just like the rest of pantograph , is fully open source, view the source code on GitHub Back to actions","title":"prompt"},{"location":"actions/prompt/#prompt","text":"Ask the user for a value or for confirmation You can use prompt to ask the user for a value or to just let the user confirm the next step. When this is executed on a CI service, the passed ci_input value will be returned. This action also supports multi-line inputs using the multi_line_end_keyword option. prompt Supported platforms mac, linux, windows Author @KrauseFx, @johnknapprs","title":"prompt"},{"location":"actions/prompt/#2-examples","text":"changelog = prompt ( text : \"Changelog: \" ) changelog = prompt ( text : \"Changelog: \" , multi_line_end_keyword : \"END\" ) crashlytics ( notes : changelog )","title":"2 Examples"},{"location":"actions/prompt/#parameters","text":"Key Description Default text The text that will be displayed to the user Please enter some text: ci_input The default text that will be used when being executed on a CI service '' boolean Is that a boolean question (yes/no)? This will add (y/n) at the end false secure_text Is that a secure text (yes/no)? false multi_line_end_keyword Enable multi-line inputs by providing an end text (e.g. 'END') which will stop the user input * = default value is dependent on the user's system","title":"Parameters"},{"location":"actions/prompt/#documentation","text":"To show the documentation in your terminal, run pantograph action prompt","title":"Documentation"},{"location":"actions/prompt/#cli","text":"It is recommended to add the above action into your Pantfile , however sometimes you might want to run one-offs. To do so, you can run the following command from your terminal pantograph run prompt To pass parameters, make use of the : symbol, for example pantograph run prompt parameter1: \"value1\" parameter2: \"value2\" It's important to note that the CLI supports primitive types like integers, floats, booleans, and strings. Arrays can be passed as a comma delimited string (e.g. param:\"1,2,3\" ). Hashes are not currently supported. It is recommended to add all pantograph actions you use to your Pantfile .","title":"CLI"},{"location":"actions/prompt/#source-code","text":"This action, just like the rest of pantograph , is fully open source, view the source code on GitHub Back to actions","title":"Source code"},{"location":"actions/prompt_secure/","text":"prompt_secure Ask the user for a value or for confirmation You can use prompt to ask the user for a value or to just let the user confirm the next step. When this is executed on a CI service, the passed ci_input value will be returned. This action also supports multi-line inputs using the multi_line_end_keyword option. prompt_secure Supported platforms mac, linux, windows Author @KrauseFx, @johnknapprs 2 Examples changelog = prompt ( text : \"Changelog: \" ) changelog = prompt ( text : \"Changelog: \" , multi_line_end_keyword : \"END\" ) crashlytics ( notes : changelog ) Parameters Key Description Default text The text that will be displayed to the user Please enter some text: ci_input The default text that will be used when being executed on a CI service '' boolean Is that a boolean question (yes/no)? This will add (y/n) at the end false secure_text Is that a secure text (yes/no)? false multi_line_end_keyword Enable multi-line inputs by providing an end text (e.g. 'END') which will stop the user input * = default value is dependent on the user's system Documentation To show the documentation in your terminal, run pantograph action prompt_secure CLI It is recommended to add the above action into your Pantfile , however sometimes you might want to run one-offs. To do so, you can run the following command from your terminal pantograph run prompt_secure To pass parameters, make use of the : symbol, for example pantograph run prompt_secure parameter1: \"value1\" parameter2: \"value2\" It's important to note that the CLI supports primitive types like integers, floats, booleans, and strings. Arrays can be passed as a comma delimited string (e.g. param:\"1,2,3\" ). Hashes are not currently supported. It is recommended to add all pantograph actions you use to your Pantfile . Source code This action, just like the rest of pantograph , is fully open source, view the source code on GitHub Back to actions","title":"prompt_secure"},{"location":"actions/prompt_secure/#prompt_secure","text":"Ask the user for a value or for confirmation You can use prompt to ask the user for a value or to just let the user confirm the next step. When this is executed on a CI service, the passed ci_input value will be returned. This action also supports multi-line inputs using the multi_line_end_keyword option. prompt_secure Supported platforms mac, linux, windows Author @KrauseFx, @johnknapprs","title":"prompt_secure"},{"location":"actions/prompt_secure/#2-examples","text":"changelog = prompt ( text : \"Changelog: \" ) changelog = prompt ( text : \"Changelog: \" , multi_line_end_keyword : \"END\" ) crashlytics ( notes : changelog )","title":"2 Examples"},{"location":"actions/prompt_secure/#parameters","text":"Key Description Default text The text that will be displayed to the user Please enter some text: ci_input The default text that will be used when being executed on a CI service '' boolean Is that a boolean question (yes/no)? This will add (y/n) at the end false secure_text Is that a secure text (yes/no)? false multi_line_end_keyword Enable multi-line inputs by providing an end text (e.g. 'END') which will stop the user input * = default value is dependent on the user's system","title":"Parameters"},{"location":"actions/prompt_secure/#documentation","text":"To show the documentation in your terminal, run pantograph action prompt_secure","title":"Documentation"},{"location":"actions/prompt_secure/#cli","text":"It is recommended to add the above action into your Pantfile , however sometimes you might want to run one-offs. To do so, you can run the following command from your terminal pantograph run prompt_secure To pass parameters, make use of the : symbol, for example pantograph run prompt_secure parameter1: \"value1\" parameter2: \"value2\" It's important to note that the CLI supports primitive types like integers, floats, booleans, and strings. Arrays can be passed as a comma delimited string (e.g. param:\"1,2,3\" ). Hashes are not currently supported. It is recommended to add all pantograph actions you use to your Pantfile .","title":"CLI"},{"location":"actions/prompt_secure/#source-code","text":"This action, just like the rest of pantograph , is fully open source, view the source code on GitHub Back to actions","title":"Source code"},{"location":"actions/push_git_tags/","text":"push_git_tags Push local tags to the remote - this will only push tags If you only want to push the tags and nothing else, you can use the push_git_tags action push_git_tags Supported platforms mac, linux, windows Author @vittoriom 1 Example push_git_tags Parameters Key Description Default force Force push to remote false remote The remote to push tags to origin tag The tag to push to remote * = default value is dependent on the user's system Documentation To show the documentation in your terminal, run pantograph action push_git_tags CLI It is recommended to add the above action into your Pantfile , however sometimes you might want to run one-offs. To do so, you can run the following command from your terminal pantograph run push_git_tags To pass parameters, make use of the : symbol, for example pantograph run push_git_tags parameter1: \"value1\" parameter2: \"value2\" It's important to note that the CLI supports primitive types like integers, floats, booleans, and strings. Arrays can be passed as a comma delimited string (e.g. param:\"1,2,3\" ). Hashes are not currently supported. It is recommended to add all pantograph actions you use to your Pantfile . Source code This action, just like the rest of pantograph , is fully open source, view the source code on GitHub Back to actions","title":"push_git_tags"},{"location":"actions/push_git_tags/#push_git_tags","text":"Push local tags to the remote - this will only push tags If you only want to push the tags and nothing else, you can use the push_git_tags action push_git_tags Supported platforms mac, linux, windows Author @vittoriom","title":"push_git_tags"},{"location":"actions/push_git_tags/#1-example","text":"push_git_tags","title":"1 Example"},{"location":"actions/push_git_tags/#parameters","text":"Key Description Default force Force push to remote false remote The remote to push tags to origin tag The tag to push to remote * = default value is dependent on the user's system","title":"Parameters"},{"location":"actions/push_git_tags/#documentation","text":"To show the documentation in your terminal, run pantograph action push_git_tags","title":"Documentation"},{"location":"actions/push_git_tags/#cli","text":"It is recommended to add the above action into your Pantfile , however sometimes you might want to run one-offs. To do so, you can run the following command from your terminal pantograph run push_git_tags To pass parameters, make use of the : symbol, for example pantograph run push_git_tags parameter1: \"value1\" parameter2: \"value2\" It's important to note that the CLI supports primitive types like integers, floats, booleans, and strings. Arrays can be passed as a comma delimited string (e.g. param:\"1,2,3\" ). Hashes are not currently supported. It is recommended to add all pantograph actions you use to your Pantfile .","title":"CLI"},{"location":"actions/push_git_tags/#source-code","text":"This action, just like the rest of pantograph , is fully open source, view the source code on GitHub Back to actions","title":"Source code"},{"location":"actions/push_to_git_remote/","text":"push_to_git_remote Push local changes to the remote branch Lets you push your local commits to a remote git repo. Useful if you make local changes such as adding a version bump commit (using commit_version_bump ) or a git tag (using 'add_git_tag') on a CI server, and you want to push those changes back to your canonical/main repo. If this is a new branch, use the set_upstream option to set the remote branch as upstream. push_to_git_remote Supported platforms mac, linux, windows Author @lmirosevic 2 Examples push_to_git_remote # simple version. pushes \"master\" branch to \"origin\" remote push_to_git_remote ( remote : \"origin\" , # optional, default: \"origin\" local_branch : \"develop\" , # optional, aliased by \"branch\", default is set to current branch remote_branch : \"develop\" , # optional, default is set to local_branch force : true , # optional, default: false force_with_lease : true , # optional, default: false tags : false , # optional, default: true no_verify : true , # optional, default: false set_upstream : true # optional, default: false ) Parameters Key Description Default local_branch The local branch to push from. Defaults to the current branch * remote_branch The remote branch to push to. Defaults to the local branch * force Force push to remote false force_with_lease Force push with lease to remote false tags Whether tags are pushed to remote true remote The remote to push to origin no_verify Whether or not to use --no-verify false set_upstream Whether or not to use --set-upstream false * = default value is dependent on the user's system Documentation To show the documentation in your terminal, run pantograph action push_to_git_remote CLI It is recommended to add the above action into your Pantfile , however sometimes you might want to run one-offs. To do so, you can run the following command from your terminal pantograph run push_to_git_remote To pass parameters, make use of the : symbol, for example pantograph run push_to_git_remote parameter1: \"value1\" parameter2: \"value2\" It's important to note that the CLI supports primitive types like integers, floats, booleans, and strings. Arrays can be passed as a comma delimited string (e.g. param:\"1,2,3\" ). Hashes are not currently supported. It is recommended to add all pantograph actions you use to your Pantfile . Source code This action, just like the rest of pantograph , is fully open source, view the source code on GitHub Back to actions","title":"push_to_git_remote"},{"location":"actions/push_to_git_remote/#push_to_git_remote","text":"Push local changes to the remote branch Lets you push your local commits to a remote git repo. Useful if you make local changes such as adding a version bump commit (using commit_version_bump ) or a git tag (using 'add_git_tag') on a CI server, and you want to push those changes back to your canonical/main repo. If this is a new branch, use the set_upstream option to set the remote branch as upstream. push_to_git_remote Supported platforms mac, linux, windows Author @lmirosevic","title":"push_to_git_remote"},{"location":"actions/push_to_git_remote/#2-examples","text":"push_to_git_remote # simple version. pushes \"master\" branch to \"origin\" remote push_to_git_remote ( remote : \"origin\" , # optional, default: \"origin\" local_branch : \"develop\" , # optional, aliased by \"branch\", default is set to current branch remote_branch : \"develop\" , # optional, default is set to local_branch force : true , # optional, default: false force_with_lease : true , # optional, default: false tags : false , # optional, default: true no_verify : true , # optional, default: false set_upstream : true # optional, default: false )","title":"2 Examples"},{"location":"actions/push_to_git_remote/#parameters","text":"Key Description Default local_branch The local branch to push from. Defaults to the current branch * remote_branch The remote branch to push to. Defaults to the local branch * force Force push to remote false force_with_lease Force push with lease to remote false tags Whether tags are pushed to remote true remote The remote to push to origin no_verify Whether or not to use --no-verify false set_upstream Whether or not to use --set-upstream false * = default value is dependent on the user's system","title":"Parameters"},{"location":"actions/push_to_git_remote/#documentation","text":"To show the documentation in your terminal, run pantograph action push_to_git_remote","title":"Documentation"},{"location":"actions/push_to_git_remote/#cli","text":"It is recommended to add the above action into your Pantfile , however sometimes you might want to run one-offs. To do so, you can run the following command from your terminal pantograph run push_to_git_remote To pass parameters, make use of the : symbol, for example pantograph run push_to_git_remote parameter1: \"value1\" parameter2: \"value2\" It's important to note that the CLI supports primitive types like integers, floats, booleans, and strings. Arrays can be passed as a comma delimited string (e.g. param:\"1,2,3\" ). Hashes are not currently supported. It is recommended to add all pantograph actions you use to your Pantfile .","title":"CLI"},{"location":"actions/push_to_git_remote/#source-code","text":"This action, just like the rest of pantograph , is fully open source, view the source code on GitHub Back to actions","title":"Source code"},{"location":"actions/puts/","text":"puts Prints out the given text puts Supported platforms mac, linux, windows Author @KrauseFx 1 Example puts \"Hi there\" Parameters Key Description Default message Message to be printed out * = default value is dependent on the user's system Documentation To show the documentation in your terminal, run pantograph action puts CLI It is recommended to add the above action into your Pantfile , however sometimes you might want to run one-offs. To do so, you can run the following command from your terminal pantograph run puts To pass parameters, make use of the : symbol, for example pantograph run puts parameter1: \"value1\" parameter2: \"value2\" It's important to note that the CLI supports primitive types like integers, floats, booleans, and strings. Arrays can be passed as a comma delimited string (e.g. param:\"1,2,3\" ). Hashes are not currently supported. It is recommended to add all pantograph actions you use to your Pantfile . Source code This action, just like the rest of pantograph , is fully open source, view the source code on GitHub Back to actions","title":"puts"},{"location":"actions/puts/#puts","text":"Prints out the given text puts Supported platforms mac, linux, windows Author @KrauseFx","title":"puts"},{"location":"actions/puts/#1-example","text":"puts \"Hi there\"","title":"1 Example"},{"location":"actions/puts/#parameters","text":"Key Description Default message Message to be printed out * = default value is dependent on the user's system","title":"Parameters"},{"location":"actions/puts/#documentation","text":"To show the documentation in your terminal, run pantograph action puts","title":"Documentation"},{"location":"actions/puts/#cli","text":"It is recommended to add the above action into your Pantfile , however sometimes you might want to run one-offs. To do so, you can run the following command from your terminal pantograph run puts To pass parameters, make use of the : symbol, for example pantograph run puts parameter1: \"value1\" parameter2: \"value2\" It's important to note that the CLI supports primitive types like integers, floats, booleans, and strings. Arrays can be passed as a comma delimited string (e.g. param:\"1,2,3\" ). Hashes are not currently supported. It is recommended to add all pantograph actions you use to your Pantfile .","title":"CLI"},{"location":"actions/puts/#source-code","text":"This action, just like the rest of pantograph , is fully open source, view the source code on GitHub Back to actions","title":"Source code"},{"location":"actions/reset_git_repo/","text":"reset_git_repo Resets git repo to a clean state by discarding uncommitted changes This action will reset your git repo to a clean state, discarding any uncommitted and untracked changes. Useful in case you need to revert the repo back to a clean state, e.g. after running pantograph . Untracked files like .env will also be deleted, unless :skip_clean is true. It's a pretty drastic action so it comes with a sort of safety latch. It will only proceed with the reset if this condition is met: You have called the ensure_git_status_clean action prior to calling this action. This ensures that your repo started off in a clean state, so the only things that will get destroyed by this action are files that are created as a byproduct of the pantograph run. reset_git_repo Supported platforms mac, linux, windows Author @lmirosevic 4 Examples reset_git_repo reset_git_repo ( force : true ) # If you don't care about warnings and are absolutely sure that you want to discard all changes. This will reset the repo even if you have valuable uncommitted changes, so use with care! reset_git_repo ( skip_clean : true ) # If you want \"git clean\" to be skipped, thus NOT deleting untracked files like \".env\". Optional, defaults to false. reset_git_repo ( force : true , files : [ \"./file.txt\" ] ) Parameters Key Description Default files Array of files the changes should be discarded. If not given, all files will be discarded force Skip verifying of previously clean state of repo. Only recommended in combination with files option false skip_clean Skip 'git clean' to avoid removing untracked files like .env false disregard_gitignore Setting this to true will clean the whole repository, ignoring anything in your local .gitignore. Set this to true if you want the equivalent of a fresh clone, and for all untracked and ignore files to also be removed true exclude You can pass a string, or array of, file pattern(s) here which you want to have survive the cleaning process, and remain on disk, e.g. to leave the artifacts directory you would specify exclude: 'artifacts' . Make sure this pattern is also in your gitignore! See the gitignore documentation for info on patterns * = default value is dependent on the user's system Documentation To show the documentation in your terminal, run pantograph action reset_git_repo CLI It is recommended to add the above action into your Pantfile , however sometimes you might want to run one-offs. To do so, you can run the following command from your terminal pantograph run reset_git_repo To pass parameters, make use of the : symbol, for example pantograph run reset_git_repo parameter1: \"value1\" parameter2: \"value2\" It's important to note that the CLI supports primitive types like integers, floats, booleans, and strings. Arrays can be passed as a comma delimited string (e.g. param:\"1,2,3\" ). Hashes are not currently supported. It is recommended to add all pantograph actions you use to your Pantfile . Source code This action, just like the rest of pantograph , is fully open source, view the source code on GitHub Back to actions","title":"reset_git_repo"},{"location":"actions/reset_git_repo/#reset_git_repo","text":"Resets git repo to a clean state by discarding uncommitted changes This action will reset your git repo to a clean state, discarding any uncommitted and untracked changes. Useful in case you need to revert the repo back to a clean state, e.g. after running pantograph . Untracked files like .env will also be deleted, unless :skip_clean is true. It's a pretty drastic action so it comes with a sort of safety latch. It will only proceed with the reset if this condition is met: You have called the ensure_git_status_clean action prior to calling this action. This ensures that your repo started off in a clean state, so the only things that will get destroyed by this action are files that are created as a byproduct of the pantograph run. reset_git_repo Supported platforms mac, linux, windows Author @lmirosevic","title":"reset_git_repo"},{"location":"actions/reset_git_repo/#4-examples","text":"reset_git_repo reset_git_repo ( force : true ) # If you don't care about warnings and are absolutely sure that you want to discard all changes. This will reset the repo even if you have valuable uncommitted changes, so use with care! reset_git_repo ( skip_clean : true ) # If you want \"git clean\" to be skipped, thus NOT deleting untracked files like \".env\". Optional, defaults to false. reset_git_repo ( force : true , files : [ \"./file.txt\" ] )","title":"4 Examples"},{"location":"actions/reset_git_repo/#parameters","text":"Key Description Default files Array of files the changes should be discarded. If not given, all files will be discarded force Skip verifying of previously clean state of repo. Only recommended in combination with files option false skip_clean Skip 'git clean' to avoid removing untracked files like .env false disregard_gitignore Setting this to true will clean the whole repository, ignoring anything in your local .gitignore. Set this to true if you want the equivalent of a fresh clone, and for all untracked and ignore files to also be removed true exclude You can pass a string, or array of, file pattern(s) here which you want to have survive the cleaning process, and remain on disk, e.g. to leave the artifacts directory you would specify exclude: 'artifacts' . Make sure this pattern is also in your gitignore! See the gitignore documentation for info on patterns * = default value is dependent on the user's system","title":"Parameters"},{"location":"actions/reset_git_repo/#documentation","text":"To show the documentation in your terminal, run pantograph action reset_git_repo","title":"Documentation"},{"location":"actions/reset_git_repo/#cli","text":"It is recommended to add the above action into your Pantfile , however sometimes you might want to run one-offs. To do so, you can run the following command from your terminal pantograph run reset_git_repo To pass parameters, make use of the : symbol, for example pantograph run reset_git_repo parameter1: \"value1\" parameter2: \"value2\" It's important to note that the CLI supports primitive types like integers, floats, booleans, and strings. Arrays can be passed as a comma delimited string (e.g. param:\"1,2,3\" ). Hashes are not currently supported. It is recommended to add all pantograph actions you use to your Pantfile .","title":"CLI"},{"location":"actions/reset_git_repo/#source-code","text":"This action, just like the rest of pantograph , is fully open source, view the source code on GitHub Back to actions","title":"Source code"},{"location":"actions/rocket/","text":"rocket Outputs ascii-art for a rocket \ud83d\ude80 Print an ascii Rocket :rocket:. Useful after using crashlytics or pilot to indicate that your new build has been shipped to outer-space. rocket Supported platforms mac, linux, windows Author @JaviSoto, @radex 1 Example rocket Documentation To show the documentation in your terminal, run pantograph action rocket CLI It is recommended to add the above action into your Pantfile , however sometimes you might want to run one-offs. To do so, you can run the following command from your terminal pantograph run rocket To pass parameters, make use of the : symbol, for example pantograph run rocket parameter1: \"value1\" parameter2: \"value2\" It's important to note that the CLI supports primitive types like integers, floats, booleans, and strings. Arrays can be passed as a comma delimited string (e.g. param:\"1,2,3\" ). Hashes are not currently supported. It is recommended to add all pantograph actions you use to your Pantfile . Source code This action, just like the rest of pantograph , is fully open source, view the source code on GitHub Back to actions","title":"rocket"},{"location":"actions/rocket/#rocket","text":"Outputs ascii-art for a rocket \ud83d\ude80 Print an ascii Rocket :rocket:. Useful after using crashlytics or pilot to indicate that your new build has been shipped to outer-space. rocket Supported platforms mac, linux, windows Author @JaviSoto, @radex","title":"rocket"},{"location":"actions/rocket/#1-example","text":"rocket","title":"1 Example"},{"location":"actions/rocket/#documentation","text":"To show the documentation in your terminal, run pantograph action rocket","title":"Documentation"},{"location":"actions/rocket/#cli","text":"It is recommended to add the above action into your Pantfile , however sometimes you might want to run one-offs. To do so, you can run the following command from your terminal pantograph run rocket To pass parameters, make use of the : symbol, for example pantograph run rocket parameter1: \"value1\" parameter2: \"value2\" It's important to note that the CLI supports primitive types like integers, floats, booleans, and strings. Arrays can be passed as a comma delimited string (e.g. param:\"1,2,3\" ). Hashes are not currently supported. It is recommended to add all pantograph actions you use to your Pantfile .","title":"CLI"},{"location":"actions/rocket/#source-code","text":"This action, just like the rest of pantograph , is fully open source, view the source code on GitHub Back to actions","title":"Source code"},{"location":"actions/rsync/","text":"rsync Rsync files from :source to :destination A wrapper around rsync , which is a tool that lets you synchronize files, including permissions and so on. For a more detailed information about rsync , please see rsync(1) man page . rsync Supported platforms mac, linux, windows Author @hjanuschka 1 Example rsync ( source : \"root@host:/tmp/1.txt\" , destination : \"/tmp/local_file.txt\" ) Parameters Key Description Default extra Port -av source source file/folder destination destination file/folder * = default value is dependent on the user's system Documentation To show the documentation in your terminal, run pantograph action rsync CLI It is recommended to add the above action into your Pantfile , however sometimes you might want to run one-offs. To do so, you can run the following command from your terminal pantograph run rsync To pass parameters, make use of the : symbol, for example pantograph run rsync parameter1: \"value1\" parameter2: \"value2\" It's important to note that the CLI supports primitive types like integers, floats, booleans, and strings. Arrays can be passed as a comma delimited string (e.g. param:\"1,2,3\" ). Hashes are not currently supported. It is recommended to add all pantograph actions you use to your Pantfile . Source code This action, just like the rest of pantograph , is fully open source, view the source code on GitHub Back to actions","title":"rsync"},{"location":"actions/rsync/#rsync","text":"Rsync files from :source to :destination A wrapper around rsync , which is a tool that lets you synchronize files, including permissions and so on. For a more detailed information about rsync , please see rsync(1) man page . rsync Supported platforms mac, linux, windows Author @hjanuschka","title":"rsync"},{"location":"actions/rsync/#1-example","text":"rsync ( source : \"root@host:/tmp/1.txt\" , destination : \"/tmp/local_file.txt\" )","title":"1 Example"},{"location":"actions/rsync/#parameters","text":"Key Description Default extra Port -av source source file/folder destination destination file/folder * = default value is dependent on the user's system","title":"Parameters"},{"location":"actions/rsync/#documentation","text":"To show the documentation in your terminal, run pantograph action rsync","title":"Documentation"},{"location":"actions/rsync/#cli","text":"It is recommended to add the above action into your Pantfile , however sometimes you might want to run one-offs. To do so, you can run the following command from your terminal pantograph run rsync To pass parameters, make use of the : symbol, for example pantograph run rsync parameter1: \"value1\" parameter2: \"value2\" It's important to note that the CLI supports primitive types like integers, floats, booleans, and strings. Arrays can be passed as a comma delimited string (e.g. param:\"1,2,3\" ). Hashes are not currently supported. It is recommended to add all pantograph actions you use to your Pantfile .","title":"CLI"},{"location":"actions/rsync/#source-code","text":"This action, just like the rest of pantograph , is fully open source, view the source code on GitHub Back to actions","title":"Source code"},{"location":"actions/ruby_version/","text":"ruby_version Verifies the minimum ruby version required Add this to your Pantfile to require a certain version of ruby . Put it at the top of your `Pantfile to ensure that pantograph is executed appropriately. ruby_version Supported platforms mac, linux, windows Author @sebastianvarela 1 Example ruby_version ( \"2.4.0\" ) Documentation To show the documentation in your terminal, run pantograph action ruby_version CLI It is recommended to add the above action into your Pantfile , however sometimes you might want to run one-offs. To do so, you can run the following command from your terminal pantograph run ruby_version To pass parameters, make use of the : symbol, for example pantograph run ruby_version parameter1: \"value1\" parameter2: \"value2\" It's important to note that the CLI supports primitive types like integers, floats, booleans, and strings. Arrays can be passed as a comma delimited string (e.g. param:\"1,2,3\" ). Hashes are not currently supported. It is recommended to add all pantograph actions you use to your Pantfile . Source code This action, just like the rest of pantograph , is fully open source, view the source code on GitHub Back to actions","title":"ruby_version"},{"location":"actions/ruby_version/#ruby_version","text":"Verifies the minimum ruby version required Add this to your Pantfile to require a certain version of ruby . Put it at the top of your `Pantfile to ensure that pantograph is executed appropriately. ruby_version Supported platforms mac, linux, windows Author @sebastianvarela","title":"ruby_version"},{"location":"actions/ruby_version/#1-example","text":"ruby_version ( \"2.4.0\" )","title":"1 Example"},{"location":"actions/ruby_version/#documentation","text":"To show the documentation in your terminal, run pantograph action ruby_version","title":"Documentation"},{"location":"actions/ruby_version/#cli","text":"It is recommended to add the above action into your Pantfile , however sometimes you might want to run one-offs. To do so, you can run the following command from your terminal pantograph run ruby_version To pass parameters, make use of the : symbol, for example pantograph run ruby_version parameter1: \"value1\" parameter2: \"value2\" It's important to note that the CLI supports primitive types like integers, floats, booleans, and strings. Arrays can be passed as a comma delimited string (e.g. param:\"1,2,3\" ). Hashes are not currently supported. It is recommended to add all pantograph actions you use to your Pantfile .","title":"CLI"},{"location":"actions/ruby_version/#source-code","text":"This action, just like the rest of pantograph , is fully open source, view the source code on GitHub Back to actions","title":"Source code"},{"location":"actions/say/","text":"say This action speaks the given text out loud say Supported platforms mac, linux, windows Author @KrauseFx 1 Example say ( \"I can speak\" ) Parameters Key Description Default text Text to be spoken out loud (as string or array of strings) mute If say should be muted with text printed out false * = default value is dependent on the user's system Documentation To show the documentation in your terminal, run pantograph action say CLI It is recommended to add the above action into your Pantfile , however sometimes you might want to run one-offs. To do so, you can run the following command from your terminal pantograph run say To pass parameters, make use of the : symbol, for example pantograph run say parameter1: \"value1\" parameter2: \"value2\" It's important to note that the CLI supports primitive types like integers, floats, booleans, and strings. Arrays can be passed as a comma delimited string (e.g. param:\"1,2,3\" ). Hashes are not currently supported. It is recommended to add all pantograph actions you use to your Pantfile . Source code This action, just like the rest of pantograph , is fully open source, view the source code on GitHub Back to actions","title":"say"},{"location":"actions/say/#say","text":"This action speaks the given text out loud say Supported platforms mac, linux, windows Author @KrauseFx","title":"say"},{"location":"actions/say/#1-example","text":"say ( \"I can speak\" )","title":"1 Example"},{"location":"actions/say/#parameters","text":"Key Description Default text Text to be spoken out loud (as string or array of strings) mute If say should be muted with text printed out false * = default value is dependent on the user's system","title":"Parameters"},{"location":"actions/say/#documentation","text":"To show the documentation in your terminal, run pantograph action say","title":"Documentation"},{"location":"actions/say/#cli","text":"It is recommended to add the above action into your Pantfile , however sometimes you might want to run one-offs. To do so, you can run the following command from your terminal pantograph run say To pass parameters, make use of the : symbol, for example pantograph run say parameter1: \"value1\" parameter2: \"value2\" It's important to note that the CLI supports primitive types like integers, floats, booleans, and strings. Arrays can be passed as a comma delimited string (e.g. param:\"1,2,3\" ). Hashes are not currently supported. It is recommended to add all pantograph actions you use to your Pantfile .","title":"CLI"},{"location":"actions/say/#source-code","text":"This action, just like the rest of pantograph , is fully open source, view the source code on GitHub Back to actions","title":"Source code"},{"location":"actions/set_github_release/","text":"set_github_release This will create a new release on GitHub and upload assets for it Creates a new release on GitHub. You must provide your GitHub Personal token (get one from https://github.com/settings/tokens/new ), the repository name and tag name. By default, that's master . If the tag doesn't exist, one will be created on the commit or branch passed in as commitish. Out parameters provide the release's id, which can be used for later editing and the release HTML link to GitHub. You can also specify a list of assets to be uploaded to the release with the :upload_assets parameter. set_github_release Supported platforms mac, linux, windows Author @czechboy0, @tommeier Returns A hash containing all relevant information of this release Access things like 'html_url', 'tag_name', 'name', 'body' 1 Example github_release = set_github_release ( repository_name : \"johnknapprs/pantograph\" , api_token : ENV [ \"GITHUB_TOKEN\" ] , name : \"Super New actions\" , tag_name : \"v1.22.0\" , description : ( File . read ( \"changelog\" ) rescue \"No changelog provided\" ), commitish : \"master\" , upload_assets : [ \"example_integration.ipa\" , \"./pkg/built.gem\" ] ) Parameters Key Description Default repository_name The path to your repo, e.g. 'johnknapprs/pantograph' server_url The server url. e.g. 'https://your.internal.github.host/api/v3' (Default: 'https://api.github.com') https://api.github.com api_token Personal API Token for GitHub - generate one at https://github.com/settings/tokens * tag_name Pass in the tag name name Name of this release commitish Specifies the commitish value that determines where the Git tag is created from. Can be any branch or commit SHA. Unused if the Git tag already exists. Default: the repository's default branch (usually master) description Description of this release * is_draft Whether the release should be marked as draft false is_prerelease Whether the release should be marked as prerelease false upload_assets Path to assets to be uploaded with the release * = default value is dependent on the user's system Lane Variables Actions can communicate with each other using a shared hash lane_context , that can be accessed in other actions, plugins or your lanes: lane_context[SharedValues:XYZ] . The set_github_release action generates the following Lane Variables: SharedValue Description SharedValues::SET_GITHUB_RELEASE_HTML_LINK Link to your created release SharedValues::SET_GITHUB_RELEASE_RELEASE_ID Release id (useful for subsequent editing) SharedValues::SET_GITHUB_RELEASE_JSON The whole release JSON object To get more information check the Lanes documentation . Documentation To show the documentation in your terminal, run pantograph action set_github_release CLI It is recommended to add the above action into your Pantfile , however sometimes you might want to run one-offs. To do so, you can run the following command from your terminal pantograph run set_github_release To pass parameters, make use of the : symbol, for example pantograph run set_github_release parameter1: \"value1\" parameter2: \"value2\" It's important to note that the CLI supports primitive types like integers, floats, booleans, and strings. Arrays can be passed as a comma delimited string (e.g. param:\"1,2,3\" ). Hashes are not currently supported. It is recommended to add all pantograph actions you use to your Pantfile . Source code This action, just like the rest of pantograph , is fully open source, view the source code on GitHub Back to actions","title":"set_github_release"},{"location":"actions/set_github_release/#set_github_release","text":"This will create a new release on GitHub and upload assets for it Creates a new release on GitHub. You must provide your GitHub Personal token (get one from https://github.com/settings/tokens/new ), the repository name and tag name. By default, that's master . If the tag doesn't exist, one will be created on the commit or branch passed in as commitish. Out parameters provide the release's id, which can be used for later editing and the release HTML link to GitHub. You can also specify a list of assets to be uploaded to the release with the :upload_assets parameter. set_github_release Supported platforms mac, linux, windows Author @czechboy0, @tommeier Returns A hash containing all relevant information of this release Access things like 'html_url', 'tag_name', 'name', 'body'","title":"set_github_release"},{"location":"actions/set_github_release/#1-example","text":"github_release = set_github_release ( repository_name : \"johnknapprs/pantograph\" , api_token : ENV [ \"GITHUB_TOKEN\" ] , name : \"Super New actions\" , tag_name : \"v1.22.0\" , description : ( File . read ( \"changelog\" ) rescue \"No changelog provided\" ), commitish : \"master\" , upload_assets : [ \"example_integration.ipa\" , \"./pkg/built.gem\" ] )","title":"1 Example"},{"location":"actions/set_github_release/#parameters","text":"Key Description Default repository_name The path to your repo, e.g. 'johnknapprs/pantograph' server_url The server url. e.g. 'https://your.internal.github.host/api/v3' (Default: 'https://api.github.com') https://api.github.com api_token Personal API Token for GitHub - generate one at https://github.com/settings/tokens * tag_name Pass in the tag name name Name of this release commitish Specifies the commitish value that determines where the Git tag is created from. Can be any branch or commit SHA. Unused if the Git tag already exists. Default: the repository's default branch (usually master) description Description of this release * is_draft Whether the release should be marked as draft false is_prerelease Whether the release should be marked as prerelease false upload_assets Path to assets to be uploaded with the release * = default value is dependent on the user's system","title":"Parameters"},{"location":"actions/set_github_release/#lane-variables","text":"Actions can communicate with each other using a shared hash lane_context , that can be accessed in other actions, plugins or your lanes: lane_context[SharedValues:XYZ] . The set_github_release action generates the following Lane Variables: SharedValue Description SharedValues::SET_GITHUB_RELEASE_HTML_LINK Link to your created release SharedValues::SET_GITHUB_RELEASE_RELEASE_ID Release id (useful for subsequent editing) SharedValues::SET_GITHUB_RELEASE_JSON The whole release JSON object To get more information check the Lanes documentation .","title":"Lane Variables"},{"location":"actions/set_github_release/#documentation","text":"To show the documentation in your terminal, run pantograph action set_github_release","title":"Documentation"},{"location":"actions/set_github_release/#cli","text":"It is recommended to add the above action into your Pantfile , however sometimes you might want to run one-offs. To do so, you can run the following command from your terminal pantograph run set_github_release To pass parameters, make use of the : symbol, for example pantograph run set_github_release parameter1: \"value1\" parameter2: \"value2\" It's important to note that the CLI supports primitive types like integers, floats, booleans, and strings. Arrays can be passed as a comma delimited string (e.g. param:\"1,2,3\" ). Hashes are not currently supported. It is recommended to add all pantograph actions you use to your Pantfile .","title":"CLI"},{"location":"actions/set_github_release/#source-code","text":"This action, just like the rest of pantograph , is fully open source, view the source code on GitHub Back to actions","title":"Source code"},{"location":"actions/sh/","text":"sh Runs a shell command Allows running an arbitrary shell command. Be aware of a specific behavior of sh action with regard to the working directory. For details, refer to Advanced . sh Supported platforms mac, linux, windows Author @KrauseFx Returns Outputs the string and executes it. When running in tests, it returns the actual command instead of executing it 2 Examples sh ( \"ls\" ) sh ( \"git\" , \"commit\" , \"-m\" , \"My message\" ) Parameters Key Description Default command Shell command to be executed log Determines whether pantograph should print out the executed command itself and output of the executed command. If command line option --troubleshoot is used, then it overrides this option to true true error_callback A callback invoked with the command output if there is a non-zero exit status * = default value is dependent on the user's system Documentation To show the documentation in your terminal, run pantograph action sh CLI It is recommended to add the above action into your Pantfile , however sometimes you might want to run one-offs. To do so, you can run the following command from your terminal pantograph run sh To pass parameters, make use of the : symbol, for example pantograph run sh parameter1: \"value1\" parameter2: \"value2\" It's important to note that the CLI supports primitive types like integers, floats, booleans, and strings. Arrays can be passed as a comma delimited string (e.g. param:\"1,2,3\" ). Hashes are not currently supported. It is recommended to add all pantograph actions you use to your Pantfile . Source code This action, just like the rest of pantograph , is fully open source, view the source code on GitHub Back to actions","title":"sh"},{"location":"actions/sh/#sh","text":"Runs a shell command Allows running an arbitrary shell command. Be aware of a specific behavior of sh action with regard to the working directory. For details, refer to Advanced . sh Supported platforms mac, linux, windows Author @KrauseFx Returns Outputs the string and executes it. When running in tests, it returns the actual command instead of executing it","title":"sh"},{"location":"actions/sh/#2-examples","text":"sh ( \"ls\" ) sh ( \"git\" , \"commit\" , \"-m\" , \"My message\" )","title":"2 Examples"},{"location":"actions/sh/#parameters","text":"Key Description Default command Shell command to be executed log Determines whether pantograph should print out the executed command itself and output of the executed command. If command line option --troubleshoot is used, then it overrides this option to true true error_callback A callback invoked with the command output if there is a non-zero exit status * = default value is dependent on the user's system","title":"Parameters"},{"location":"actions/sh/#documentation","text":"To show the documentation in your terminal, run pantograph action sh","title":"Documentation"},{"location":"actions/sh/#cli","text":"It is recommended to add the above action into your Pantfile , however sometimes you might want to run one-offs. To do so, you can run the following command from your terminal pantograph run sh To pass parameters, make use of the : symbol, for example pantograph run sh parameter1: \"value1\" parameter2: \"value2\" It's important to note that the CLI supports primitive types like integers, floats, booleans, and strings. Arrays can be passed as a comma delimited string (e.g. param:\"1,2,3\" ). Hashes are not currently supported. It is recommended to add all pantograph actions you use to your Pantfile .","title":"CLI"},{"location":"actions/sh/#source-code","text":"This action, just like the rest of pantograph , is fully open source, view the source code on GitHub Back to actions","title":"Source code"},{"location":"actions/skip_docs/","text":"skip_docs Skip the creation of the pantograph/README.md file when running pantograph Tell pantograph to not automatically create a pantograph/README.md when running pantograph . You can always trigger the creation of this file manually by running pantograph docs . skip_docs Supported platforms mac, linux, windows Author @KrauseFx 1 Example skip_docs Documentation To show the documentation in your terminal, run pantograph action skip_docs CLI It is recommended to add the above action into your Pantfile , however sometimes you might want to run one-offs. To do so, you can run the following command from your terminal pantograph run skip_docs To pass parameters, make use of the : symbol, for example pantograph run skip_docs parameter1: \"value1\" parameter2: \"value2\" It's important to note that the CLI supports primitive types like integers, floats, booleans, and strings. Arrays can be passed as a comma delimited string (e.g. param:\"1,2,3\" ). Hashes are not currently supported. It is recommended to add all pantograph actions you use to your Pantfile . Source code This action, just like the rest of pantograph , is fully open source, view the source code on GitHub Back to actions","title":"skip_docs"},{"location":"actions/skip_docs/#skip_docs","text":"Skip the creation of the pantograph/README.md file when running pantograph Tell pantograph to not automatically create a pantograph/README.md when running pantograph . You can always trigger the creation of this file manually by running pantograph docs . skip_docs Supported platforms mac, linux, windows Author @KrauseFx","title":"skip_docs"},{"location":"actions/skip_docs/#1-example","text":"skip_docs","title":"1 Example"},{"location":"actions/skip_docs/#documentation","text":"To show the documentation in your terminal, run pantograph action skip_docs","title":"Documentation"},{"location":"actions/skip_docs/#cli","text":"It is recommended to add the above action into your Pantfile , however sometimes you might want to run one-offs. To do so, you can run the following command from your terminal pantograph run skip_docs To pass parameters, make use of the : symbol, for example pantograph run skip_docs parameter1: \"value1\" parameter2: \"value2\" It's important to note that the CLI supports primitive types like integers, floats, booleans, and strings. Arrays can be passed as a comma delimited string (e.g. param:\"1,2,3\" ). Hashes are not currently supported. It is recommended to add all pantograph actions you use to your Pantfile .","title":"CLI"},{"location":"actions/skip_docs/#source-code","text":"This action, just like the rest of pantograph , is fully open source, view the source code on GitHub Back to actions","title":"Source code"},{"location":"actions/slack/","text":"slack Send a success/error message to your Slack group Create an Incoming WebHook and export this as SLACK_URL . Can send a message to #channel (by default), a direct message to @username or a message to a private group group with success (green) or failure (red) status. slack Supported platforms mac, linux, windows Author @KrauseFx 2 Examples slack ( message : \"App successfully released!\" ) slack ( message : \"App successfully released!\" , channel : \"#channel\" , # Optional, by default will post to the default channel configured for the POST URL. success : true , # Optional, defaults to true. payload : { # Optional, lets you specify any number of your own Slack attachments. \"Build Date\" => Time . new . to_s , \"Built by\" => \"Jenkins\" , }, default_payloads : [ :git_branch , :git_author ] , # Optional, lets you specify a whitelist of default payloads to include. Pass an empty array to suppress all the default payloads. # Don't add this key, or pass nil, if you want all the default payloads. The available default payloads are: `lane`, `test_result`, `git_branch`, `git_author`, `last_git_commit`, `last_git_commit_hash`. attachment_properties : { # Optional, lets you specify any other properties available for attachments in the slack API (see https://api.slack.com/docs/attachments). # This hash is deep merged with the existing properties set using the other properties above. This allows your own fields properties to be appended to the existing fields that were created using the `payload` property for instance. thumb_url : \"http://example.com/path/to/thumb.png\" , fields : [ { title : \"My Field\" , value : \"My Value\" , short : true } ] } ) Parameters Key Description Default message The message that should be displayed on Slack. This supports the standard Slack markup language pretext This is optional text that appears above the message attachment block. This supports the standard Slack markup language channel #channel or @username use_webhook_configured_username_and_icon Use webhook's default username and icon settings? (true/false) false slack_url Create an Incoming WebHook for your Slack group username Overrides the webhook's username property if use_webhook_configured_username_and_icon is false pantograph icon_url Overrides the webhook's image property if use_webhook_configured_username_and_icon is false https://s3-eu-west-1.amazonaws.com/pantograph.tools/pantograph.png payload Add additional information to this post. payload must be a hash containing any key with any value {} default_payloads Remove some of the default payloads. More information about the available payloads on GitHub attachment_properties Merge additional properties in the slack attachment, see https://api.slack.com/docs/attachments {} success Was this build successful? (true/false) true fail_on_error Should an error sending the slack notification cause a failure? (true/false) true link_names Find and link channel names and usernames (true/false) false * = default value is dependent on the user's system Documentation To show the documentation in your terminal, run pantograph action slack CLI It is recommended to add the above action into your Pantfile , however sometimes you might want to run one-offs. To do so, you can run the following command from your terminal pantograph run slack To pass parameters, make use of the : symbol, for example pantograph run slack parameter1: \"value1\" parameter2: \"value2\" It's important to note that the CLI supports primitive types like integers, floats, booleans, and strings. Arrays can be passed as a comma delimited string (e.g. param:\"1,2,3\" ). Hashes are not currently supported. It is recommended to add all pantograph actions you use to your Pantfile . Source code This action, just like the rest of pantograph , is fully open source, view the source code on GitHub Back to actions","title":"slack"},{"location":"actions/slack/#slack","text":"Send a success/error message to your Slack group Create an Incoming WebHook and export this as SLACK_URL . Can send a message to #channel (by default), a direct message to @username or a message to a private group group with success (green) or failure (red) status. slack Supported platforms mac, linux, windows Author @KrauseFx","title":"slack"},{"location":"actions/slack/#2-examples","text":"slack ( message : \"App successfully released!\" ) slack ( message : \"App successfully released!\" , channel : \"#channel\" , # Optional, by default will post to the default channel configured for the POST URL. success : true , # Optional, defaults to true. payload : { # Optional, lets you specify any number of your own Slack attachments. \"Build Date\" => Time . new . to_s , \"Built by\" => \"Jenkins\" , }, default_payloads : [ :git_branch , :git_author ] , # Optional, lets you specify a whitelist of default payloads to include. Pass an empty array to suppress all the default payloads. # Don't add this key, or pass nil, if you want all the default payloads. The available default payloads are: `lane`, `test_result`, `git_branch`, `git_author`, `last_git_commit`, `last_git_commit_hash`. attachment_properties : { # Optional, lets you specify any other properties available for attachments in the slack API (see https://api.slack.com/docs/attachments). # This hash is deep merged with the existing properties set using the other properties above. This allows your own fields properties to be appended to the existing fields that were created using the `payload` property for instance. thumb_url : \"http://example.com/path/to/thumb.png\" , fields : [ { title : \"My Field\" , value : \"My Value\" , short : true } ] } )","title":"2 Examples"},{"location":"actions/slack/#parameters","text":"Key Description Default message The message that should be displayed on Slack. This supports the standard Slack markup language pretext This is optional text that appears above the message attachment block. This supports the standard Slack markup language channel #channel or @username use_webhook_configured_username_and_icon Use webhook's default username and icon settings? (true/false) false slack_url Create an Incoming WebHook for your Slack group username Overrides the webhook's username property if use_webhook_configured_username_and_icon is false pantograph icon_url Overrides the webhook's image property if use_webhook_configured_username_and_icon is false https://s3-eu-west-1.amazonaws.com/pantograph.tools/pantograph.png payload Add additional information to this post. payload must be a hash containing any key with any value {} default_payloads Remove some of the default payloads. More information about the available payloads on GitHub attachment_properties Merge additional properties in the slack attachment, see https://api.slack.com/docs/attachments {} success Was this build successful? (true/false) true fail_on_error Should an error sending the slack notification cause a failure? (true/false) true link_names Find and link channel names and usernames (true/false) false * = default value is dependent on the user's system","title":"Parameters"},{"location":"actions/slack/#documentation","text":"To show the documentation in your terminal, run pantograph action slack","title":"Documentation"},{"location":"actions/slack/#cli","text":"It is recommended to add the above action into your Pantfile , however sometimes you might want to run one-offs. To do so, you can run the following command from your terminal pantograph run slack To pass parameters, make use of the : symbol, for example pantograph run slack parameter1: \"value1\" parameter2: \"value2\" It's important to note that the CLI supports primitive types like integers, floats, booleans, and strings. Arrays can be passed as a comma delimited string (e.g. param:\"1,2,3\" ). Hashes are not currently supported. It is recommended to add all pantograph actions you use to your Pantfile .","title":"CLI"},{"location":"actions/slack/#source-code","text":"This action, just like the rest of pantograph , is fully open source, view the source code on GitHub Back to actions","title":"Source code"},{"location":"actions/sonar/","text":"sonar Invokes sonar-scanner to programmatically run SonarQube analysis See http://docs.sonarqube.org/display/SCAN/Analyzing+with+SonarQube+Scanner for details. It can process unit test results if formatted as junit report as shown in xctest action. It can also integrate coverage reports in Cobertura format, which can be transformed into by the slather action. sonar Supported platforms mac, linux, windows Author @c_gretzki Returns The exit code of the sonar-scanner binary 1 Example sonar ( project_key : \"name.gretzki.awesomeApp\" , project_version : \"1.0\" , project_name : \"AwesomeApp\" , sources_path : File . expand_path ( \"../AwesomeApp\" ) ) Parameters Key Description Default project_configuration_path The path to your sonar project configuration file; defaults to sonar-project.properties project_key The key sonar uses to identify the project, e.g. name.gretzki.awesomeApp . Must either be specified here or inside the sonar project configuration file project_name The name of the project that gets displayed on the sonar report page. Must either be specified here or inside the sonar project configuration file project_version The project's version that gets displayed on the sonar report page. Must either be specified here or inside the sonar project configuration file sources_path Comma-separated paths to directories containing source files. Must either be specified here or inside the sonar project configuration file project_language Language key, e.g. objc source_encoding Used encoding of source files, e.g., UTF-8 sonar_runner_args Pass additional arguments to sonar-scanner. Be sure to provide the arguments with a leading -D e.g. SONAR_RUNNER_ARGS=\\\"-Dsonar.verbose=true\\\" sonar_login Pass the Sonar Login token (e.g: xxxxxxprivate_token_XXXXbXX7e) sonar_url Pass the url of the Sonar server branch_name Pass the branch name which is getting scanned pull_request_branch The name of the branch that contains the changes to be merged pull_request_base The long-lived branch into which the PR will be merged pull_request_key Unique identifier of your PR. Must correspond to the key of the PR in GitHub or TFS * = default value is dependent on the user's system Documentation To show the documentation in your terminal, run pantograph action sonar CLI It is recommended to add the above action into your Pantfile , however sometimes you might want to run one-offs. To do so, you can run the following command from your terminal pantograph run sonar To pass parameters, make use of the : symbol, for example pantograph run sonar parameter1: \"value1\" parameter2: \"value2\" It's important to note that the CLI supports primitive types like integers, floats, booleans, and strings. Arrays can be passed as a comma delimited string (e.g. param:\"1,2,3\" ). Hashes are not currently supported. It is recommended to add all pantograph actions you use to your Pantfile . Source code This action, just like the rest of pantograph , is fully open source, view the source code on GitHub Back to actions","title":"sonar"},{"location":"actions/sonar/#sonar","text":"Invokes sonar-scanner to programmatically run SonarQube analysis See http://docs.sonarqube.org/display/SCAN/Analyzing+with+SonarQube+Scanner for details. It can process unit test results if formatted as junit report as shown in xctest action. It can also integrate coverage reports in Cobertura format, which can be transformed into by the slather action. sonar Supported platforms mac, linux, windows Author @c_gretzki Returns The exit code of the sonar-scanner binary","title":"sonar"},{"location":"actions/sonar/#1-example","text":"sonar ( project_key : \"name.gretzki.awesomeApp\" , project_version : \"1.0\" , project_name : \"AwesomeApp\" , sources_path : File . expand_path ( \"../AwesomeApp\" ) )","title":"1 Example"},{"location":"actions/sonar/#parameters","text":"Key Description Default project_configuration_path The path to your sonar project configuration file; defaults to sonar-project.properties project_key The key sonar uses to identify the project, e.g. name.gretzki.awesomeApp . Must either be specified here or inside the sonar project configuration file project_name The name of the project that gets displayed on the sonar report page. Must either be specified here or inside the sonar project configuration file project_version The project's version that gets displayed on the sonar report page. Must either be specified here or inside the sonar project configuration file sources_path Comma-separated paths to directories containing source files. Must either be specified here or inside the sonar project configuration file project_language Language key, e.g. objc source_encoding Used encoding of source files, e.g., UTF-8 sonar_runner_args Pass additional arguments to sonar-scanner. Be sure to provide the arguments with a leading -D e.g. SONAR_RUNNER_ARGS=\\\"-Dsonar.verbose=true\\\" sonar_login Pass the Sonar Login token (e.g: xxxxxxprivate_token_XXXXbXX7e) sonar_url Pass the url of the Sonar server branch_name Pass the branch name which is getting scanned pull_request_branch The name of the branch that contains the changes to be merged pull_request_base The long-lived branch into which the PR will be merged pull_request_key Unique identifier of your PR. Must correspond to the key of the PR in GitHub or TFS * = default value is dependent on the user's system","title":"Parameters"},{"location":"actions/sonar/#documentation","text":"To show the documentation in your terminal, run pantograph action sonar","title":"Documentation"},{"location":"actions/sonar/#cli","text":"It is recommended to add the above action into your Pantfile , however sometimes you might want to run one-offs. To do so, you can run the following command from your terminal pantograph run sonar To pass parameters, make use of the : symbol, for example pantograph run sonar parameter1: \"value1\" parameter2: \"value2\" It's important to note that the CLI supports primitive types like integers, floats, booleans, and strings. Arrays can be passed as a comma delimited string (e.g. param:\"1,2,3\" ). Hashes are not currently supported. It is recommended to add all pantograph actions you use to your Pantfile .","title":"CLI"},{"location":"actions/sonar/#source-code","text":"This action, just like the rest of pantograph , is fully open source, view the source code on GitHub Back to actions","title":"Source code"},{"location":"actions/ssh/","text":"ssh Allows remote command execution using ssh Lets you execute remote commands via ssh using username/password or ssh-agent. If one of the commands in command-array returns non 0, it fails. ssh Supported platforms mac, linux, windows Author @hjanuschka 1 Example ssh ( host : \"dev.januschka.com\" , username : \"root\" , commands : [ \"date\" , \"echo 1 > /tmp/file1\" ] ) Parameters Key Description Default username Username password Password host Hostname port Port 22 commands Commands log Log commands and output true * = default value is dependent on the user's system Lane Variables Actions can communicate with each other using a shared hash lane_context , that can be accessed in other actions, plugins or your lanes: lane_context[SharedValues:XYZ] . The ssh action generates the following Lane Variables: SharedValue Description SharedValues::SSH_STDOUT_VALUE Holds the standard output of all commands SharedValues::SSH_STDERR_VALUE Holds the standard error of all commands To get more information check the Lanes documentation . Documentation To show the documentation in your terminal, run pantograph action ssh CLI It is recommended to add the above action into your Pantfile , however sometimes you might want to run one-offs. To do so, you can run the following command from your terminal pantograph run ssh To pass parameters, make use of the : symbol, for example pantograph run ssh parameter1: \"value1\" parameter2: \"value2\" It's important to note that the CLI supports primitive types like integers, floats, booleans, and strings. Arrays can be passed as a comma delimited string (e.g. param:\"1,2,3\" ). Hashes are not currently supported. It is recommended to add all pantograph actions you use to your Pantfile . Source code This action, just like the rest of pantograph , is fully open source, view the source code on GitHub Back to actions","title":"ssh"},{"location":"actions/ssh/#ssh","text":"Allows remote command execution using ssh Lets you execute remote commands via ssh using username/password or ssh-agent. If one of the commands in command-array returns non 0, it fails. ssh Supported platforms mac, linux, windows Author @hjanuschka","title":"ssh"},{"location":"actions/ssh/#1-example","text":"ssh ( host : \"dev.januschka.com\" , username : \"root\" , commands : [ \"date\" , \"echo 1 > /tmp/file1\" ] )","title":"1 Example"},{"location":"actions/ssh/#parameters","text":"Key Description Default username Username password Password host Hostname port Port 22 commands Commands log Log commands and output true * = default value is dependent on the user's system","title":"Parameters"},{"location":"actions/ssh/#lane-variables","text":"Actions can communicate with each other using a shared hash lane_context , that can be accessed in other actions, plugins or your lanes: lane_context[SharedValues:XYZ] . The ssh action generates the following Lane Variables: SharedValue Description SharedValues::SSH_STDOUT_VALUE Holds the standard output of all commands SharedValues::SSH_STDERR_VALUE Holds the standard error of all commands To get more information check the Lanes documentation .","title":"Lane Variables"},{"location":"actions/ssh/#documentation","text":"To show the documentation in your terminal, run pantograph action ssh","title":"Documentation"},{"location":"actions/ssh/#cli","text":"It is recommended to add the above action into your Pantfile , however sometimes you might want to run one-offs. To do so, you can run the following command from your terminal pantograph run ssh To pass parameters, make use of the : symbol, for example pantograph run ssh parameter1: \"value1\" parameter2: \"value2\" It's important to note that the CLI supports primitive types like integers, floats, booleans, and strings. Arrays can be passed as a comma delimited string (e.g. param:\"1,2,3\" ). Hashes are not currently supported. It is recommended to add all pantograph actions you use to your Pantfile .","title":"CLI"},{"location":"actions/ssh/#source-code","text":"This action, just like the rest of pantograph , is fully open source, view the source code on GitHub Back to actions","title":"Source code"},{"location":"actions/twitter/","text":"twitter Post a tweet on Twitter.com Post a tweet on Twitter. Requires you to setup an app on twitter.com and obtain consumer and access_token . twitter Supported platforms mac, linux, windows Author @hjanuschka 1 Example twitter ( access_token : \"XXXX\" , access_token_secret : \"xxx\" , consumer_key : \"xxx\" , consumer_secret : \"xxx\" , message : \"You rock!\" ) Parameters Key Description Default consumer_key Consumer Key consumer_secret Consumer Secret access_token Access Token access_token_secret Access Token Secret message The tweet * = default value is dependent on the user's system Documentation To show the documentation in your terminal, run pantograph action twitter CLI It is recommended to add the above action into your Pantfile , however sometimes you might want to run one-offs. To do so, you can run the following command from your terminal pantograph run twitter To pass parameters, make use of the : symbol, for example pantograph run twitter parameter1: \"value1\" parameter2: \"value2\" It's important to note that the CLI supports primitive types like integers, floats, booleans, and strings. Arrays can be passed as a comma delimited string (e.g. param:\"1,2,3\" ). Hashes are not currently supported. It is recommended to add all pantograph actions you use to your Pantfile . Source code This action, just like the rest of pantograph , is fully open source, view the source code on GitHub Back to actions","title":"twitter"},{"location":"actions/twitter/#twitter","text":"Post a tweet on Twitter.com Post a tweet on Twitter. Requires you to setup an app on twitter.com and obtain consumer and access_token . twitter Supported platforms mac, linux, windows Author @hjanuschka","title":"twitter"},{"location":"actions/twitter/#1-example","text":"twitter ( access_token : \"XXXX\" , access_token_secret : \"xxx\" , consumer_key : \"xxx\" , consumer_secret : \"xxx\" , message : \"You rock!\" )","title":"1 Example"},{"location":"actions/twitter/#parameters","text":"Key Description Default consumer_key Consumer Key consumer_secret Consumer Secret access_token Access Token access_token_secret Access Token Secret message The tweet * = default value is dependent on the user's system","title":"Parameters"},{"location":"actions/twitter/#documentation","text":"To show the documentation in your terminal, run pantograph action twitter","title":"Documentation"},{"location":"actions/twitter/#cli","text":"It is recommended to add the above action into your Pantfile , however sometimes you might want to run one-offs. To do so, you can run the following command from your terminal pantograph run twitter To pass parameters, make use of the : symbol, for example pantograph run twitter parameter1: \"value1\" parameter2: \"value2\" It's important to note that the CLI supports primitive types like integers, floats, booleans, and strings. Arrays can be passed as a comma delimited string (e.g. param:\"1,2,3\" ). Hashes are not currently supported. It is recommended to add all pantograph actions you use to your Pantfile .","title":"CLI"},{"location":"actions/twitter/#source-code","text":"This action, just like the rest of pantograph , is fully open source, view the source code on GitHub Back to actions","title":"Source code"},{"location":"actions/update_pantograph/","text":"update_pantograph Makes sure pantograph-tools are up-to-date when running pantograph This action will update pantograph to the most recent version - major version updates will not be performed automatically, as they might include breaking changes. If an update was performed, pantograph will be restarted before the run continues. If you are using rbenv or rvm, everything should be good to go. However, if you are using the system's default ruby, some additional setup is needed for this action to work correctly. In short, pantograph needs to be able to access your gem library without running in sudo mode. The simplest possible fix for this is putting the following lines into your ~/.bashrc or ~/.zshrc file: export GEM_HOME = ~/.gems export PATH = $PATH :~/.gems/bin After the above changes, restart your terminal, then run mkdir $GEM_HOME to create the new gem directory. After this, you're good to go! Recommended usage of the update_pantograph action is at the top inside of the before_all block, before running any other action. update_pantograph Supported platforms mac, linux, windows Author @milch, @KrauseFx 1 Example before_all do update_pantograph # ... end Parameters Key Description Default nightly Opt-in to install and use nightly pantograph builds false no_update Don't update during this run. This is used internally false tools DEPRECATED! Comma separated list of pantograph tools to update (e.g. pantograph,sigh ) * = default value is dependent on the user's system Documentation To show the documentation in your terminal, run pantograph action update_pantograph CLI It is recommended to add the above action into your Pantfile , however sometimes you might want to run one-offs. To do so, you can run the following command from your terminal pantograph run update_pantograph To pass parameters, make use of the : symbol, for example pantograph run update_pantograph parameter1: \"value1\" parameter2: \"value2\" It's important to note that the CLI supports primitive types like integers, floats, booleans, and strings. Arrays can be passed as a comma delimited string (e.g. param:\"1,2,3\" ). Hashes are not currently supported. It is recommended to add all pantograph actions you use to your Pantfile . Source code This action, just like the rest of pantograph , is fully open source, view the source code on GitHub Back to actions","title":"update_pantograph"},{"location":"actions/update_pantograph/#update_pantograph","text":"Makes sure pantograph-tools are up-to-date when running pantograph This action will update pantograph to the most recent version - major version updates will not be performed automatically, as they might include breaking changes. If an update was performed, pantograph will be restarted before the run continues. If you are using rbenv or rvm, everything should be good to go. However, if you are using the system's default ruby, some additional setup is needed for this action to work correctly. In short, pantograph needs to be able to access your gem library without running in sudo mode. The simplest possible fix for this is putting the following lines into your ~/.bashrc or ~/.zshrc file: export GEM_HOME = ~/.gems export PATH = $PATH :~/.gems/bin After the above changes, restart your terminal, then run mkdir $GEM_HOME to create the new gem directory. After this, you're good to go! Recommended usage of the update_pantograph action is at the top inside of the before_all block, before running any other action. update_pantograph Supported platforms mac, linux, windows Author @milch, @KrauseFx","title":"update_pantograph"},{"location":"actions/update_pantograph/#1-example","text":"before_all do update_pantograph # ... end","title":"1 Example"},{"location":"actions/update_pantograph/#parameters","text":"Key Description Default nightly Opt-in to install and use nightly pantograph builds false no_update Don't update during this run. This is used internally false tools DEPRECATED! Comma separated list of pantograph tools to update (e.g. pantograph,sigh ) * = default value is dependent on the user's system","title":"Parameters"},{"location":"actions/update_pantograph/#documentation","text":"To show the documentation in your terminal, run pantograph action update_pantograph","title":"Documentation"},{"location":"actions/update_pantograph/#cli","text":"It is recommended to add the above action into your Pantfile , however sometimes you might want to run one-offs. To do so, you can run the following command from your terminal pantograph run update_pantograph To pass parameters, make use of the : symbol, for example pantograph run update_pantograph parameter1: \"value1\" parameter2: \"value2\" It's important to note that the CLI supports primitive types like integers, floats, booleans, and strings. Arrays can be passed as a comma delimited string (e.g. param:\"1,2,3\" ). Hashes are not currently supported. It is recommended to add all pantograph actions you use to your Pantfile .","title":"CLI"},{"location":"actions/update_pantograph/#source-code","text":"This action, just like the rest of pantograph , is fully open source, view the source code on GitHub Back to actions","title":"Source code"},{"location":"actions/zip/","text":"zip Compress a file or folder to a zip zip Supported platforms mac, linux, windows Author @KrauseFx Returns The path to the output zip file 4 Examples zip zip ( path : \"MyApp.app\" , output_path : \"Latest.app.zip\" ) zip ( path : \"MyApp.app\" , output_path : \"Latest.app.zip\" , verbose : false ) zip ( path : \"MyApp.app\" , output_path : \"Latest.app.zip\" , verbose : false , symlinks : true ) Parameters Key Description Default path Path to the directory or file to be zipped output_path The name of the resulting zip file verbose Enable verbose output of zipped file true password Encrypt the contents of the zip archive using a password symlinks Store symbolic links as such in the zip archive false * = default value is dependent on the user's system Documentation To show the documentation in your terminal, run pantograph action zip CLI It is recommended to add the above action into your Pantfile , however sometimes you might want to run one-offs. To do so, you can run the following command from your terminal pantograph run zip To pass parameters, make use of the : symbol, for example pantograph run zip parameter1: \"value1\" parameter2: \"value2\" It's important to note that the CLI supports primitive types like integers, floats, booleans, and strings. Arrays can be passed as a comma delimited string (e.g. param:\"1,2,3\" ). Hashes are not currently supported. It is recommended to add all pantograph actions you use to your Pantfile . Source code This action, just like the rest of pantograph , is fully open source, view the source code on GitHub Back to actions","title":"zip"},{"location":"actions/zip/#zip","text":"Compress a file or folder to a zip zip Supported platforms mac, linux, windows Author @KrauseFx Returns The path to the output zip file","title":"zip"},{"location":"actions/zip/#4-examples","text":"zip zip ( path : \"MyApp.app\" , output_path : \"Latest.app.zip\" ) zip ( path : \"MyApp.app\" , output_path : \"Latest.app.zip\" , verbose : false ) zip ( path : \"MyApp.app\" , output_path : \"Latest.app.zip\" , verbose : false , symlinks : true )","title":"4 Examples"},{"location":"actions/zip/#parameters","text":"Key Description Default path Path to the directory or file to be zipped output_path The name of the resulting zip file verbose Enable verbose output of zipped file true password Encrypt the contents of the zip archive using a password symlinks Store symbolic links as such in the zip archive false * = default value is dependent on the user's system","title":"Parameters"},{"location":"actions/zip/#documentation","text":"To show the documentation in your terminal, run pantograph action zip","title":"Documentation"},{"location":"actions/zip/#cli","text":"It is recommended to add the above action into your Pantfile , however sometimes you might want to run one-offs. To do so, you can run the following command from your terminal pantograph run zip To pass parameters, make use of the : symbol, for example pantograph run zip parameter1: \"value1\" parameter2: \"value2\" It's important to note that the CLI supports primitive types like integers, floats, booleans, and strings. Arrays can be passed as a comma delimited string (e.g. param:\"1,2,3\" ). Hashes are not currently supported. It is recommended to add all pantograph actions you use to your Pantfile .","title":"CLI"},{"location":"actions/zip/#source-code","text":"This action, just like the rest of pantograph , is fully open source, view the source code on GitHub Back to actions","title":"Source code"},{"location":"advanced/Pantfile/","text":".pantograph-setup { border-left: .4rem solid #00b0ff; border-bottom: .1rem solid rgba(0,176,255,.1); background-color: rgba(0,176,255,.1); padding: 15px; margin-bottom: 20px; font-weight: 200; } .pantograph-setup-wrapper { background-color: rgba(0,176,255,.05); } .pantograph-setup-wrapper[open] { padding-bottom: 1px; } .pantograph-setup-header { font-size: 20px; font-weight: 500; } .pantograph-setup-more-details { font-size: 18px; font-weight: 350; } New to pantograph? Click here to open the installation & setup instructions first 1) Install the latest Xcode command line tools xcode-select --install Install _pantograph_ using Homebrew & Rubygems # Install ruby via homebrew (macOS & linux only) brew install ruby # Set ruby in your shell path (example uses Zsh) echo 'export PATH=\"/usr/local/opt/ruby/bin:$PATH\"' >> ~/.zshrc # Using RubyGems gem install pantograph 3) Navigate to your project and run pantograph init More Details Pantfile The Pantfile stores the automation configuration that can be run with pantograph . The Pantfile has to be inside your ./pantograph directory. Importing another Pantfile Within your Pantfile you can import another Pantfile using 2 methods: import Import a Pantfile from a local path import \"../GeneralPantfile\" override_lane :from_general do # ... end import_from_git Import from another git repository, which you can use to have one git repo with a default Pantfile for all your project import_from_git ( url : 'https://github.com/pantograph/pantograph' ) # or import_from_git ( url : 'git@github.com:MyAwesomeRepo/MyAwesomePantographStandardSetup.git' , path : 'pantograph/Pantfile' ) lane :new_main_lane do # ... end This will also automatically import all the local actions from this repo. Note You should import the other Pantfile on the top above your lane declarations. When defining a new lane pantograph will make sure to not run into any name conflicts. If you want to overwrite an existing lane (from the imported one), use the override_lane keyword. Load own actions from external folder Add this to the top of your Pantfile . actions_path '../custom_actions_folder/' Using pantograph_require If you're using a third party gem in your Pantfile , it is recommended to use pantograph_require instead of require . pantograph_require will: Verify the gem is installed Show installation instructions if not installed Require the gem (like require does) Example pantograph_require 'hike' lane :release do # Do stuff with hike end","title":"Pantfile"},{"location":"advanced/Pantfile/#pantfile","text":"The Pantfile stores the automation configuration that can be run with pantograph . The Pantfile has to be inside your ./pantograph directory.","title":"Pantfile"},{"location":"advanced/Pantfile/#importing-another-pantfile","text":"Within your Pantfile you can import another Pantfile using 2 methods:","title":"Importing another Pantfile"},{"location":"advanced/Pantfile/#import","text":"Import a Pantfile from a local path import \"../GeneralPantfile\" override_lane :from_general do # ... end","title":"import"},{"location":"advanced/Pantfile/#import_from_git","text":"Import from another git repository, which you can use to have one git repo with a default Pantfile for all your project import_from_git ( url : 'https://github.com/pantograph/pantograph' ) # or import_from_git ( url : 'git@github.com:MyAwesomeRepo/MyAwesomePantographStandardSetup.git' , path : 'pantograph/Pantfile' ) lane :new_main_lane do # ... end This will also automatically import all the local actions from this repo.","title":"import_from_git"},{"location":"advanced/Pantfile/#note","text":"You should import the other Pantfile on the top above your lane declarations. When defining a new lane pantograph will make sure to not run into any name conflicts. If you want to overwrite an existing lane (from the imported one), use the override_lane keyword.","title":"Note"},{"location":"advanced/Pantfile/#load-own-actions-from-external-folder","text":"Add this to the top of your Pantfile . actions_path '../custom_actions_folder/'","title":"Load own actions from external folder"},{"location":"advanced/Pantfile/#using-pantograph_require","text":"If you're using a third party gem in your Pantfile , it is recommended to use pantograph_require instead of require . pantograph_require will: Verify the gem is installed Show installation instructions if not installed Require the gem (like require does)","title":"Using pantograph_require"},{"location":"advanced/Pantfile/#example","text":"pantograph_require 'hike' lane :release do # Do stuff with hike end","title":"Example"},{"location":"advanced/actions/","text":".pantograph-setup { border-left: .4rem solid #00b0ff; border-bottom: .1rem solid rgba(0,176,255,.1); background-color: rgba(0,176,255,.1); padding: 15px; margin-bottom: 20px; font-weight: 200; } .pantograph-setup-wrapper { background-color: rgba(0,176,255,.05); } .pantograph-setup-wrapper[open] { padding-bottom: 1px; } .pantograph-setup-header { font-size: 20px; font-weight: 500; } .pantograph-setup-more-details { font-size: 18px; font-weight: 350; } New to pantograph? Click here to open the installation & setup instructions first 1) Install the latest Xcode command line tools xcode-select --install Install _pantograph_ using Homebrew & Rubygems # Install ruby via homebrew (macOS & linux only) brew install ruby # Set ruby in your shell path (example uses Zsh) echo 'export PATH=\"/usr/local/opt/ruby/bin:$PATH\"' >> ~/.zshrc # Using RubyGems gem install pantograph 3) Navigate to your project and run pantograph init More Details Actions User input and output The PantographCore::UI utility may be used to display output to the user and also request input from an action. UI includes a number of methods to customize the output for different purposes: UI . message ( 'Hello from my_new_action.' ) UI . important ( 'Warning: This is a new action.' ) UI . error ( 'Something unexpected happened in my_new_action. Attempting to continue.' ) method description error Displays an error message in red important Displays a warning or other important message in yellow success Displays a success message in green message Displays a message in the default output color deprecated Displays a deprecation message in bold blue command Displays a command being executed in cyan command_output Displays command output in magenta verbose Displays verbose output in the default output color header Displays a message in a box for emphasis Methods ending in an exclamation point ( ! ) terminate execution of the current lane and report an error: UI . user_error! ( \"Could not open file #{ file_path } \" ) method description crash! Report a catastrophic error user_error! Rescue an exception in your action and report a nice message to the user shell_error! Report failure of a shell command build_failure! Report a build failure test_failure! Report a test failure abort_with_message! Report a failure condition that prevents continuing Note that these methods raise exceptions that are rescued in the runner context for the lane. This terminates further lane execution, so it is not necessary to return. # No need for \"and return\" here UI . user_error! ( \"Could not open file #{ file_path } \" ) and return if file . nil? The following methods may be used to prompt the user for input. if UI . interactive? name = UI . input ( 'Please enter your name: ' ) is_correct = UI . confirm ( 'Is this correct? ' ) choice = UI . select ( 'Please choose from the following list:' , %w{alpha beta gamma} ) password = UI . password ( 'Please enter your password: ' ) end method description interactive? Indicates whether interactive input is possible input Prompt the user for string input confirm Ask the user a binary question select Prompt the user to select from a list of options password Prompt the user for a password (masks output) Run actions directly If you just want to try an action without adding them to your Pantfile yet, you can use pantograph run notification message: \"My Text\" title: \"The Title\" To get the available options for any action run pantograph action [action_name] . You might not be able to set some kind of parameters using this method. Shell values You can get value from shell commands: output = sh ( 'ls -a' ) Building Actions Using PantographCore::Configuration Most actions accept one or more parameters to customize their behavior. Actions define their parameters in an available_options method. This method returns an array of PantographCore::ConfigItem objects to describe supported options. Each option is declared by creating a new ConfigItem , e.g.: PantographCore :: ConfigItem . new ( key : :file , env_name : 'MY_NEW_ACTION_FILE' , description : 'A file to operate on' , type : String , optional : false ) This declares a file option for use with the action in a Pantfile, e.g.: my_new_action ( file : 'file.txt' ) If the optional env_name is present, an environment variable with the specified name may also be used in place of an option in the Pantfile: MY_NEW_ACTION_FILE = file.txt pantograph run my_new_action The type argument to the PantographCore::ConfigItem initializer specifies the name of a Ruby class representing a standard data type. Supplied arguments will be coerced to the specified type. Some standard types support default conversions. Boolean parameters Ruby does not have a single class to represent a Boolean type. When specifying Boolean parameters, use is_string: false , without specifying a type , e.g.: PantographCore :: ConfigItem . new ( key : :commit , env_name : 'MY_NEW_ACTION_COMMIT' , description : 'Commit the results if true' , optional : true , default_value : false , is_string : false ) When passing a string value, e.g. from an environment variable, certain set string values are recognized: MY_NEW_ACTION_COMMIT = true MY_NEW_ACTION_COMMIT = false MY_NEW_ACTION_COMMIT = yes MY_NEW_ACTION_COMMIT = no These values may also be passed in all caps, e.g. MY_NEW_ACTION_COMMIT=YES . Array parameters If a parameter is declared with type: Array and a String argument is passed, an array will be produced by splitting the string using the comma character as a delimiter: PantographCore :: ConfigItem . new ( key : :files , env_name : 'MY_NEW_ACTION_FILES' , description : 'One or more files to operate on' , type : Array , optional : false ) my_new_action ( files : 'file1.txt,file2.txt' ) This is received by the action as ['file1.txt', 'file2.txt'] . This also means a parameter that accepts an array may take a single string as an argument: my_new_action ( files : 'file.txt' ) This is received by the action as ['file.txt'] . Comma-separated lists are particularly useful when using environment variables: export MY_NEW_ACTION_FILES = file1.txt,file2.txt Polymorphic parameters To allow for different types to be passed to a parameter (beyond what is provided above), specify is_string: false without a type field. Use an optional verify_block argument (see below) or verify the argument within your action. If the block does not raise, the option is considered verified. The UI.user_error! method is a convenient way to handle verification failure. PantographCore :: ConfigItem . new ( key : :polymorphic_option , is_string : false , verify_block : -> ( value ) { verify_option ( value ) } ) def verify_option ( value ) case value when String @polymorphic_option = value when Array @polymorphic_option = value . join ( ' ' ) when Hash @polymorphic_option = value . to_s else UI . user_error! \"Invalid option: #{ value . inspect } \" end end Callback parameters If your action needs to provide a callback, specify Proc for the type field. PantographCore :: ConfigItem . new ( key : :callback , description : 'Optional callback argument' , optional : true , type : Proc ) To invoke the callback in your action, use the Proc#call method and pass any arguments: params [ :callback ]. call ( result ) if params [ :callback ] To notify the user of success or failure, it's usually best just to return a value such as true or false from your action. Use a callback for contextual error handling. For example, the built-in sh action passes the entire command output to an optional error_callback : callback = lambda do | result | handle_missing_file if result =~ /file not found/i handle_auth_failure if result =~ /login failed/i end sh ( 'some_cmd' , error_callback : callback ) Note on Procs When passing a block as a parameter to an action or ConfigItem, use a Proc object. There are three ways to create an instance of Proc in Ruby. Using the lambda operator: verify_block = lambda do | value | ... end Using Proc.new : verify_block = Proc . new do | value | ... end Using the Proc literal notation: verify_block = -> ( value ) { ... } Note that you cannot pass a block literal as a Proc . Verify blocks Use a verify_block argument with your ConfigItem to provide special argument verification: verify_block = lambda do | value | # Has to be a String to get this far uri = URI ( value ) UI . error ( \"Invalid scheme #{ uri . scheme } \" unless uri . scheme == 'http' || uri . scheme == 'https' ) end PantographCore :: ConfigItem . new ( key : :url , type : String , verify_block : verify_block ) The verify_block requires a Proc argument (see above). Conflicting options If your action includes multiple conflicting options, use conflicting_options in the ConfigItem for each. Make sure conflicting options are optional. PantographCore :: ConfigItem . new ( key : :text , type : String , optional : true , conflicting_options : [ :text_file ] ), PantographCore :: ConfigItem . new ( key : :text_file , type : String , optional : true , conflicting_options : [ :text ] ) You can also pass a conflict_block (a Proc , see above) if you want to implement special handling of conflicting options: conflict_block = Proc . new do | other | UI . user_error! ( \"Unexpected conflict with option #{ other } \" ) unless [ :text , :text_file ]. include? ( other ) UI . message ( 'Ignoring :text_file in favor of :text' ) end PantographCore :: ConfigItem . new ( key : :text , type : String , optional : true , conflicting_options : [ :text_file ] , conflict_block : conflict_block ), PantographCore :: ConfigItem . new ( key : :text_file , type : String , optional : true , conflicting_options : [ :text ] , conflict_block : conflict_block ) Optional parameters Parameters with optional: true will be nil unless a default_value field is present. Make sure the default_value is reasonable unless it's acceptable for the key to be absent. PantographCore :: ConfigItem . new ( key : :build_configuration , description : 'Which build configuration to use' , type : String , optional : true , default_value : 'Release' ), PantographCore :: ConfigItem . new ( key : :offset , description : 'Offset to start from' , type : Integer , optional : true , default_value : 0 ), PantographCore :: ConfigItem . new ( key : :workspace , description : 'Optional workspace path' , type : String , optional : true # Not every project has a workspace, so nil is a good default value here. ) Within the action params[:build_configuration] will never be nil. Specifying the default_value is preferable to something in code like: config = params [ :build_configuration ] || 'Release' Default values are included in the documentation for action parameters. Configuration files Pantograph also supports configuration files ( MyNewActionFile ). This is useful for actions with many options. To add support for a configuration file to a custom action, call load_configuration_file early, usually as the first line of run : def self . run ( params ) params . load_configuration_file ( 'MyNewActionfile' ) # ... This will load any parameters specified in MyNewActionfile . This method looks for the specified file in ./pantograph , ./.pantograph and . , in that order. The file is evaluated by the Ruby interpreter. You may specify they key from any PantographCore::ConfigItem as a method call in the configuration file: command 'ls -la' files %w{file1.txt file2.txt} Resolution order Parameters are resolved from different sources in the following order: A parameter directly passed to an action using the key , usually from the Pantfile . An environment variable, if the env_name is set. A configuration file used in load_configuration_file . The default_value of the ConfigItem . If not explicitly set, this will be nil . Invoking shell commands If your action needs to run a shell command, there are several methods. You can easily determine the exit status of the command and capture all terminal output from the command. Using Kernel#system Use the Ruby system method call to invoke a command string. This does not redirect stdin, stdout or stderr, so output formatting will be unaffected. It executes the command in a subshell. system ( 'cat pantograph/Pantfile' ) Upon command completion, the method returns true or false to indicate completion status. The $? global variable will also indicate the exit status of the command. system ( 'cat pantograph/Pantfile' ) UI . user_error! ( 'Could not execute command' ) unless $? . exitstatus == 0 If the command to be executed is not found, system will return nil , and $?.exitstatus will be nonzero. Using backticks To capture the output of a command, enclose the command in backticks: pod_cmd = `which pod` UI . important ( '\"pod\" command not found' ) if pod_cmd . empty? Because you are capturing stdout, the command output will not appear at the terminal unless you log it using UI . Formatting may be lost when capturing command output. The entire output to stdout will be captured after the command returns. Output to stderr is not captured or redirected. The $? global variable will indicate the completion status of the command. If the command to be executed is not found, Errno::ENOENT is raised. Using the sh method You can also use the built-in sh method: sh ( 'pwd' ) This is called the same way in an action as in a Pantfile. This provides consistent logging of command output. All output to stdout and stderr is logged via UI . The sh method can accept a block, which will receive the Process::Status returned by the command, the complete output of the command, and an equivalent shell command upon completion of the command. sh ( \"ls', '-la\" ) do | status , result , command | unless status . success? UI . error ( \"Command #{ command } (pid #{ status . pid } ) failed with status #{ status . exitstatus } \" ) end UI . message ( \"Output is #{ result . inspect } \" ) end To be notified only when an error occurs, use the error_callback parameter (a Proc): success = true sh ( 'pwd' , error_callback : -> ( result ) { success = false }) UI . user_error ( \"Command failed\" ) unless success The result argument to the error_callback is the entire string output of the command. If the command to be executed is not found, Errno::ENOENT is raised without calling the block or error_callback . If an error_callback or block is not provided, and the command executes and returns an error, an exception is raised, and lane execution is terminated unless the exception is rescued. The exit status of the command will be available in $? . It is also available as the first argument to a block. The return value of the method is the output of the command, unless a block is given. Then the output is available within the block, and the return value of sh is the return value of the block. This enables usage like: if sh command { | s | s . success? } UI . success ( 'Command succeeded' ) else UI . error ( 'Command failed' ) end Anywhere other than an action or a Pantfile (e.g. in helper code), you can invoke this method as Actions.sh . Escaping in shell commands Use shellwords to escape arguments to shell commands. `git commit -aqm #{ Shellwords . escape commit_message } ` system ( \"cat #{ path . shellescape } \" ) When using system or sh , pass a list of arguments instead of shell-escaping individual arguments. sh ( 'git' , 'commit' , '-aqm' , commit_message ) system ( 'cat' , path ) Calling other actions Some built-in utility actions, such as sh , may be used in custom actions (e.g., in plugins). It's not generally a good idea to call a complex action from another action. In particular: If you're calling one plugin action from another plugin action, you should probably refactor your plugin helper to be more easily called from all actions in the plugin. Avoid wrapping complex built-in actions like deliver and gym . There can be issues with one plugin depending on another plugin. Certain simple built-in utility actions may be used with other_action in your action, such as: other_action.git_add , other_action.git_commit . Think twice before calling an action from another action. There is often a better solution.","title":"Actions"},{"location":"advanced/actions/#actions","text":"","title":"Actions"},{"location":"advanced/actions/#user-input-and-output","text":"The PantographCore::UI utility may be used to display output to the user and also request input from an action. UI includes a number of methods to customize the output for different purposes: UI . message ( 'Hello from my_new_action.' ) UI . important ( 'Warning: This is a new action.' ) UI . error ( 'Something unexpected happened in my_new_action. Attempting to continue.' ) method description error Displays an error message in red important Displays a warning or other important message in yellow success Displays a success message in green message Displays a message in the default output color deprecated Displays a deprecation message in bold blue command Displays a command being executed in cyan command_output Displays command output in magenta verbose Displays verbose output in the default output color header Displays a message in a box for emphasis Methods ending in an exclamation point ( ! ) terminate execution of the current lane and report an error: UI . user_error! ( \"Could not open file #{ file_path } \" ) method description crash! Report a catastrophic error user_error! Rescue an exception in your action and report a nice message to the user shell_error! Report failure of a shell command build_failure! Report a build failure test_failure! Report a test failure abort_with_message! Report a failure condition that prevents continuing Note that these methods raise exceptions that are rescued in the runner context for the lane. This terminates further lane execution, so it is not necessary to return. # No need for \"and return\" here UI . user_error! ( \"Could not open file #{ file_path } \" ) and return if file . nil? The following methods may be used to prompt the user for input. if UI . interactive? name = UI . input ( 'Please enter your name: ' ) is_correct = UI . confirm ( 'Is this correct? ' ) choice = UI . select ( 'Please choose from the following list:' , %w{alpha beta gamma} ) password = UI . password ( 'Please enter your password: ' ) end method description interactive? Indicates whether interactive input is possible input Prompt the user for string input confirm Ask the user a binary question select Prompt the user to select from a list of options password Prompt the user for a password (masks output)","title":"User input and output"},{"location":"advanced/actions/#run-actions-directly","text":"If you just want to try an action without adding them to your Pantfile yet, you can use pantograph run notification message: \"My Text\" title: \"The Title\" To get the available options for any action run pantograph action [action_name] . You might not be able to set some kind of parameters using this method.","title":"Run actions directly"},{"location":"advanced/actions/#shell-values","text":"You can get value from shell commands: output = sh ( 'ls -a' )","title":"Shell values"},{"location":"advanced/actions/#building-actions","text":"","title":"Building Actions"},{"location":"advanced/actions/#using-pantographcoreconfiguration","text":"Most actions accept one or more parameters to customize their behavior. Actions define their parameters in an available_options method. This method returns an array of PantographCore::ConfigItem objects to describe supported options. Each option is declared by creating a new ConfigItem , e.g.: PantographCore :: ConfigItem . new ( key : :file , env_name : 'MY_NEW_ACTION_FILE' , description : 'A file to operate on' , type : String , optional : false ) This declares a file option for use with the action in a Pantfile, e.g.: my_new_action ( file : 'file.txt' ) If the optional env_name is present, an environment variable with the specified name may also be used in place of an option in the Pantfile: MY_NEW_ACTION_FILE = file.txt pantograph run my_new_action The type argument to the PantographCore::ConfigItem initializer specifies the name of a Ruby class representing a standard data type. Supplied arguments will be coerced to the specified type. Some standard types support default conversions.","title":"Using PantographCore::Configuration"},{"location":"advanced/actions/#boolean-parameters","text":"Ruby does not have a single class to represent a Boolean type. When specifying Boolean parameters, use is_string: false , without specifying a type , e.g.: PantographCore :: ConfigItem . new ( key : :commit , env_name : 'MY_NEW_ACTION_COMMIT' , description : 'Commit the results if true' , optional : true , default_value : false , is_string : false ) When passing a string value, e.g. from an environment variable, certain set string values are recognized: MY_NEW_ACTION_COMMIT = true MY_NEW_ACTION_COMMIT = false MY_NEW_ACTION_COMMIT = yes MY_NEW_ACTION_COMMIT = no These values may also be passed in all caps, e.g. MY_NEW_ACTION_COMMIT=YES .","title":"Boolean parameters"},{"location":"advanced/actions/#array-parameters","text":"If a parameter is declared with type: Array and a String argument is passed, an array will be produced by splitting the string using the comma character as a delimiter: PantographCore :: ConfigItem . new ( key : :files , env_name : 'MY_NEW_ACTION_FILES' , description : 'One or more files to operate on' , type : Array , optional : false ) my_new_action ( files : 'file1.txt,file2.txt' ) This is received by the action as ['file1.txt', 'file2.txt'] . This also means a parameter that accepts an array may take a single string as an argument: my_new_action ( files : 'file.txt' ) This is received by the action as ['file.txt'] . Comma-separated lists are particularly useful when using environment variables: export MY_NEW_ACTION_FILES = file1.txt,file2.txt","title":"Array parameters"},{"location":"advanced/actions/#polymorphic-parameters","text":"To allow for different types to be passed to a parameter (beyond what is provided above), specify is_string: false without a type field. Use an optional verify_block argument (see below) or verify the argument within your action. If the block does not raise, the option is considered verified. The UI.user_error! method is a convenient way to handle verification failure. PantographCore :: ConfigItem . new ( key : :polymorphic_option , is_string : false , verify_block : -> ( value ) { verify_option ( value ) } ) def verify_option ( value ) case value when String @polymorphic_option = value when Array @polymorphic_option = value . join ( ' ' ) when Hash @polymorphic_option = value . to_s else UI . user_error! \"Invalid option: #{ value . inspect } \" end end","title":"Polymorphic parameters"},{"location":"advanced/actions/#callback-parameters","text":"If your action needs to provide a callback, specify Proc for the type field. PantographCore :: ConfigItem . new ( key : :callback , description : 'Optional callback argument' , optional : true , type : Proc ) To invoke the callback in your action, use the Proc#call method and pass any arguments: params [ :callback ]. call ( result ) if params [ :callback ] To notify the user of success or failure, it's usually best just to return a value such as true or false from your action. Use a callback for contextual error handling. For example, the built-in sh action passes the entire command output to an optional error_callback : callback = lambda do | result | handle_missing_file if result =~ /file not found/i handle_auth_failure if result =~ /login failed/i end sh ( 'some_cmd' , error_callback : callback )","title":"Callback parameters"},{"location":"advanced/actions/#note-on-procs","text":"When passing a block as a parameter to an action or ConfigItem, use a Proc object. There are three ways to create an instance of Proc in Ruby. Using the lambda operator: verify_block = lambda do | value | ... end Using Proc.new : verify_block = Proc . new do | value | ... end Using the Proc literal notation: verify_block = -> ( value ) { ... } Note that you cannot pass a block literal as a Proc .","title":"Note on Procs"},{"location":"advanced/actions/#verify-blocks","text":"Use a verify_block argument with your ConfigItem to provide special argument verification: verify_block = lambda do | value | # Has to be a String to get this far uri = URI ( value ) UI . error ( \"Invalid scheme #{ uri . scheme } \" unless uri . scheme == 'http' || uri . scheme == 'https' ) end PantographCore :: ConfigItem . new ( key : :url , type : String , verify_block : verify_block ) The verify_block requires a Proc argument (see above).","title":"Verify blocks"},{"location":"advanced/actions/#conflicting-options","text":"If your action includes multiple conflicting options, use conflicting_options in the ConfigItem for each. Make sure conflicting options are optional. PantographCore :: ConfigItem . new ( key : :text , type : String , optional : true , conflicting_options : [ :text_file ] ), PantographCore :: ConfigItem . new ( key : :text_file , type : String , optional : true , conflicting_options : [ :text ] ) You can also pass a conflict_block (a Proc , see above) if you want to implement special handling of conflicting options: conflict_block = Proc . new do | other | UI . user_error! ( \"Unexpected conflict with option #{ other } \" ) unless [ :text , :text_file ]. include? ( other ) UI . message ( 'Ignoring :text_file in favor of :text' ) end PantographCore :: ConfigItem . new ( key : :text , type : String , optional : true , conflicting_options : [ :text_file ] , conflict_block : conflict_block ), PantographCore :: ConfigItem . new ( key : :text_file , type : String , optional : true , conflicting_options : [ :text ] , conflict_block : conflict_block )","title":"Conflicting options"},{"location":"advanced/actions/#optional-parameters","text":"Parameters with optional: true will be nil unless a default_value field is present. Make sure the default_value is reasonable unless it's acceptable for the key to be absent. PantographCore :: ConfigItem . new ( key : :build_configuration , description : 'Which build configuration to use' , type : String , optional : true , default_value : 'Release' ), PantographCore :: ConfigItem . new ( key : :offset , description : 'Offset to start from' , type : Integer , optional : true , default_value : 0 ), PantographCore :: ConfigItem . new ( key : :workspace , description : 'Optional workspace path' , type : String , optional : true # Not every project has a workspace, so nil is a good default value here. ) Within the action params[:build_configuration] will never be nil. Specifying the default_value is preferable to something in code like: config = params [ :build_configuration ] || 'Release' Default values are included in the documentation for action parameters.","title":"Optional parameters"},{"location":"advanced/actions/#configuration-files","text":"Pantograph also supports configuration files ( MyNewActionFile ). This is useful for actions with many options. To add support for a configuration file to a custom action, call load_configuration_file early, usually as the first line of run : def self . run ( params ) params . load_configuration_file ( 'MyNewActionfile' ) # ... This will load any parameters specified in MyNewActionfile . This method looks for the specified file in ./pantograph , ./.pantograph and . , in that order. The file is evaluated by the Ruby interpreter. You may specify they key from any PantographCore::ConfigItem as a method call in the configuration file: command 'ls -la' files %w{file1.txt file2.txt}","title":"Configuration files"},{"location":"advanced/actions/#resolution-order","text":"Parameters are resolved from different sources in the following order: A parameter directly passed to an action using the key , usually from the Pantfile . An environment variable, if the env_name is set. A configuration file used in load_configuration_file . The default_value of the ConfigItem . If not explicitly set, this will be nil .","title":"Resolution order"},{"location":"advanced/actions/#invoking-shell-commands","text":"If your action needs to run a shell command, there are several methods. You can easily determine the exit status of the command and capture all terminal output from the command.","title":"Invoking shell commands"},{"location":"advanced/actions/#using-kernelsystem","text":"Use the Ruby system method call to invoke a command string. This does not redirect stdin, stdout or stderr, so output formatting will be unaffected. It executes the command in a subshell. system ( 'cat pantograph/Pantfile' ) Upon command completion, the method returns true or false to indicate completion status. The $? global variable will also indicate the exit status of the command. system ( 'cat pantograph/Pantfile' ) UI . user_error! ( 'Could not execute command' ) unless $? . exitstatus == 0 If the command to be executed is not found, system will return nil , and $?.exitstatus will be nonzero.","title":"Using Kernel#system"},{"location":"advanced/actions/#using-backticks","text":"To capture the output of a command, enclose the command in backticks: pod_cmd = `which pod` UI . important ( '\"pod\" command not found' ) if pod_cmd . empty? Because you are capturing stdout, the command output will not appear at the terminal unless you log it using UI . Formatting may be lost when capturing command output. The entire output to stdout will be captured after the command returns. Output to stderr is not captured or redirected. The $? global variable will indicate the completion status of the command. If the command to be executed is not found, Errno::ENOENT is raised.","title":"Using backticks"},{"location":"advanced/actions/#using-the-sh-method","text":"You can also use the built-in sh method: sh ( 'pwd' ) This is called the same way in an action as in a Pantfile. This provides consistent logging of command output. All output to stdout and stderr is logged via UI . The sh method can accept a block, which will receive the Process::Status returned by the command, the complete output of the command, and an equivalent shell command upon completion of the command. sh ( \"ls', '-la\" ) do | status , result , command | unless status . success? UI . error ( \"Command #{ command } (pid #{ status . pid } ) failed with status #{ status . exitstatus } \" ) end UI . message ( \"Output is #{ result . inspect } \" ) end To be notified only when an error occurs, use the error_callback parameter (a Proc): success = true sh ( 'pwd' , error_callback : -> ( result ) { success = false }) UI . user_error ( \"Command failed\" ) unless success The result argument to the error_callback is the entire string output of the command. If the command to be executed is not found, Errno::ENOENT is raised without calling the block or error_callback . If an error_callback or block is not provided, and the command executes and returns an error, an exception is raised, and lane execution is terminated unless the exception is rescued. The exit status of the command will be available in $? . It is also available as the first argument to a block. The return value of the method is the output of the command, unless a block is given. Then the output is available within the block, and the return value of sh is the return value of the block. This enables usage like: if sh command { | s | s . success? } UI . success ( 'Command succeeded' ) else UI . error ( 'Command failed' ) end Anywhere other than an action or a Pantfile (e.g. in helper code), you can invoke this method as Actions.sh .","title":"Using the sh method"},{"location":"advanced/actions/#escaping-in-shell-commands","text":"Use shellwords to escape arguments to shell commands. `git commit -aqm #{ Shellwords . escape commit_message } ` system ( \"cat #{ path . shellescape } \" ) When using system or sh , pass a list of arguments instead of shell-escaping individual arguments. sh ( 'git' , 'commit' , '-aqm' , commit_message ) system ( 'cat' , path )","title":"Escaping in shell commands"},{"location":"advanced/actions/#calling-other-actions","text":"Some built-in utility actions, such as sh , may be used in custom actions (e.g., in plugins). It's not generally a good idea to call a complex action from another action. In particular: If you're calling one plugin action from another plugin action, you should probably refactor your plugin helper to be more easily called from all actions in the plugin. Avoid wrapping complex built-in actions like deliver and gym . There can be issues with one plugin depending on another plugin. Certain simple built-in utility actions may be used with other_action in your action, such as: other_action.git_add , other_action.git_commit . Think twice before calling an action from another action. There is often a better solution.","title":"Calling other actions"},{"location":"advanced/lanes/","text":".pantograph-setup { border-left: .4rem solid #00b0ff; border-bottom: .1rem solid rgba(0,176,255,.1); background-color: rgba(0,176,255,.1); padding: 15px; margin-bottom: 20px; font-weight: 200; } .pantograph-setup-wrapper { background-color: rgba(0,176,255,.05); } .pantograph-setup-wrapper[open] { padding-bottom: 1px; } .pantograph-setup-header { font-size: 20px; font-weight: 500; } .pantograph-setup-more-details { font-size: 18px; font-weight: 350; } New to pantograph? Click here to open the installation & setup instructions first 1) Install the latest Xcode command line tools xcode-select --install Install _pantograph_ using Homebrew & Rubygems # Install ruby via homebrew (macOS & linux only) brew install ruby # Set ruby in your shell path (example uses Zsh) echo 'export PATH=\"/usr/local/opt/ruby/bin:$PATH\"' >> ~/.zshrc # Using RubyGems gem install pantograph 3) Navigate to your project and run pantograph init More Details Lanes Passing Parameters To pass parameters from the command line to your lane, use the following syntax: pantograph [ lane ] key:value key2:value2 pantograph deploy submit:false build_number:24 To access those values, change your lane declaration to also include |options| before_all do | lane , options | # ... end before_each do | lane , options | # ... end lane :deploy do | options | # ... if options [ :submit ] # Only when submit is true end # ... git_tag_exists ( tag : options [ :build_number ] ) # ... end after_all do | lane , options | # ... end after_each do | lane , options | # ... end error do | lane , exception , options | if options [ :debug ] puts \"Hi :)\" end end Switching lanes To switch lanes while executing a lane, use the following code: lane :deploy do | options | # ... build ( release : true ) # that's the important bit artifactory # ... end lane :staging do | options | # ... build # it also works when you don't pass parameters artifactory # ... end lane :build do | options | scheme = ( options [ :release ] ? 'Release' : 'Staging' ) custom_build_actions ( scheme : scheme ) end pantograph takes care of all the magic for you. You can call lanes of the same platform or a general lane outside of the platform definition. Passing parameters is optional. Returning values Additionally, you can retrieve the return value. In Ruby, the last line of the lane definition is the return value. Here is an example: lane :deploy do | options | value = calculate ( value : 3 ) puts value # => 5 end lane :calculate do | options | # ... 2 + options [ :value ] # the last line will always be the return value end Stop executing a lane early The next keyword can be used to stop executing a lane before it reaches the end. lane :build do | options | if cached_build_available? UI . important ( 'Skipping build because a cached build is available!' ) next # skip doing the rest of this lane end gradle end private_lane :cached_build_available? do | options | # ... true end When next is used during a lane switch, control returns to the previous lane that was executing. lane :first_lane do | options | UI . message ( 'If you run: \"pantograph first_lane\"' ) UI . message ( \"You'll see this!\" ) second_lane UI . message ( 'As well as this!' ) end private_lane :second_lane do | options | next UI . message ( 'This will not be shown' ) end When you stop executing a lane early with next , any after_each and after_all blocks you have will still trigger as usual :+1: before_each and after_each blocks before_each blocks are called before any lane is called. This would include being called before each lane you've switched to. before_each do | lane , options | # ... end after_each blocks are called after any lane is called. This would include being called after each lane you've switched to. Just like after_all , after_each is not called if an error occurs. The error block should be used in this case. after_each do | lane , options | # ... end e.g. With this scenario, before_each and after_each would be called 4 times: before the deploy lane, before the switch to archive , sign , and upload , and after each of these lanes as well. lane :deploy do archive sign upload end lane :archive do # ... end lane :sign do # ... end lane :upload do # ... end Lane Properties It can be useful to dynamically access properties of the current lane. These are available in lane_context : lane_context [ SharedValues :: PLATFORM_NAME ] # Platform name, e.g. `:ios`, `:android` or empty (for root level lanes) lane_context [ SharedValues :: LANE_NAME ] # The name of the current lane preceded by the platform name (stays the same when switching lanes) lane_context [ SharedValues :: DEFAULT_PLATFORM ] # Default platform and environment variables: ENV [ 'PANTOGRAPH_PLATFORM_NAME' ] ENV [ 'PANTOGRAPH_LANE_NAME' ] Lane Context The different actions can communicate with each other using a shared hash. You can access this in your lanes with the following code: lane_context [ SharedValues :: VARIABLE_NAME_HERE ] Here are some examples: lane_context [ SharedValues :: BUILD_NUMBER ] # Generated by `increment_build_number` lane_context [ SharedValues :: VERSION_NUMBER ] # Generated by `increment_version_number` lane_context [ SharedValues :: SNAPSHOT_SCREENSHOTS_PATH ] # Generated by _snapshot_ lane_context [ SharedValues :: GRADLE_APK_OUTPUT_PATH ] # Generated by `gradle` lane_context [ SharedValues :: GRADLE_ALL_APK_OUTPUT_PATHS ] # Generated by `gradle` lane_context [ SharedValues :: GRADLE_FLAVOR ] # Generated by `gradle` lane_context [ SharedValues :: GRADLE_BUILD_TYPE ] # Generated by `gradle` To get information about available lane variables, run pantograph action [action_name] . Private lanes Sometimes you might have a lane that is used from different lanes, for example: lane :dev do # ... deploy ( environment : 'dev' ) # ... end lane :production do # ... deploy ( environment : 'production' ) # ... end lane :deploy do | options | # ... deploy_angular ( target : options [ :environment ] ) # ... end It probably doesn't make sense to execute the build lane directly using pantograph build . You can hide this lane using private_lane :build do | options | # ... end This will hide the lane from: pantograph lanes pantograph list pantograph docs And also, you can't call the private lane using pantograph build . The resulting private lane can only be called from another lane using the lane switching technology. Control configuration by lane and by platform In general, configuration files take only the first value given for a particular configuration item. That means that for an MyConfigFile like the following: app_identifier 'com.used.id' app_identifier 'com.ignored.id' the app_identfier will be \"com.used.id\" and the second value will be ignored. The for_lane and for_platform configuration blocks provide a limited exception to this rule. All configuration files (like: MyConfigFile) can use for_lane and for_platform blocks to control (and override) configuration values for those circumstances. for_lane blocks will be called when the name of lane invoked on the command line matches the one specified by the block. So, given a Screengrabfile like: locales [ 'en-US' , 'fr-FR' , 'ja-JP' ] for_lane :screenshots_english_only do locales [ 'en-US' ] end for_lane :screenshots_french_only do locales [ 'fr-FR' ] end locales will have the values ['en-US', 'fr-FR', 'ja-JP'] by default, but will only have one value when running the pantograph screenshots_english_only or pantograph screenshots_french_only .","title":"Lanes"},{"location":"advanced/lanes/#lanes","text":"","title":"Lanes"},{"location":"advanced/lanes/#passing-parameters","text":"To pass parameters from the command line to your lane, use the following syntax: pantograph [ lane ] key:value key2:value2 pantograph deploy submit:false build_number:24 To access those values, change your lane declaration to also include |options| before_all do | lane , options | # ... end before_each do | lane , options | # ... end lane :deploy do | options | # ... if options [ :submit ] # Only when submit is true end # ... git_tag_exists ( tag : options [ :build_number ] ) # ... end after_all do | lane , options | # ... end after_each do | lane , options | # ... end error do | lane , exception , options | if options [ :debug ] puts \"Hi :)\" end end","title":"Passing Parameters"},{"location":"advanced/lanes/#switching-lanes","text":"To switch lanes while executing a lane, use the following code: lane :deploy do | options | # ... build ( release : true ) # that's the important bit artifactory # ... end lane :staging do | options | # ... build # it also works when you don't pass parameters artifactory # ... end lane :build do | options | scheme = ( options [ :release ] ? 'Release' : 'Staging' ) custom_build_actions ( scheme : scheme ) end pantograph takes care of all the magic for you. You can call lanes of the same platform or a general lane outside of the platform definition. Passing parameters is optional.","title":"Switching lanes"},{"location":"advanced/lanes/#returning-values","text":"Additionally, you can retrieve the return value. In Ruby, the last line of the lane definition is the return value. Here is an example: lane :deploy do | options | value = calculate ( value : 3 ) puts value # => 5 end lane :calculate do | options | # ... 2 + options [ :value ] # the last line will always be the return value end","title":"Returning values"},{"location":"advanced/lanes/#stop-executing-a-lane-early","text":"The next keyword can be used to stop executing a lane before it reaches the end. lane :build do | options | if cached_build_available? UI . important ( 'Skipping build because a cached build is available!' ) next # skip doing the rest of this lane end gradle end private_lane :cached_build_available? do | options | # ... true end When next is used during a lane switch, control returns to the previous lane that was executing. lane :first_lane do | options | UI . message ( 'If you run: \"pantograph first_lane\"' ) UI . message ( \"You'll see this!\" ) second_lane UI . message ( 'As well as this!' ) end private_lane :second_lane do | options | next UI . message ( 'This will not be shown' ) end When you stop executing a lane early with next , any after_each and after_all blocks you have will still trigger as usual :+1:","title":"Stop executing a lane early"},{"location":"advanced/lanes/#before_each-and-after_each-blocks","text":"before_each blocks are called before any lane is called. This would include being called before each lane you've switched to. before_each do | lane , options | # ... end after_each blocks are called after any lane is called. This would include being called after each lane you've switched to. Just like after_all , after_each is not called if an error occurs. The error block should be used in this case. after_each do | lane , options | # ... end e.g. With this scenario, before_each and after_each would be called 4 times: before the deploy lane, before the switch to archive , sign , and upload , and after each of these lanes as well. lane :deploy do archive sign upload end lane :archive do # ... end lane :sign do # ... end lane :upload do # ... end","title":"before_each and after_each blocks"},{"location":"advanced/lanes/#lane-properties","text":"It can be useful to dynamically access properties of the current lane. These are available in lane_context : lane_context [ SharedValues :: PLATFORM_NAME ] # Platform name, e.g. `:ios`, `:android` or empty (for root level lanes) lane_context [ SharedValues :: LANE_NAME ] # The name of the current lane preceded by the platform name (stays the same when switching lanes) lane_context [ SharedValues :: DEFAULT_PLATFORM ] # Default platform and environment variables: ENV [ 'PANTOGRAPH_PLATFORM_NAME' ] ENV [ 'PANTOGRAPH_LANE_NAME' ]","title":"Lane Properties"},{"location":"advanced/lanes/#lane-context","text":"The different actions can communicate with each other using a shared hash. You can access this in your lanes with the following code: lane_context [ SharedValues :: VARIABLE_NAME_HERE ] Here are some examples: lane_context [ SharedValues :: BUILD_NUMBER ] # Generated by `increment_build_number` lane_context [ SharedValues :: VERSION_NUMBER ] # Generated by `increment_version_number` lane_context [ SharedValues :: SNAPSHOT_SCREENSHOTS_PATH ] # Generated by _snapshot_ lane_context [ SharedValues :: GRADLE_APK_OUTPUT_PATH ] # Generated by `gradle` lane_context [ SharedValues :: GRADLE_ALL_APK_OUTPUT_PATHS ] # Generated by `gradle` lane_context [ SharedValues :: GRADLE_FLAVOR ] # Generated by `gradle` lane_context [ SharedValues :: GRADLE_BUILD_TYPE ] # Generated by `gradle` To get information about available lane variables, run pantograph action [action_name] .","title":"Lane Context"},{"location":"advanced/lanes/#private-lanes","text":"Sometimes you might have a lane that is used from different lanes, for example: lane :dev do # ... deploy ( environment : 'dev' ) # ... end lane :production do # ... deploy ( environment : 'production' ) # ... end lane :deploy do | options | # ... deploy_angular ( target : options [ :environment ] ) # ... end It probably doesn't make sense to execute the build lane directly using pantograph build . You can hide this lane using private_lane :build do | options | # ... end This will hide the lane from: pantograph lanes pantograph list pantograph docs And also, you can't call the private lane using pantograph build . The resulting private lane can only be called from another lane using the lane switching technology.","title":"Private lanes"},{"location":"advanced/lanes/#control-configuration-by-lane-and-by-platform","text":"In general, configuration files take only the first value given for a particular configuration item. That means that for an MyConfigFile like the following: app_identifier 'com.used.id' app_identifier 'com.ignored.id' the app_identfier will be \"com.used.id\" and the second value will be ignored. The for_lane and for_platform configuration blocks provide a limited exception to this rule. All configuration files (like: MyConfigFile) can use for_lane and for_platform blocks to control (and override) configuration values for those circumstances. for_lane blocks will be called when the name of lane invoked on the command line matches the one specified by the block. So, given a Screengrabfile like: locales [ 'en-US' , 'fr-FR' , 'ja-JP' ] for_lane :screenshots_english_only do locales [ 'en-US' ] end for_lane :screenshots_french_only do locales [ 'fr-FR' ] end locales will have the values ['en-US', 'fr-FR', 'ja-JP'] by default, but will only have one value when running the pantograph screenshots_english_only or pantograph screenshots_french_only .","title":"Control configuration by lane and by platform"},{"location":"advanced/other/","text":".pantograph-setup { border-left: .4rem solid #00b0ff; border-bottom: .1rem solid rgba(0,176,255,.1); background-color: rgba(0,176,255,.1); padding: 15px; margin-bottom: 20px; font-weight: 200; } .pantograph-setup-wrapper { background-color: rgba(0,176,255,.05); } .pantograph-setup-wrapper[open] { padding-bottom: 1px; } .pantograph-setup-header { font-size: 20px; font-weight: 500; } .pantograph-setup-more-details { font-size: 18px; font-weight: 350; } New to pantograph? Click here to open the installation & setup instructions first 1) Install the latest Xcode command line tools xcode-select --install Install _pantograph_ using Homebrew & Rubygems # Install ruby via homebrew (macOS & linux only) brew install ruby # Set ruby in your shell path (example uses Zsh) echo 'export PATH=\"/usr/local/opt/ruby/bin:$PATH\"' >> ~/.zshrc # Using RubyGems gem install pantograph 3) Navigate to your project and run pantograph init More Details Other Other advanced topics that didn't fit anywhere else: Environment Variables You can define environment variables in a .env or .env.default file in the same directory as your Pantfile . Environment variables are loaded using dotenv . Here's an example: POM_PATH = pom.xml ARTIFACTORY_API_TOKEN = your-artifactory-api-token pantograph also has a --env option that allows loading of environment specific dotenv files. .env and .env.default will be loaded before environment specific dotenv files are loaded. The naming convention for environment specific dotenv files is .env.<environment> For example, pantograph <lane-name> --env development will load .env , .env.default , and .env.development Alternatively, as environment variables are not a pantograph specific thing, you can also use standard methods to set them: MY_USER = 'johnny@example.com' pantograph test or export MY_USER = 'johnny@example.com' pantograph test Although it kind of defeats the purpose of using them in the first place (not to have their content in any files), you can also set them in your Pantfile : ENV [ 'MY_USER' ] = 'johnny@example.com'","title":"Other"},{"location":"advanced/other/#other","text":"Other advanced topics that didn't fit anywhere else:","title":"Other"},{"location":"advanced/other/#environment-variables","text":"You can define environment variables in a .env or .env.default file in the same directory as your Pantfile . Environment variables are loaded using dotenv . Here's an example: POM_PATH = pom.xml ARTIFACTORY_API_TOKEN = your-artifactory-api-token pantograph also has a --env option that allows loading of environment specific dotenv files. .env and .env.default will be loaded before environment specific dotenv files are loaded. The naming convention for environment specific dotenv files is .env.<environment> For example, pantograph <lane-name> --env development will load .env , .env.default , and .env.development Alternatively, as environment variables are not a pantograph specific thing, you can also use standard methods to set them: MY_USER = 'johnny@example.com' pantograph test or export MY_USER = 'johnny@example.com' pantograph test Although it kind of defeats the purpose of using them in the first place (not to have their content in any files), you can also set them in your Pantfile : ENV [ 'MY_USER' ] = 'johnny@example.com'","title":"Environment Variables"},{"location":"advanced/pantograph/","text":".pantograph-setup { border-left: .4rem solid #00b0ff; border-bottom: .1rem solid rgba(0,176,255,.1); background-color: rgba(0,176,255,.1); padding: 15px; margin-bottom: 20px; font-weight: 200; } .pantograph-setup-wrapper { background-color: rgba(0,176,255,.05); } .pantograph-setup-wrapper[open] { padding-bottom: 1px; } .pantograph-setup-header { font-size: 20px; font-weight: 500; } .pantograph-setup-more-details { font-size: 18px; font-weight: 350; } New to pantograph? Click here to open the installation & setup instructions first 1) Install the latest Xcode command line tools xcode-select --install Install _pantograph_ using Homebrew & Rubygems # Install ruby via homebrew (macOS & linux only) brew install ruby # Set ruby in your shell path (example uses Zsh) echo 'export PATH=\"/usr/local/opt/ruby/bin:$PATH\"' >> ~/.zshrc # Using RubyGems gem install pantograph 3) Navigate to your project and run pantograph init More Details pantograph Configuring pantograph Skip update check when launching pantograph You can set the environment variable PANTOGRAPH_SKIP_UPDATE_CHECK to skip the update check. Hide changelog information at the end of running pantograph You can set the environment variable PANTOGRAPH_HIDE_CHANGELOG to hide the detailed changelog information when new pantograph versions are available. Output environment variables To hide timestamps in each row, set the PANTOGRAPH_HIDE_TIMESTAMP environment variable to true (overruled by --verbose ). To disable output formatting, set the PANTOGRAPH_DISABLE_OUTPUT_FORMAT environment variable to true. How pantograph works Priorities of parameters and options The order in which pantograph tools take their values from CLI parameter (e.g. gym --scheme Example ) or Pantfile (e.g. gym(scheme: 'Example') ) Environment variable (e.g. GYM_SCHEME ) Tool specific config file (e.g. Gymfile containing scheme 'Example' ) Default value (which might be taken from the Appfile , e.g. app_identifier from the Appfile ) If this value is required, you'll be asked for it (e.g. you have multiple schemes, you'll be asked for it) Directory behavior pantograph was designed in a way that you can run pantograph from both the root directory of the project, and from the ./pantograph sub-folder. Take this example Pantfile on the path pantograph/Pantfile sh \"pwd\" # => \"[root]/pantograph\" puts Dir . pwd # => \"[root]/pantograph\" lane :something do sh \"pwd\" # => \"[root]/pantograph\" puts Dir . pwd # => \"[root]/pantograph\" my_action end The implementation of my_action looks like this: def run ( params ) puts Dir . pwd # => \"[root]\" end Notice how every action and every plugin's code runs in the root of the project, while all user code from the Pantfile runs inside the ./pantograph directory. This is important to consider when migrating existing code from your Pantfile into your own action or plugin. To change the directory manually you can use standard Ruby blocks: Dir . chdir ( \"..\" ) do # code here runs in the parent directory end This behavior isn't great, and has been like this since the very early days of pantograph . As much as we'd like to change it, there is no good way to do so, without breaking thousands of production setups, so we decided to keep it as is for now. Passing parameters to pantograph command line tools pantograph contains several command line tools, e.g. pantograph deliver or pantograph snapshot . To pass parameters to these tools, append the option names and values as you would for a normal shell command: pantograph [ tool ] -- [ option ]=[ value ] pantograph deliver --skip_screenshots = true pantograph snapshot --screenshots_path = xxxxx --schema = xxxx","title":"pantograph"},{"location":"advanced/pantograph/#pantograph","text":"","title":"pantograph"},{"location":"advanced/pantograph/#configuring-pantograph","text":"","title":"Configuring pantograph"},{"location":"advanced/pantograph/#skip-update-check-when-launching-pantograph","text":"You can set the environment variable PANTOGRAPH_SKIP_UPDATE_CHECK to skip the update check.","title":"Skip update check when launching pantograph"},{"location":"advanced/pantograph/#hide-changelog-information-at-the-end-of-running-pantograph","text":"You can set the environment variable PANTOGRAPH_HIDE_CHANGELOG to hide the detailed changelog information when new pantograph versions are available.","title":"Hide changelog information at the end of running pantograph"},{"location":"advanced/pantograph/#output-environment-variables","text":"To hide timestamps in each row, set the PANTOGRAPH_HIDE_TIMESTAMP environment variable to true (overruled by --verbose ). To disable output formatting, set the PANTOGRAPH_DISABLE_OUTPUT_FORMAT environment variable to true.","title":"Output environment variables"},{"location":"advanced/pantograph/#how-pantograph-works","text":"","title":"How pantograph works"},{"location":"advanced/pantograph/#priorities-of-parameters-and-options","text":"The order in which pantograph tools take their values from CLI parameter (e.g. gym --scheme Example ) or Pantfile (e.g. gym(scheme: 'Example') ) Environment variable (e.g. GYM_SCHEME ) Tool specific config file (e.g. Gymfile containing scheme 'Example' ) Default value (which might be taken from the Appfile , e.g. app_identifier from the Appfile ) If this value is required, you'll be asked for it (e.g. you have multiple schemes, you'll be asked for it)","title":"Priorities of parameters and options"},{"location":"advanced/pantograph/#directory-behavior","text":"pantograph was designed in a way that you can run pantograph from both the root directory of the project, and from the ./pantograph sub-folder. Take this example Pantfile on the path pantograph/Pantfile sh \"pwd\" # => \"[root]/pantograph\" puts Dir . pwd # => \"[root]/pantograph\" lane :something do sh \"pwd\" # => \"[root]/pantograph\" puts Dir . pwd # => \"[root]/pantograph\" my_action end The implementation of my_action looks like this: def run ( params ) puts Dir . pwd # => \"[root]\" end Notice how every action and every plugin's code runs in the root of the project, while all user code from the Pantfile runs inside the ./pantograph directory. This is important to consider when migrating existing code from your Pantfile into your own action or plugin. To change the directory manually you can use standard Ruby blocks: Dir . chdir ( \"..\" ) do # code here runs in the parent directory end This behavior isn't great, and has been like this since the very early days of pantograph . As much as we'd like to change it, there is no good way to do so, without breaking thousands of production setups, so we decided to keep it as is for now.","title":"Directory behavior"},{"location":"advanced/pantograph/#passing-parameters-to-pantograph-command-line-tools","text":"pantograph contains several command line tools, e.g. pantograph deliver or pantograph snapshot . To pass parameters to these tools, append the option names and values as you would for a normal shell command: pantograph [ tool ] -- [ option ]=[ value ] pantograph deliver --skip_screenshots = true pantograph snapshot --screenshots_path = xxxxx --schema = xxxx","title":"Passing parameters to pantograph command line tools"},{"location":"best-practices/continuous-integration/","text":".pantograph-setup { border-left: .4rem solid #00b0ff; border-bottom: .1rem solid rgba(0,176,255,.1); background-color: rgba(0,176,255,.1); padding: 15px; margin-bottom: 20px; font-weight: 200; } .pantograph-setup-wrapper { background-color: rgba(0,176,255,.05); } .pantograph-setup-wrapper[open] { padding-bottom: 1px; } .pantograph-setup-header { font-size: 20px; font-weight: 500; } .pantograph-setup-more-details { font-size: 18px; font-weight: 350; } New to pantograph? Click here to open the installation & setup instructions first 1) Install the latest Xcode command line tools xcode-select --install Install _pantograph_ using Homebrew & Rubygems # Install ruby via homebrew (macOS & linux only) brew install ruby # Set ruby in your shell path (example uses Zsh) echo 'export PATH=\"/usr/local/opt/ruby/bin:$PATH\"' >> ~/.zshrc # Using RubyGems gem install pantograph 3) Navigate to your project and run pantograph init More Details Continuous Integration pantograph works very well in Continuous Integration setups. It for example automatically generates a JUnit report for you that allows Continuous Integration systems, like Jenkins , access the results of your deployment. Integrations Environment variables to set Integrations Multiple CI products and services offer integrations with pantograph: Jenkins Azure DevOps (formerly known as: Visual Studio Team Services) Environment variables to set Most setups will need the following environment variables - LANG and LC_ALL : These set up the locale your shell and all the commands you execute run at. pantograph needs these to be set to an UTF-8 locale to work correctly, for example en_US.UTF-8 . Many CI systems come with a locale that is unset or set to ASCII by default, so make sure to double-check whether yours is set correctly. Moved // Closure-wrapped for security. (function () { var anchorMap = { \"jenkins-integration\": \"/best-practices/continuous-integration/jenkins/\", // \"circleci-integration\": \"/best-practices/continuous-integration/circle-ci/\", // \"travis-integration\": \"/best-practices/continuous-integration/travis/\", // \"bamboo-integration\": \"/best-practices/continuous-integration/bamboo/\", // \"gitlab-ci-integration\": \"/best-practices/continuous-integration/gitlab/\", \"visual-studio-team-services\": \"/best-practices/continuous-integration/azure-devops/\", // \"nevercode-integration\": \"/best-practices/continuous-integration/nevercode/\", } /* * Best practice for extracting hashes: * https://stackoverflow.com/a/10076097/151365 */ var hash = window.location.hash.substring(1); if (hash) { /* * Best practice for javascript redirects: * https://stackoverflow.com/a/506004/151365 */ if (anchorMap[hash]) { link = anchorMap[hash] + '#' + hash; window.location.replace(link); } } })(); The following tool- and service-specific content was moved: Jenkins Integration This content was moved and now lives here . Visual Studio Team Services This content was moved and now lives here .","title":"Continuous Integration"},{"location":"best-practices/continuous-integration/#continuous-integration","text":"pantograph works very well in Continuous Integration setups. It for example automatically generates a JUnit report for you that allows Continuous Integration systems, like Jenkins , access the results of your deployment. Integrations Environment variables to set","title":"Continuous Integration"},{"location":"best-practices/continuous-integration/#integrations","text":"Multiple CI products and services offer integrations with pantograph: Jenkins Azure DevOps (formerly known as: Visual Studio Team Services)","title":"Integrations"},{"location":"best-practices/continuous-integration/#environment-variables-to-set","text":"Most setups will need the following environment variables - LANG and LC_ALL : These set up the locale your shell and all the commands you execute run at. pantograph needs these to be set to an UTF-8 locale to work correctly, for example en_US.UTF-8 . Many CI systems come with a locale that is unset or set to ASCII by default, so make sure to double-check whether yours is set correctly.","title":"Environment variables to set"},{"location":"best-practices/continuous-integration/#moved","text":"// Closure-wrapped for security. (function () { var anchorMap = { \"jenkins-integration\": \"/best-practices/continuous-integration/jenkins/\", // \"circleci-integration\": \"/best-practices/continuous-integration/circle-ci/\", // \"travis-integration\": \"/best-practices/continuous-integration/travis/\", // \"bamboo-integration\": \"/best-practices/continuous-integration/bamboo/\", // \"gitlab-ci-integration\": \"/best-practices/continuous-integration/gitlab/\", \"visual-studio-team-services\": \"/best-practices/continuous-integration/azure-devops/\", // \"nevercode-integration\": \"/best-practices/continuous-integration/nevercode/\", } /* * Best practice for extracting hashes: * https://stackoverflow.com/a/10076097/151365 */ var hash = window.location.hash.substring(1); if (hash) { /* * Best practice for javascript redirects: * https://stackoverflow.com/a/506004/151365 */ if (anchorMap[hash]) { link = anchorMap[hash] + '#' + hash; window.location.replace(link); } } })(); The following tool- and service-specific content was moved:","title":"Moved"},{"location":"best-practices/continuous-integration/#jenkins-integration","text":"This content was moved and now lives here .","title":"Jenkins Integration"},{"location":"best-practices/continuous-integration/#visual-studio-team-services","text":"This content was moved and now lives here .","title":"Visual Studio Team Services"},{"location":"best-practices/keys/","text":"pantograph keys This guide will show you the best ways to store and use your keys and sensitive secrets for services like Crashlytics, Slack, etc. In your Pantfile lane :notify do slack ( slack_url : 'https://hooks.slack.com/services/T03NA19Q5/...' ) end or if you want to only define the keys once and use it multiple times ENV [ 'SLACK_URL' ] = 'https://hooks.slack.com/services/T03NA19Q5/...' lane :notify do slack end This is the most straight forward and easiest solution, but might cause a few issues: If you ever decide to open source your application you'll have to make sure to remove the keys from your git history If your keys got invalidated for whatever reason and you decide to rollback your code base to an earlier stage the keys will also be rolled back To get the name of the available environment variables, run pantograph action [action_name] . Bash Profile To not store your keys in git , you can pass all parameters of all actions using environment variables. You can edit your ~/.bash_profile to include something like export SLACK_URL = 'https://hooks.slack.com/services/T03NA19Q5/...' If you use a different shell (e.g. zshell ) you'll need to edit ~/.zshrc instead. After editing the .bash_profile you need to either re-open your terminal session or run source ~/.bash_profile . Disadvantages Every terminal tool you run gets access to your environment variables. You have to edit your bash profile on every computer you want to run pantograph from The bash profile isn't automatically loaded by some CI-systems like Jenkins To get the name of the available environment variables, run pantograph action [action_name] . dotenv dotenv is a system to store your environment in a file that is project specific. Basically you have a hidden file in your project containing all the environment variables for your project. You can store a default configuration in .env.default which will be loaded by pantograph automatically. SLACK_URL = \"https://hooks.slack.com/services/T03NA19Q5/...\" You might want different configurations depending on your environment. pantograph notify --env development and store the configuration in .env.development with all keys for the development environment. Install gem install dotenv or add dotenv to your Gemfile . More information about the recommended way to install gems . To get the name of the available environment variables, run pantograph action [action_name] .","title":"Keys"},{"location":"best-practices/keys/#pantograph-keys","text":"This guide will show you the best ways to store and use your keys and sensitive secrets for services like Crashlytics, Slack, etc.","title":"pantograph keys"},{"location":"best-practices/keys/#in-your-pantfile","text":"lane :notify do slack ( slack_url : 'https://hooks.slack.com/services/T03NA19Q5/...' ) end or if you want to only define the keys once and use it multiple times ENV [ 'SLACK_URL' ] = 'https://hooks.slack.com/services/T03NA19Q5/...' lane :notify do slack end This is the most straight forward and easiest solution, but might cause a few issues: If you ever decide to open source your application you'll have to make sure to remove the keys from your git history If your keys got invalidated for whatever reason and you decide to rollback your code base to an earlier stage the keys will also be rolled back To get the name of the available environment variables, run pantograph action [action_name] .","title":"In your Pantfile"},{"location":"best-practices/keys/#bash-profile","text":"To not store your keys in git , you can pass all parameters of all actions using environment variables. You can edit your ~/.bash_profile to include something like export SLACK_URL = 'https://hooks.slack.com/services/T03NA19Q5/...' If you use a different shell (e.g. zshell ) you'll need to edit ~/.zshrc instead. After editing the .bash_profile you need to either re-open your terminal session or run source ~/.bash_profile . Disadvantages Every terminal tool you run gets access to your environment variables. You have to edit your bash profile on every computer you want to run pantograph from The bash profile isn't automatically loaded by some CI-systems like Jenkins To get the name of the available environment variables, run pantograph action [action_name] .","title":"Bash Profile"},{"location":"best-practices/keys/#dotenv","text":"dotenv is a system to store your environment in a file that is project specific. Basically you have a hidden file in your project containing all the environment variables for your project. You can store a default configuration in .env.default which will be loaded by pantograph automatically. SLACK_URL = \"https://hooks.slack.com/services/T03NA19Q5/...\" You might want different configurations depending on your environment. pantograph notify --env development and store the configuration in .env.development with all keys for the development environment. Install gem install dotenv or add dotenv to your Gemfile . More information about the recommended way to install gems . To get the name of the available environment variables, run pantograph action [action_name] .","title":"dotenv"},{"location":"best-practices/source-control/","text":"Source Control It is recommended that you keep pantograph configuration files in the repository. You may want to add the following lines to the repository's .gitignore (Git) file to exclude generated and temporary files: # pantograph specific **/pantograph/report.xml # generic output reports **/pantograph/reports # generic testing temporary files **/pantograph/test_output It is also recommended that you avoid storing screenshots or other delivery artifacts in the repository. Instead, use pantograph to re-generate whenever needed.","title":"Source Control"},{"location":"best-practices/source-control/#source-control","text":"It is recommended that you keep pantograph configuration files in the repository. You may want to add the following lines to the repository's .gitignore (Git) file to exclude generated and temporary files: # pantograph specific **/pantograph/report.xml # generic output reports **/pantograph/reports # generic testing temporary files **/pantograph/test_output It is also recommended that you avoid storing screenshots or other delivery artifacts in the repository. Instead, use pantograph to re-generate whenever needed.","title":"Source Control"},{"location":"best-practices/continuous-integration/azure-devops/","text":"Azure DevOps (formerly known as: Visual Studio Team Services) TODO Getting Started TODO Perform the following steps to automate releasing updates from a VSTS build or release definition: Go to your VSTS or TFS project, click on the Build tab, and create a new build definition (the \"+\" icon) that is hooked up to your project's appropriate source repo Click Add build step... and select the necessary tasks to generate your release assets (e.g. Gulp, Cordova Build) More Information TODO","title":"Azure DevOps Integration"},{"location":"best-practices/continuous-integration/azure-devops/#azure-devops-formerly-known-as-visual-studio-team-services","text":"TODO","title":"Azure DevOps (formerly known as: Visual Studio Team Services)"},{"location":"best-practices/continuous-integration/azure-devops/#getting-started","text":"TODO Perform the following steps to automate releasing updates from a VSTS build or release definition: Go to your VSTS or TFS project, click on the Build tab, and create a new build definition (the \"+\" icon) that is hooked up to your project's appropriate source repo Click Add build step... and select the necessary tasks to generate your release assets (e.g. Gulp, Cordova Build)","title":"Getting Started"},{"location":"best-practices/continuous-integration/azure-devops/#more-information","text":"TODO","title":"More Information"},{"location":"best-practices/continuous-integration/bamboo/","text":"Bamboo Integration Repository setup In bamboo under Linked Repositories (where you configure your git repo) under Advanced Settings is an option called Exclude changesets This dialog will allow you to enter a regular expression that if a commit matches, a build will not be triggered. For example, if your Pantfile is configured to make a commit message in the style of Build Version bump by pantograph to Version [ 0 .3 ] Build [ 8 ] Then you could use the following regex to ignore these commits ^.*Build Version bump by pantograph.*$ Setting repository remote By default bamboo will do an anonymous shallow clone of the repo. This will not preserve the git remote information nor the list of tags. If you are using bamboo to create commits you may want to use a code block similar to the following: # In prep for eventually committing a version/build bump - set the git params sh ( 'git config user.name \"<COMMITTER USERNAME>\"' ) sh ( 'git config user.email <COMITTER EMAIL>' ) # Bamboo does an anonymous checkout so in order to update the build versions must set the git repo URL git_remote_cmd = 'git remote set-url origin ' + ENV [ 'bamboo_repository_git_repositoryUrl' ] sh ( git_remote_cmd ) Speeding up build times with carthage Carthage is a wonderful dependency manager but once you are start using a large number of frameworks, things can start to slow down, especially if your CI server has to run carthage EVERY time you check in a small line of code. One way to make build times faster is to break your work up into two separate build plans ( this can get even more funky if you start having multiple branches ) The general idea is to make a build plan: Project - Artifacts that builds the Carthage directory and stores it as a shared artifact. Then you create a second build plan Project - Pantograph that pulls down the Carthage directory and runs pantograph . Artifact Plan Use a simple setup to create this build plan. First off you want to make sure this plan is manually triggered only - because you only need to run it whenever the Cartfile changes as opposed to after ever single commit. It could also be on a nightly build perhaps if you desire. Stages / Jobs / Tasks This plan consists of 1 Job, 1 Stage and 2 Tasks Task 1: Source Code Checkout Task 2: Script ( carthage update ) Artifact definitions Create a shared artifact with the following info: Name: CarthageFolder Location: (leave blank) Copy Pattern: Carthage/Build/** Optional : You may want to automatically make the pantograph plan trigger whenever this plan is built pantograph plan When configuring pantograph to run in this setup you need to make sure that you are not calling either: reset_git_repo ( force : true ) or ensure_git_status_clean as these calls will either fail the build or delete the Carthage directory. Additionally you want to remove any carthage tasks from inside your Pantfile as carthage is now happening externally to the build. Build plan setup What this build plan does is it checks out the source code, then it downloads the entire Carthage/Build/ directory into your local project - which is exactly what would be created from carthage bootstrap and then it runs pantograph Task 1: Source Code Checkout Task 2: Artifact Download Task 3: pantograph","title":"Bamboo Integration"},{"location":"best-practices/continuous-integration/bamboo/#bamboo-integration","text":"","title":"Bamboo Integration"},{"location":"best-practices/continuous-integration/bamboo/#repository-setup","text":"In bamboo under Linked Repositories (where you configure your git repo) under Advanced Settings is an option called Exclude changesets This dialog will allow you to enter a regular expression that if a commit matches, a build will not be triggered. For example, if your Pantfile is configured to make a commit message in the style of Build Version bump by pantograph to Version [ 0 .3 ] Build [ 8 ] Then you could use the following regex to ignore these commits ^.*Build Version bump by pantograph.*$","title":"Repository setup"},{"location":"best-practices/continuous-integration/bamboo/#setting-repository-remote","text":"By default bamboo will do an anonymous shallow clone of the repo. This will not preserve the git remote information nor the list of tags. If you are using bamboo to create commits you may want to use a code block similar to the following: # In prep for eventually committing a version/build bump - set the git params sh ( 'git config user.name \"<COMMITTER USERNAME>\"' ) sh ( 'git config user.email <COMITTER EMAIL>' ) # Bamboo does an anonymous checkout so in order to update the build versions must set the git repo URL git_remote_cmd = 'git remote set-url origin ' + ENV [ 'bamboo_repository_git_repositoryUrl' ] sh ( git_remote_cmd )","title":"Setting repository remote"},{"location":"best-practices/continuous-integration/bamboo/#speeding-up-build-times-with-carthage","text":"Carthage is a wonderful dependency manager but once you are start using a large number of frameworks, things can start to slow down, especially if your CI server has to run carthage EVERY time you check in a small line of code. One way to make build times faster is to break your work up into two separate build plans ( this can get even more funky if you start having multiple branches ) The general idea is to make a build plan: Project - Artifacts that builds the Carthage directory and stores it as a shared artifact. Then you create a second build plan Project - Pantograph that pulls down the Carthage directory and runs pantograph .","title":"Speeding up build times with carthage"},{"location":"best-practices/continuous-integration/bamboo/#artifact-plan","text":"Use a simple setup to create this build plan. First off you want to make sure this plan is manually triggered only - because you only need to run it whenever the Cartfile changes as opposed to after ever single commit. It could also be on a nightly build perhaps if you desire.","title":"Artifact Plan"},{"location":"best-practices/continuous-integration/bamboo/#stages-jobs-tasks","text":"This plan consists of 1 Job, 1 Stage and 2 Tasks Task 1: Source Code Checkout Task 2: Script ( carthage update )","title":"Stages / Jobs / Tasks"},{"location":"best-practices/continuous-integration/bamboo/#artifact-definitions","text":"Create a shared artifact with the following info: Name: CarthageFolder Location: (leave blank) Copy Pattern: Carthage/Build/** Optional : You may want to automatically make the pantograph plan trigger whenever this plan is built","title":"Artifact definitions"},{"location":"best-practices/continuous-integration/bamboo/#pantograph-plan","text":"When configuring pantograph to run in this setup you need to make sure that you are not calling either: reset_git_repo ( force : true ) or ensure_git_status_clean as these calls will either fail the build or delete the Carthage directory. Additionally you want to remove any carthage tasks from inside your Pantfile as carthage is now happening externally to the build.","title":"pantograph plan"},{"location":"best-practices/continuous-integration/bamboo/#build-plan-setup","text":"What this build plan does is it checks out the source code, then it downloads the entire Carthage/Build/ directory into your local project - which is exactly what would be created from carthage bootstrap and then it runs pantograph Task 1: Source Code Checkout Task 2: Artifact Download Task 3: pantograph","title":"Build plan setup"},{"location":"best-practices/continuous-integration/circle-ci/","text":"CircleCI Integration To run pantograph on CircleCI, first create a Gemfile in the root of your project with the following content: # Gemfile source \"https://rubygems.org\" gem \"pantograph\" and run gem install bundler && bundle update This will create a Gemfile.lock that defines all Ruby dependencies. Make sure to commit both files to version control. Next, add the following to your Pantfile : # pantograph/Pantfile ... platform :ios do before_all do setup_circle_ci end ... end The setup_circle_ci pantograph action will perform the following actions: Create a new temporary keychain for use with match (see the CircleCI code signing doc for more details). Switch match to readonly mode to make sure CI does not create new code signing certificates or provisioning profiles. Set up log and test result paths to be easily collectible. Next, create a .circleci directory in your project and add a .circleci/config.yml with the following content: # .circleci/config.yml version: 2 jobs: build: macos: xcode: \"9.0\" working_directory: /Users/distiller/project environment: OUTPUT_DIR: output PANTOGRAPH_LANE: test shell: /bin/bash --login -o pipefail steps: - checkout - restore_cache: key: 1-gems- {{ checksum \"Gemfile.lock\" }} - run: bundle check || bundle install --path vendor/bundle - save_cache: key: 1-gems- {{ checksum \"Gemfile.lock\" }} paths: - vendor/bundle - run: name: pantograph command: bundle exec pantograph $PANTOGRAPH_LANE - store_artifacts: path: output - store_test_results: path: output/scan This will do the following: Create and use a Ruby gems cache. Run the test lane on all pushes. Collect Junit test results and store log output in the Artifacts tab. Check out the CircleCI iOS doc for more detailed examples of using pantograph on CircleCI.","title":"CircleCI Integration"},{"location":"best-practices/continuous-integration/circle-ci/#circleci-integration","text":"To run pantograph on CircleCI, first create a Gemfile in the root of your project with the following content: # Gemfile source \"https://rubygems.org\" gem \"pantograph\" and run gem install bundler && bundle update This will create a Gemfile.lock that defines all Ruby dependencies. Make sure to commit both files to version control. Next, add the following to your Pantfile : # pantograph/Pantfile ... platform :ios do before_all do setup_circle_ci end ... end The setup_circle_ci pantograph action will perform the following actions: Create a new temporary keychain for use with match (see the CircleCI code signing doc for more details). Switch match to readonly mode to make sure CI does not create new code signing certificates or provisioning profiles. Set up log and test result paths to be easily collectible. Next, create a .circleci directory in your project and add a .circleci/config.yml with the following content: # .circleci/config.yml version: 2 jobs: build: macos: xcode: \"9.0\" working_directory: /Users/distiller/project environment: OUTPUT_DIR: output PANTOGRAPH_LANE: test shell: /bin/bash --login -o pipefail steps: - checkout - restore_cache: key: 1-gems- {{ checksum \"Gemfile.lock\" }} - run: bundle check || bundle install --path vendor/bundle - save_cache: key: 1-gems- {{ checksum \"Gemfile.lock\" }} paths: - vendor/bundle - run: name: pantograph command: bundle exec pantograph $PANTOGRAPH_LANE - store_artifacts: path: output - store_test_results: path: output/scan This will do the following: Create and use a Ruby gems cache. Run the test lane on all pushes. Collect Junit test results and store log output in the Artifacts tab. Check out the CircleCI iOS doc for more detailed examples of using pantograph on CircleCI.","title":"CircleCI Integration"},{"location":"best-practices/continuous-integration/gitlab/","text":"GitLab CI Integration Use GitLab Runner running on a macOS machine to build using pantograph. Repository setup First create a Gemfile in the root of your project with the following content: source \"https://rubygems.org\" gem \"pantograph\" Add a .gitlab-ci.yml file to trigger pantograph . stages : - unit_tests - test_flight variables : LC_ALL : \"en_US.UTF-8\" LANG : \"en_US.UTF-8\" before_script : - gem install bundler - bundle install unit_tests : dependencies : [] stage : unit_tests artifacts : paths : - pantograph / screenshots - pantograph / logs script : - pantograph tests tags : - ios test_flight_build : dependencies : [] stage : test_flight artifacts : paths : - pantograph / screenshots - pantograph / logs script : - pantograph beta tags : - ios only : - /^ release - . * $ / - master See the .gitlab-ci.yml documentation for more information on how this file works. Setting up the lanes You should have a lane - in this example called beta - which should do the usual, match , gym , pilot , to distribute an updated Test Flight version, and one lane tests which calls scan to run UI Tests. Auto-incremented build number. To get an auto-incremented build number you can use something like the following lane: lane :increment_build_number do increment_build_number ( build_number : ENV [ 'CI_JOB_ID' ] ) end Then the GitLab CI job ID (which iterates on each build) will be used.","title":"GitLab CI Integration"},{"location":"best-practices/continuous-integration/gitlab/#gitlab-ci-integration","text":"Use GitLab Runner running on a macOS machine to build using pantograph.","title":"GitLab CI Integration"},{"location":"best-practices/continuous-integration/gitlab/#repository-setup","text":"First create a Gemfile in the root of your project with the following content: source \"https://rubygems.org\" gem \"pantograph\" Add a .gitlab-ci.yml file to trigger pantograph . stages : - unit_tests - test_flight variables : LC_ALL : \"en_US.UTF-8\" LANG : \"en_US.UTF-8\" before_script : - gem install bundler - bundle install unit_tests : dependencies : [] stage : unit_tests artifacts : paths : - pantograph / screenshots - pantograph / logs script : - pantograph tests tags : - ios test_flight_build : dependencies : [] stage : test_flight artifacts : paths : - pantograph / screenshots - pantograph / logs script : - pantograph beta tags : - ios only : - /^ release - . * $ / - master See the .gitlab-ci.yml documentation for more information on how this file works.","title":"Repository setup"},{"location":"best-practices/continuous-integration/gitlab/#setting-up-the-lanes","text":"You should have a lane - in this example called beta - which should do the usual, match , gym , pilot , to distribute an updated Test Flight version, and one lane tests which calls scan to run UI Tests.","title":"Setting up the lanes"},{"location":"best-practices/continuous-integration/gitlab/#auto-incremented-build-number","text":"To get an auto-incremented build number you can use something like the following lane: lane :increment_build_number do increment_build_number ( build_number : ENV [ 'CI_JOB_ID' ] ) end Then the GitLab CI job ID (which iterates on each build) will be used.","title":"Auto-incremented build number."},{"location":"best-practices/continuous-integration/jenkins/","text":"Jenkins Integration Installation The recommended way to install Jenkins is through homebrew : brew update && brew install jenkins From now on start Jenkins by running: jenkins Ruby Environment We recommend using homebrew for installing Ruby, though rbenv and rvm work fine too. If using a Gemfile in your project, add an \"Execute shell\" step as your first build step and call bundle install . Plugins You'll find the following Jenkins plugins to be useful: AnsiColor Plugin : Used to show the coloured output of the pantograph tools. Don\u2019t forget to enable Color ANSI Console Output in the Build Environment or your project. Rebuild Plugin : This plugin will save you a lot of time. Build Step Add an \"Execute shell\" build step using your appropriate pantograph command per the example below: pantograph deploy # if using a Gemfile, prefix that command with `bundle exec` bundle exec pantograph deploy Replace deploy with the lane you want to use. commit_version_bump || git_commit You can use commit_version_bump or git_commit action to commit changes to your repository in your pantograph setup. warning When you are using webhooks to trigger your build on a push this will cause an infinite loop of triggering builds. Gitlab When you are using Gitlab you will need the GitLab Plugin . Inside the job you want to configure you go to Build Triggers > Build when a change is pushed to GitLab > Enable [ci-skip] . When you include [ci-skip] in your build this commit won't trigger the build in jenkins at all. Example build_number = increment_build_number commit_version_bump ( message : \"[ci-skip] Version Bump to #{ build_number } \" ) git_commit ( path : \"./CHANGELOG.md\" , message : \"[ci-skip] Updated CHANGELOG for Build #{ build_number } \" ) push_to_git_remote Test Results and Screenshots To show the deployment result right in Jenkins Add post-build action Publish JUnit test result report Test report XMLs : pantograph/report.xml Save and run. The result should look like this:","title":"Jenkins Integration"},{"location":"best-practices/continuous-integration/jenkins/#jenkins-integration","text":"","title":"Jenkins Integration"},{"location":"best-practices/continuous-integration/jenkins/#installation","text":"The recommended way to install Jenkins is through homebrew : brew update && brew install jenkins From now on start Jenkins by running: jenkins","title":"Installation"},{"location":"best-practices/continuous-integration/jenkins/#ruby-environment","text":"We recommend using homebrew for installing Ruby, though rbenv and rvm work fine too. If using a Gemfile in your project, add an \"Execute shell\" step as your first build step and call bundle install .","title":"Ruby Environment"},{"location":"best-practices/continuous-integration/jenkins/#plugins","text":"You'll find the following Jenkins plugins to be useful: AnsiColor Plugin : Used to show the coloured output of the pantograph tools. Don\u2019t forget to enable Color ANSI Console Output in the Build Environment or your project. Rebuild Plugin : This plugin will save you a lot of time.","title":"Plugins"},{"location":"best-practices/continuous-integration/jenkins/#build-step","text":"Add an \"Execute shell\" build step using your appropriate pantograph command per the example below: pantograph deploy # if using a Gemfile, prefix that command with `bundle exec` bundle exec pantograph deploy Replace deploy with the lane you want to use.","title":"Build Step"},{"location":"best-practices/continuous-integration/jenkins/#commit_version_bump-git_commit","text":"You can use commit_version_bump or git_commit action to commit changes to your repository in your pantograph setup. warning When you are using webhooks to trigger your build on a push this will cause an infinite loop of triggering builds.","title":"commit_version_bump || git_commit"},{"location":"best-practices/continuous-integration/jenkins/#gitlab","text":"When you are using Gitlab you will need the GitLab Plugin . Inside the job you want to configure you go to Build Triggers > Build when a change is pushed to GitLab > Enable [ci-skip] . When you include [ci-skip] in your build this commit won't trigger the build in jenkins at all. Example build_number = increment_build_number commit_version_bump ( message : \"[ci-skip] Version Bump to #{ build_number } \" ) git_commit ( path : \"./CHANGELOG.md\" , message : \"[ci-skip] Updated CHANGELOG for Build #{ build_number } \" ) push_to_git_remote","title":"Gitlab"},{"location":"best-practices/continuous-integration/jenkins/#test-results-and-screenshots","text":"To show the deployment result right in Jenkins Add post-build action Publish JUnit test result report Test report XMLs : pantograph/report.xml Save and run. The result should look like this:","title":"Test Results and Screenshots"},{"location":"best-practices/continuous-integration/travis/","text":"Travis Integration Update your .travis.yml to look like this: language : objective - c osx_image : xcode8 . 3 install : - bundle install script : - pantograph beta The above config files assume you have a Gemfile set up, if you don't have one yet, make sure to follow our Gemfile guide and run bundle update to make sure you're using the most recent pantograph release. Replace beta with the lane you want to run for your setup. If you want to build, sign and distribute builds from Travis, you'll need to add one more action to your Pantfile , as by default, the Travis keychain is locked. At the top of your Pantfile , add setup_travis which will setup the keychain to work well with match and gym . This action will also enable the readonly mode for match , so your CI doesn't create new certificates or provisioning profiles.","title":"Travis Integration"},{"location":"best-practices/continuous-integration/travis/#travis-integration","text":"Update your .travis.yml to look like this: language : objective - c osx_image : xcode8 . 3 install : - bundle install script : - pantograph beta The above config files assume you have a Gemfile set up, if you don't have one yet, make sure to follow our Gemfile guide and run bundle update to make sure you're using the most recent pantograph release. Replace beta with the lane you want to run for your setup. If you want to build, sign and distribute builds from Travis, you'll need to add one more action to your Pantfile , as by default, the Travis keychain is locked. At the top of your Pantfile , add setup_travis which will setup the keychain to work well with match and gym . This action will also enable the readonly mode for match , so your CI doesn't create new certificates or provisioning profiles.","title":"Travis Integration"},{"location":"includes/installing-pantograph/","text":"Install the latest Xcode command line tools: xcode-select --install Install pantograph using # Install ruby via homebrew (macOS & linux only) brew install ruby # Set ruby in your shell path (example uses Zsh) echo 'export PATH=\"/usr/local/opt/ruby/bin:$PATH\"' >> ~/.zshrc # Using RubyGems gem install pantograph","title":"Installing pantograph"},{"location":"includes/setup-pantograph-header/","text":".pantograph-setup { border-left: .4rem solid #00b0ff; border-bottom: .1rem solid rgba(0,176,255,.1); background-color: rgba(0,176,255,.1); padding: 15px; margin-bottom: 20px; font-weight: 200; } .pantograph-setup-wrapper { background-color: rgba(0,176,255,.05); } .pantograph-setup-wrapper[open] { padding-bottom: 1px; } .pantograph-setup-header { font-size: 20px; font-weight: 500; } .pantograph-setup-more-details { font-size: 18px; font-weight: 350; } New to pantograph? Click here to open the installation & setup instructions first 1) Install the latest Xcode command line tools xcode-select --install Install _pantograph_ using Homebrew & Rubygems # Install ruby via homebrew (macOS & linux only) brew install ruby # Set ruby in your shell path (example uses Zsh) echo 'export PATH=\"/usr/local/opt/ruby/bin:$PATH\"' >> ~/.zshrc # Using RubyGems gem install pantograph 3) Navigate to your project and run pantograph init More Details","title":"Setup pantograph header"},{"location":"plugins/available-plugins/","text":".pantograph-setup { border-left: .4rem solid #00b0ff; border-bottom: .1rem solid rgba(0,176,255,.1); background-color: rgba(0,176,255,.1); padding: 15px; margin-bottom: 20px; font-weight: 200; } .pantograph-setup-wrapper { background-color: rgba(0,176,255,.05); } .pantograph-setup-wrapper[open] { padding-bottom: 1px; } .pantograph-setup-header { font-size: 20px; font-weight: 500; } .pantograph-setup-more-details { font-size: 18px; font-weight: 350; } New to pantograph? Click here to open the installation & setup instructions first 1) Install the latest Xcode command line tools xcode-select --install Install _pantograph_ using Homebrew & Rubygems # Install ruby via homebrew (macOS & linux only) brew install ruby # Set ruby in your shell path (example uses Zsh) echo 'export PATH=\"/usr/local/opt/ruby/bin:$PATH\"' >> ~/.zshrc # Using RubyGems gem install pantograph 3) Navigate to your project and run pantograph init More Details Available Plugins 4498 versioning via Siarhei Fiedartsou, John Douglas Allows to set/get app version and build number directly to/from Info.plist Provided actions Name | Category | Description ------|----------|------------ **get_version_number_from_git_branch** | - | Extract version number from git branch name **increment_build_number_in_xcodeproj** | - | Increment build number in xcodeproj **get_version_number_from_plist** | - | Get the version number of your project **get_build_number_from_plist** | - | Get the build number of your project **ci_build_number** | building | Detects current build number defined by CI system **get_version_number_from_xcodeproj** | - | Get the version number of your project **increment_version_number_in_xcodeproj** | - | Increment build number in xcodeproj **increment_version_number_in_plist** | - | Increment the version number of your project **get_app_store_version_number** | - | Get the version number of your app in the App Store **get_info_plist_path** | - | Get the version number of your project **get_build_number_from_xcodeproj** | - | Get the build number of your project **increment_build_number_in_plist** | - | Increment the build number of your project Score details Metric | Points | Description --------|--------|------------- contributors | 66 | The more contributors a project has, the more likely it is it stays alive subscribers | 18 | More subscribers = more popular project stars | 249 | More stars = more popular project forks | 135 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 21 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | -12 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 3871 | More downloads = more users have been using the plugin for a while tests | 80 | The more tests a plugin has, the better Open on GitHub 3848 appcenter via Microsoft Corporation Pantograph plugin for App Center Provided actions Name | Category | Description ------|----------|------------ **appcenter_fetch_devices** | - | Fetches a list of devices from App Center to distribute an iOS app to **appcenter_upload** | - | Distribute new release to App Center Score details Metric | Points | Description --------|--------|------------- contributors | 174 | The more contributors a project has, the more likely it is it stays alive subscribers | 72 | More subscribers = more popular project stars | 268 | More stars = more popular project forks | 325 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 15 | Project that have been around for longer tend to be more stable major_release | 30 | Post 1.0 releases are great github_issues | -20 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 2834 | More downloads = more users have been using the plugin for a while tests | 80 | The more tests a plugin has, the better Open on GitHub 3635 badge via Daniel Griesser Add a badge overlay to your app icon Provided actions Name | Category | Description ------|----------|------------ **add_badge** | - | Automatically add a badge to your app icon Score details Metric | Points | Description --------|--------|------------- contributors | 12 | The more contributors a project has, the more likely it is it stays alive subscribers | 6 | More subscribers = more popular project stars | 117 | More stars = more popular project forks | 45 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 17 | Project that have been around for longer tend to be more stable major_release | 30 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 3335 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 2865 aws_s3 via Josh Holtz Upload IPA and APK to S3 Provided actions Name | Category | Description ------|----------|------------ **aws_s3** | - | Generates a plist file and uploads all to AWS S3 Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 15 | More subscribers = more popular project stars | 91 | More stars = more popular project forks | 195 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 21 | Project that have been around for longer tend to be more stable major_release | 30 | Post 1.0 releases are great github_issues | -17 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 2445 | More downloads = more users have been using the plugin for a while tests | 15 | The more tests a plugin has, the better Open on GitHub 1770 bugsnag via Delisa Mason Uploads dSYM files to Bugsnag Provided actions Name | Category | Description ------|----------|------------ **upload_symbols_to_bugsnag** | - | Uploads symbol files to Bugsnag **send_build_to_bugsnag** | building | Notifies Bugsnag of a build **dsym_magic** | - | Sets the dsym path Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 39 | More subscribers = more popular project stars | 18 | More stars = more popular project forks | 15 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 19 | Project that have been around for longer tend to be more stable major_release | 30 | Post 1.0 releases are great github_issues | -3 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 1582 | More downloads = more users have been using the plugin for a while tests | 0 | The more tests a plugin has, the better Open on GitHub 1728 trainer via KrauseFx Convert xcodebuild plist files to JUnit reports Provided actions Name | Category | Description ------|----------|------------ **trainer** | - | Convert the Xcode plist log to a JUnit report. This will raise an exception if the tests failed Score details Metric | Points | Description --------|--------|------------- contributors | 42 | The more contributors a project has, the more likely it is it stays alive subscribers | 18 | More subscribers = more popular project stars | 132 | More stars = more popular project forks | 110 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 20 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | -8 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 1320 | More downloads = more users have been using the plugin for a while tests | 24 | The more tests a plugin has, the better Open on GitHub 1673 increment_version_code via Jems Increment the version code of your android project. Provided actions Name | Category | Description ------|----------|------------ **increment_version_code** | - | Increment the version code of your android project. Score details Metric | Points | Description --------|--------|------------- contributors | 12 | The more contributors a project has, the more likely it is it stays alive subscribers | 6 | More subscribers = more popular project stars | 40 | More stars = more popular project forks | 35 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 25 | How well is the README of the document written age | 20 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | -2 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 1514 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 1662 test_center via Lyndsey Ferguson \ud83c\udfaf Understand, tame, and train your iOS & Mac tests \ud83c\udf89 Provided actions Name | Category | Description ------|----------|------------ **suppressed_tests** | testing | \ud83d\udddc Retrieves a list of tests that are suppressed in a specific or all Xcode Schemes in a project **suppress_tests** | testing | \ud83d\udddc Suppresses specific tests in a specific or all Xcode Schemes in a given project **suppress_tests_from_junit** | testing | \ud83d\udddc Uses a junit xml report file to suppress either passing or failing tests in an Xcode Scheme **tests_from_xctestrun** | testing | \ufe0f\ufe0f\u2611\ufe0f Retrieves all of the tests from xctest bundles referenced by the xctestrun file **quit_core_simulator_service** | testing | \ud83d\udcf2 Force-quits the com.apple.CoreSimulator.CoreSimulatorService to fix mysterious iOS Simulator issues. **collate_test_result_bundles** | testing | \ud83d\udd38 Combines multiple test_result bundles into one test_result bundle **tests_from_junit** | testing | \u2611\ufe0f Retrieves the failing and passing tests as reported in a junit xml file **multi_scan** | testing | \u267b\ufe0f Uses scan to run Xcode tests a given number of times, with the option of batching and/or parallelizing them, only re-testing failing tests. **collate_html_reports** | testing | \ud83d\udd36 Combines multiple html report files into one html report file **collate_junit_reports** | testing | \ud83d\udd37 Combines multiple junit report files into one junit report file **collate_json_reports** | testing | \ud83d\udd39 Combines multiple json report files into one json report file Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 24 | More subscribers = more popular project stars | 110 | More stars = more popular project forks | 135 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 12 | Project that have been around for longer tend to be more stable major_release | 30 | Post 1.0 releases are great github_issues | -10 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 1211 | More downloads = more users have been using the plugin for a while tests | 80 | The more tests a plugin has, the better Open on GitHub 1661 sentry via Sentry Upload symbols to Sentry Provided actions Name | Category | Description ------|----------|------------ **sentry_upload_dsym** | - | Upload dSYM symbolication files to Sentry **sentry_set_commits** | - | Set commits of a release **sentry_upload_sourcemap** | - | Upload a sourcemap to a release of a project on Sentry **sentry_finalize_release** | - | Finalize a release for a project on Sentry **sentry_upload_file** | - | Upload files to a release of a project on Sentry **sentry_upload_proguard** | - | Upload mapping to a project on Sentry **sentry_create_release** | - | Create new releases for a project on Sentry Score details Metric | Points | Description --------|--------|------------- contributors | 60 | The more contributors a project has, the more likely it is it stays alive subscribers | 21 | More subscribers = more popular project stars | 41 | More stars = more popular project forks | 120 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 21 | Project that have been around for longer tend to be more stable major_release | 30 | Post 1.0 releases are great github_issues | -9 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 1227 | More downloads = more users have been using the plugin for a while tests | 80 | The more tests a plugin has, the better Open on GitHub 1572 appicon via Boris Bu\u0308gling, Felix Krause Generate required icon sizes and iconset from a master application icon. Provided actions Name | Category | Description ------|----------|------------ **android_appicon** | - | Generate required icon sizes from a master application icon **appicon** | - | Generate required icon sizes and iconset from a master application icon Score details Metric | Points | Description --------|--------|------------- contributors | 108 | The more contributors a project has, the more likely it is it stays alive subscribers | 30 | More subscribers = more popular project stars | 253 | More stars = more popular project forks | 175 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 20 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | -15 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 931 | More downloads = more users have been using the plugin for a while tests | 0 | The more tests a plugin has, the better Open on GitHub 1517 changelog via Pavel Prochazka Automate changes to your project CHANGELOG.md Provided actions Name | Category | Description ------|----------|------------ **read_changelog** | - | Reads content of a section from your project CHANGELOG.md file **update_changelog** | - | Updates content of a section of your project CHANGELOG.md file **emojify_changelog** | - | Emojifies the output of read_changelog action **stamp_changelog** | - | Stamps the [Unreleased] section with provided identifier in your project CHANGELOG.md file Score details Metric | Points | Description --------|--------|------------- contributors | 42 | The more contributors a project has, the more likely it is it stays alive subscribers | 6 | More subscribers = more popular project stars | 122 | More stars = more popular project forks | 100 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 20 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | -1 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 1078 | More downloads = more users have been using the plugin for a while tests | 80 | The more tests a plugin has, the better Open on GitHub 1052 xcake via James Campbell Create your Xcode projects automatically using a stupid simple DSL. Provided actions Name | Category | Description ------|----------|------------ **xcake** | - | Runs `xcake` for the project Score details Metric | Points | Description --------|--------|------------- contributors | 114 | The more contributors a project has, the more likely it is it stays alive subscribers | 48 | More subscribers = more popular project stars | 464 | More stars = more popular project forks | 190 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 25 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | -5 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 66 | More downloads = more users have been using the plugin for a while tests | 80 | The more tests a plugin has, the better Open on GitHub 846 get_version_name via Jems Get the version name of an Android project. Provided actions Name | Category | Description ------|----------|------------ **get_version_name** | - | Get the version name of an Android project. This action will return the version name of your project according to the one set in your build.gradle file Score details Metric | Points | Description --------|--------|------------- contributors | 6 | The more contributors a project has, the more likely it is it stays alive subscribers | 6 | More subscribers = more popular project stars | 4 | More stars = more popular project forks | 15 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 25 | How well is the README of the document written age | 20 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | -3 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 750 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 817 aws_device_farm via Helmut Januschka Run UI Tests on AWS Devicefarm Provided actions Name | Category | Description ------|----------|------------ **aws_device_farm** | - | Upload the application to the AWS device farm. **aws_device_farm_package** | - | Packages .app from deriveddata to an aws-compatible ipa Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 15 | More subscribers = more popular project stars | 65 | More stars = more popular project forks | 110 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 18 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | -2 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 538 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 735 download_github_release_asset via Anton Domashnev This action downloads a GitHub release's asset using the GitHub API and puts it in a destination path.\\nIf the file has been previously downloaded, it will be overrided. Provided actions Name | Category | Description ------|----------|------------ **download_github_release_asset** | - | Downloads a GitHub release's asset Score details Metric | Points | Description --------|--------|------------- contributors | 6 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 2 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 18 | Project that have been around for longer tend to be more stable major_release | 30 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 600 | More downloads = more users have been using the plugin for a while tests | 6 | The more tests a plugin has, the better Open on GitHub 728 versioning_android via Igor Lamos Android Versioning Plugin for Pantograph Provided actions Name | Category | Description ------|----------|------------ **android_get_version_name** | - | Get the Version Name of your Android project **android_set_version_code** | - | Set the Version Code of your Android project **android_set_version_name** | - | Set the Version Name of your Android project **android_get_version_code** | - | Get the Version Code of your Android project Score details Metric | Points | Description --------|--------|------------- contributors | 6 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 2 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 25 | How well is the README of the document written age | 12 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | -1 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 625 | More downloads = more users have been using the plugin for a while tests | 36 | The more tests a plugin has, the better Open on GitHub 715 yarn via Josh Lesch Execute Yarn commands from your Pantfile Provided actions Name | Category | Description ------|----------|------------ **yarn** | - | Execute Yarn commands from your Pantfile Score details Metric | Points | Description --------|--------|------------- contributors | 24 | The more contributors a project has, the more likely it is it stays alive subscribers | 6 | More subscribers = more popular project stars | 16 | More stars = more popular project forks | 30 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 17 | Project that have been around for longer tend to be more stable major_release | 30 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 501 | More downloads = more users have been using the plugin for a while tests | 21 | The more tests a plugin has, the better Open on GitHub 694 automated_test_emulator_run via Kamil Krzyk Starts n AVDs based on JSON file config. AVDs are created and configured according to user liking before instrumentation test process (started either via shell command or gradle) and killed/deleted after test process finishes. Provided actions Name | Category | Description ------|----------|------------ **automated_test_emulator_run** | - | Starts AVD, based on AVD_setup.json file, before test launch and kills it after testing is done. Score details Metric | Points | Description --------|--------|------------- contributors | 30 | The more contributors a project has, the more likely it is it stays alive subscribers | 9 | More subscribers = more popular project stars | 75 | More stars = more popular project forks | 85 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 20 | Project that have been around for longer tend to be more stable major_release | 30 | Post 1.0 releases are great github_issues | -5 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 377 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 679 tpa via The Perfect App TPA gives you advanced user behaviour analytics, app distribution, crash analytics and more Provided actions Name | Category | Description ------|----------|------------ **upload_to_tpa** | beta | Upload app builds to The Perfect App (tpa.io) **upload_symbols_to_tpa** | misc | Upload dsym files downloaded from App Store Connect directly to TPA Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 15 | More subscribers = more popular project stars | 9 | More stars = more popular project forks | 35 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 20 | Project that have been around for longer tend to be more stable major_release | 30 | Post 1.0 releases are great github_issues | -1 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 421 | More downloads = more users have been using the plugin for a while tests | 80 | The more tests a plugin has, the better Open on GitHub 671 android_versioning via Manabu OHTAKE Allows to set/get app version name and version code directly to/from build.gradle Provided actions Name | Category | Description ------|----------|------------ **get_value_from_build** | - | - **increment_version_code** | - | Increment the version code of your project **set_value_in_build** | - | Set the value of your project **get_version_name** | - | Get the version name of your project **increment_version_name** | - | Increment the version name of your project **get_version_code** | - | Get the version code of your project Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 12 | More subscribers = more popular project stars | 23 | More stars = more popular project forks | 35 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 25 | How well is the README of the document written age | 16 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | -3 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 501 | More downloads = more users have been using the plugin for a while tests | 42 | The more tests a plugin has, the better Open on GitHub 638 cordova via Almouro Build your Cordova app Provided actions Name | Category | Description ------|----------|------------ **cordova** | building | Build your Cordova app Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 18 | More subscribers = more popular project stars | 79 | More stars = more popular project forks | 140 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 17 | Project that have been around for longer tend to be more stable major_release | 30 | Post 1.0 releases are great github_issues | -13 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 297 | More downloads = more users have been using the plugin for a while tests | 0 | The more tests a plugin has, the better Open on GitHub 629 update_provisioning_profile_specifier via Jordan Bondo Update the provisioning profile in the Xcode Project file for a specified target Provided actions Name | Category | Description ------|----------|------------ **update_provisioning_profile_specifier** | - | Update the provisioning profile in the Xcode Project file for a specified target Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 6 | More subscribers = more popular project stars | 20 | More stars = more popular project forks | 30 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 25 | How well is the README of the document written age | 19 | Project that have been around for longer tend to be more stable major_release | 30 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 476 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 592 get_version_code via Jems Get the version code of anAndroid project. This action will return the version code of your project according to the one set in your build.gradle file Provided actions Name | Category | Description ------|----------|------------ **get_version_code** | - | Get the version code of an Android project. This action will return the version code of your project according to the one set in your build.gradle file Score details Metric | Points | Description --------|--------|------------- contributors | 6 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 4 | More stars = more popular project forks | 15 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 25 | How well is the README of the document written age | 20 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 496 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 562 commit_android_version_bump via jems This Android plugins allow you to commit every modification done in your build.gradle file during the execution of a lane. In fast, it do the same as the commit_version_bump action, but for Android Provided actions Name | Category | Description ------|----------|------------ **commit_android_version_bump** | - | This Android plugins allow you to commit every modification done in your build.gradle file during the execution of a lane. In fast, it do the same as the commit_version_bump action, but for Android Score details Metric | Points | Description --------|--------|------------- contributors | 12 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 4 | More stars = more popular project forks | 20 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 25 | How well is the README of the document written age | 20 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | -3 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 458 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 530 load_json via Felix Krause Loads a local JSON file and parses it Provided actions Name | Category | Description ------|----------|------------ **load_json** | - | Loads a local JSON file and parses it Score details Metric | Points | Description --------|--------|------------- contributors | 6 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 3 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 25 | How well is the README of the document written age | 15 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 458 | More downloads = more users have been using the plugin for a while tests | 0 | The more tests a plugin has, the better Open on GitHub 521 rome via Fran\u00e7ois Benaiteau, Tommaso Piazza A cache tool for Carthage Provided actions Name | Category | Description ------|----------|------------ **rome** | - | An S3 cache tool for Carthage Score details Metric | Points | Description --------|--------|------------- contributors | 30 | The more contributors a project has, the more likely it is it stays alive subscribers | 6 | More subscribers = more popular project stars | 14 | More stars = more popular project forks | 15 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 16 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | -1 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 365 | More downloads = more users have been using the plugin for a while tests | 6 | The more tests a plugin has, the better Open on GitHub 515 setup_fragile_tests_for_rescan via Lyndsey Ferguson Suppress stabile tests so that 'scan' can run the fragile tests again Provided actions Name | Category | Description ------|----------|------------ **setup_fragile_tests_for_rescan** | deprecated | Suppress stabile tests so that 'scan' can run the fragile tests again Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 6 | More stars = more popular project forks | 5 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 15 | Project that have been around for longer tend to be more stable major_release | 30 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 350 | More downloads = more users have been using the plugin for a while tests | 36 | The more tests a plugin has, the better Open on GitHub 508 mobile_center via Microsoft Corporation Pantograph plugin for Mobile Center Provided actions Name | Category | Description ------|----------|------------ **appcenter_upload** | - | Distribute new release to App Center Score details Metric | Points | Description --------|--------|------------- contributors | 42 | The more contributors a project has, the more likely it is it stays alive subscribers | 33 | More subscribers = more popular project stars | 47 | More stars = more popular project forks | 45 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 15 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | -11 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 187 | More downloads = more users have been using the plugin for a while tests | 80 | The more tests a plugin has, the better Open on GitHub 471 firebase_app_distribution via Stefan Natchev Release your beta builds to Firebase App Distribution. https://firebase.google.com/docs/app-distribution Provided actions Name | Category | Description ------|----------|------------ **firebase_app_distribution** | - | Release your beta builds with Firebase App Distribution Score details Metric | Points | Description --------|--------|------------- contributors | 24 | The more contributors a project has, the more likely it is it stays alive subscribers | 21 | More subscribers = more popular project stars | 14 | More stars = more popular project forks | 5 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 1 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 291 | More downloads = more users have been using the plugin for a while tests | 45 | The more tests a plugin has, the better Open on GitHub 449 mango via Serghei Moret, Daniel Hartwich This plugin Android tasks on docker images Provided actions Name | Category | Description ------|----------|------------ **run_dockerized_task** | - | Action that runs Android tasks on a specified Docker image Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 72 | More subscribers = more popular project stars | 27 | More stars = more popular project forks | 25 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 7 | Project that have been around for longer tend to be more stable major_release | 30 | Post 1.0 releases are great github_issues | -2 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 154 | More downloads = more users have been using the plugin for a while tests | 66 | The more tests a plugin has, the better Open on GitHub 442 run_tests_firebase_testlab via Bruno Correia Runs Android tests in Firebase Test Lab. Provided actions Name | Category | Description ------|----------|------------ **run_tests_firebase_testlab** | - | - Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 9 | More subscribers = more popular project stars | 25 | More stars = more popular project forks | 40 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 11 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | -3 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 210 | More downloads = more users have been using the plugin for a while tests | 80 | The more tests a plugin has, the better Open on GitHub 430 browserstack via BrowserStack Uploads IPA and APK files to BrowserStack for automation and manual testing. Provided actions Name | Category | Description ------|----------|------------ **upload_to_browserstack_app_automate** | - | Uploads IPA and APK files to BrowserStack AppAutomate for running automated tests. **upload_to_browserstack_app_live** | - | Uploads IPA and APK files to BrowserStack AppLive for running manual tests. Score details Metric | Points | Description --------|--------|------------- contributors | 12 | The more contributors a project has, the more likely it is it stays alive subscribers | 18 | More subscribers = more popular project stars | 5 | More stars = more popular project forks | 15 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 9 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | -1 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 251 | More downloads = more users have been using the plugin for a while tests | 51 | The more tests a plugin has, the better Open on GitHub 424 carthage_cache via Thi Doan A Pantograph plugin that allows to cache Carthage/Build folder in Amazon S3. Provided actions Name | Category | Description ------|----------|------------ **carthage_cache_install** | - | Download Carthage cache from Amazon S3 **carthage_cache_publish** | - | Upload Carthage cache to Amazon S3 **carthage_cache_exist** | - | Check if Carthage cache exists for Cartfile.resolved in Amazon S3 Score details Metric | Points | Description --------|--------|------------- contributors | 6 | The more contributors a project has, the more likely it is it stays alive subscribers | 6 | More subscribers = more popular project stars | 10 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 21 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 308 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 424 review_time via timwredwards Fetches live iOS and macOS review times from appreviewtimes.com Provided actions Name | Category | Description ------|----------|------------ **review_time** | - | Fetches live iOS and macOS review times from appreviewtimes.com Score details Metric | Points | Description --------|--------|------------- contributors | 18 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 21 | More stars = more popular project forks | 10 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 15 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 284 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 420 settings_bundle via Jimmy Dee Pantograph plugin to update static settings in an iOS settings bundle Provided actions Name | Category | Description ------|----------|------------ **update_settings_bundle** | project | actions. Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 6 | More subscribers = more popular project stars | 20 | More stars = more popular project forks | 40 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 18 | Project that have been around for longer tend to be more stable major_release | 30 | Post 1.0 releases are great github_issues | -1 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 157 | More downloads = more users have been using the plugin for a while tests | 80 | The more tests a plugin has, the better Open on GitHub 399 update_xcodeproj via Fumiya Nakamura Update Xcode projects Provided actions Name | Category | Description ------|----------|------------ **update_xcodeproj** | - | Update Xcode projects Score details Metric | Points | Description --------|--------|------------- contributors | 12 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 6 | More stars = more popular project forks | 10 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 19 | Project that have been around for longer tend to be more stable major_release | 30 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 237 | More downloads = more users have been using the plugin for a while tests | 12 | The more tests a plugin has, the better Open on GitHub 391 ionic via Jan Piotrowski Build your Ionic app Provided actions Name | Category | Description ------|----------|------------ **ionic** | building | Build your Ionic app Score details Metric | Points | Description --------|--------|------------- contributors | 72 | The more contributors a project has, the more likely it is it stays alive subscribers | 15 | More subscribers = more popular project stars | 41 | More stars = more popular project forks | 55 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 17 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | -23 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 144 | More downloads = more users have been using the plugin for a while tests | 0 | The more tests a plugin has, the better Open on GitHub 391 prepare_build_resources via Jakob Jensen Prepares certificates and provisioning profiles for building and removes them afterwards. Provided actions Name | Category | Description ------|----------|------------ **prepare_build_resources** | - | Prepares certificates and provisioning profiles for building and removes them afterwards. Score details Metric | Points | Description --------|--------|------------- contributors | 18 | The more contributors a project has, the more likely it is it stays alive subscribers | 9 | More subscribers = more popular project stars | 6 | More stars = more popular project forks | 5 | More forks = more people seem to use/modify this project has_mit_license | -50 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 20 | Project that have been around for longer tend to be more stable major_release | 30 | Post 1.0 releases are great github_issues | -1 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 295 | More downloads = more users have been using the plugin for a while tests | 9 | The more tests a plugin has, the better Open on GitHub 378 firebase_test_lab via Shihua Zheng Test your app with Firebase Test Lab with ease using pantograph Provided actions Name | Category | Description ------|----------|------------ **firebase_test_lab_ios_xctest** | - | Submit an iOS XCTest job to Firebase Test Lab Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 48 | More subscribers = more popular project stars | 40 | More stars = more popular project forks | 40 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 7 | Project that have been around for longer tend to be more stable major_release | 30 | Post 1.0 releases are great github_issues | -4 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 147 | More downloads = more users have been using the plugin for a while tests | 0 | The more tests a plugin has, the better Open on GitHub 377 lizard via Moses Liao Run swift code complexity analytics using Lizard Provided actions Name | Category | Description ------|----------|------------ **lizard** | - | Run lizard code cyclomatic complexity analysis. Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 18 | More subscribers = more popular project stars | 10 | More stars = more popular project forks | 25 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 11 | Project that have been around for longer tend to be more stable major_release | 30 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 141 | More downloads = more users have been using the plugin for a while tests | 72 | The more tests a plugin has, the better Open on GitHub 376 merge_junit_report via Derek Yang Merges multiple junit reports into one Provided actions Name | Category | Description ------|----------|------------ **merge_junit_report** | - | Provides the ability to merge multiple junit reports into one Score details Metric | Points | Description --------|--------|------------- contributors | 6 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 4 | More stars = more popular project forks | 5 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 17 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 241 | More downloads = more users have been using the plugin for a while tests | 30 | The more tests a plugin has, the better Open on GitHub 366 xcconfig via Sergii Ovcharenko Adds 2 actions to pantograph to read and update xcconfig files. Provided actions Name | Category | Description ------|----------|------------ **update_xcconfig_value** | - | Updates value of a setting in xcconfig file. **set_xcconfig_value** | - | Sets the value of a setting in xcconfig file. **get_xcconfig_value** | - | Reads a value of a setting from xcconfig file. Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 6 | More stars = more popular project forks | 15 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 10 | Project that have been around for longer tend to be more stable major_release | 30 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 202 | More downloads = more users have been using the plugin for a while tests | 30 | The more tests a plugin has, the better Open on GitHub 356 slack_upload via Dawid Cieslak Uploads specified file to Slack Provided actions Name | Category | Description ------|----------|------------ **slack_upload** | - | Uploads given file to Slack Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 0 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 8 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 275 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 341 pgyer via rexshi distribute app to pgyer beta testing service Provided actions Name | Category | Description ------|----------|------------ **pgyer** | - | distribute app to pgyer beta testing service Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 6 | More subscribers = more popular project stars | 22 | More stars = more popular project forks | 35 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 17 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | -3 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 191 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 339 semantic_release via Jir\u030ci\u0301 Ota\u0301hal Automated version managment and generator of release notes. Provided actions Name | Category | Description ------|----------|------------ **conventional_changelog** | - | Get commits since last version and generates release notes **analyze_commits** | - | Finds a tag of last release and determinates version of next release Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 32 | More stars = more popular project forks | 35 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 4 | Project that have been around for longer tend to be more stable major_release | 30 | Post 1.0 releases are great github_issues | -2 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 92 | More downloads = more users have been using the plugin for a while tests | 75 | The more tests a plugin has, the better Open on GitHub 337 act via Richard Szalay Applies changes to plists and app icons inside a compiled IPA or xcarchive Provided actions Name | Category | Description ------|----------|------------ **act** | - | Reconfigures .plists and icons inside a compiled IPA Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 20 | More stars = more popular project forks | 30 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 19 | Project that have been around for longer tend to be more stable major_release | 30 | Post 1.0 releases are great github_issues | -3 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 88 | More downloads = more users have been using the plugin for a while tests | 80 | The more tests a plugin has, the better Open on GitHub 323 danger-device_grid via Felix Krause, Boris Bu\u0308gling Danger plugin for the pantograph device grid. Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 21 | More subscribers = more popular project stars | 5 | More stars = more popular project forks | 20 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 21 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 180 | More downloads = more users have been using the plugin for a while tests | 6 | The more tests a plugin has, the better Open on GitHub 317 cryptex via Helmut Januschka pantograph Crypt Store Git repo Provided actions Name | Category | Description ------|----------|------------ **cryptex** | - | Secure Git-Backed Storage **cryptex_generate_keystore** | - | Generate a new Android Keystore Score details Metric | Points | Description --------|--------|------------- contributors | 36 | The more contributors a project has, the more likely it is it stays alive subscribers | 12 | More subscribers = more popular project stars | 26 | More stars = more popular project forks | 55 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 18 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | -4 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 101 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 316 xcode_log_parser via KrauseFx Convert the Xcode plist log to a JUnit report Provided actions Name | Category | Description ------|----------|------------ **trainer** | - | Convert the Xcode plist log to a JUnit report. This will raise an exception if the tests failed Score details Metric | Points | Description --------|--------|------------- contributors | 30 | The more contributors a project has, the more likely it is it stays alive subscribers | 12 | More subscribers = more popular project stars | 102 | More stars = more popular project forks | 60 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 20 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | -5 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 3 | More downloads = more users have been using the plugin for a while tests | 24 | The more tests a plugin has, the better Open on GitHub 306 remove_provisioning_profile via Anton Domashnev Remove provision profile from your local machine Provided actions Name | Category | Description ------|----------|------------ **remove_provisioning_profile** | - | Remove the provisioning profile for the given app_identifier and type from local machine Score details Metric | Points | Description --------|--------|------------- contributors | 12 | The more contributors a project has, the more likely it is it stays alive subscribers | 6 | More subscribers = more popular project stars | 7 | More stars = more popular project forks | 10 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 19 | Project that have been around for longer tend to be more stable major_release | 30 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 92 | More downloads = more users have been using the plugin for a while tests | 60 | The more tests a plugin has, the better Open on GitHub 303 property_file_read via United Classifieds Reads property file into dictionary Provided actions Name | Category | Description ------|----------|------------ **property_file_read** | - | Reads property file into dictionary Score details Metric | Points | Description --------|--------|------------- contributors | 6 | The more contributors a project has, the more likely it is it stays alive subscribers | 0 | More subscribers = more popular project stars | 1 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 25 | How well is the README of the document written age | 13 | Project that have been around for longer tend to be more stable major_release | 30 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 205 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 302 notarize via Zeplin, Inc. pantograph plugin to notarize a macOS app Provided actions Name | Category | Description ------|----------|------------ **notarize** | - | Notarizes a macOS app Score details Metric | Points | Description --------|--------|------------- contributors | 36 | The more contributors a project has, the more likely it is it stays alive subscribers | 51 | More subscribers = more popular project stars | 58 | More stars = more popular project forks | 35 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 5 | Project that have been around for longer tend to be more stable major_release | 30 | Post 1.0 releases are great github_issues | -2 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 19 | More downloads = more users have been using the plugin for a while tests | 0 | The more tests a plugin has, the better Open on GitHub 286 teams via Morten B\u00f8gh Send a success/error message to your Microsoft Teams channel Provided actions Name | Category | Description ------|----------|------------ **teams** | notifications | Send a message to your Microsoft Teams channel via the webhook connector Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 6 | More subscribers = more popular project stars | 6 | More stars = more popular project forks | 5 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 15 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 181 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 281 icon_versioning via Iulian Onofrei Overlay build information on top of your app icon Provided actions Name | Category | Description ------|----------|------------ **version_icon** | - | Overlay build information on top of your app icon. Based on original work by Krzysztof Zab\u0142ocki (https://github.com/krzysztofzablocki/Bootstrap). Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 43 | More stars = more popular project forks | 15 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 11 | Project that have been around for longer tend to be more stable major_release | 30 | Post 1.0 releases are great github_issues | -2 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 31 | More downloads = more users have been using the plugin for a while tests | 80 | The more tests a plugin has, the better Open on GitHub 279 code_push via Manuel Koch CodePush functionality for pantograph Provided actions Name | Category | Description ------|----------|------------ **code_push_promote** | - | CodePush promote **code_push_login** | - | CodePush login with accessKey **code_push_release_react** | - | CodePush release-react functionality for pantograph **code_push_release_cordova** | - | CodePush release-cordova functionality for pantograph Score details Metric | Points | Description --------|--------|------------- contributors | 18 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 23 | More stars = more popular project forks | 25 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 16 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | -4 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 122 | More downloads = more users have been using the plugin for a while tests | 6 | The more tests a plugin has, the better Open on GitHub 279 diawi via pacification Upload .ipa or .apk file to diawi.com Provided actions Name | Category | Description ------|----------|------------ **diawi** | - | Upload .ipa/.apk file to diawi.com Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 6 | More subscribers = more popular project stars | 19 | More stars = more popular project forks | 5 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 15 | Project that have been around for longer tend to be more stable major_release | 30 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 131 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 274 retry via gmgchow Retries failed XCUITest test cases Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 0 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 0 | How well is the README of the document written age | 0 | Project that have been around for longer tend to be more stable major_release | 30 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 224 | More downloads = more users have been using the plugin for a while tests | 0 | The more tests a plugin has, the better Open website (no GitHub link provided in gemspec) 271 brew via Michael Ruhl Run Homebrew/Linuxbrew command Provided actions Name | Category | Description ------|----------|------------ **brew** | - | Run Homebrew/Linuxbrew command Score details Metric | Points | Description --------|--------|------------- contributors | 6 | The more contributors a project has, the more likely it is it stays alive subscribers | 36 | More subscribers = more popular project stars | 2 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 16 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 138 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 270 onesky via Daniel Kiedrowski Helps to update the translations of your app using the OneSky service. Provided actions Name | Category | Description ------|----------|------------ **onesky_upload** | - | Upload a strings file to OneSky **onesky_download** | - | Download a translation file from OneSky Score details Metric | Points | Description --------|--------|------------- contributors | 6 | The more contributors a project has, the more likely it is it stays alive subscribers | 6 | More subscribers = more popular project stars | 15 | More stars = more popular project forks | 65 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 18 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | -1 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 88 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 269 synx via Afonso Gra\u00e7a Organise your Xcode project folder to match your Xcode groups. Provided actions Name | Category | Description ------|----------|------------ **synx** | - | Organise your Xcode project folder to match your Xcode groups. Score details Metric | Points | Description --------|--------|------------- contributors | 12 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 24 | More stars = more popular project forks | 10 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 25 | How well is the README of the document written age | 21 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 151 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 265 upgrade_super_old_xcode_project via Jan Piotrowski Upgrades super old Xcode projects to Xcode 8 Provided actions Name | Category | Description ------|----------|------------ **upgrade_super_old_xcode_project** | - | Upgrades super old Xcode projects to Xcode 8 Score details Metric | Points | Description --------|--------|------------- contributors | 12 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 3 | More stars = more popular project forks | 5 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 12 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | -2 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 159 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 257 google_drive via Bumsoo Kim Upload files to Google Drive Provided actions Name | Category | Description ------|----------|------------ **upload_to_google_drive** | - | Upload files to Google Drive **create_google_drive_folder** | - | Create new folder on Google Drive Score details Metric | Points | Description --------|--------|------------- contributors | 12 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 19 | More stars = more popular project forks | 30 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 10 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 71 | More downloads = more users have been using the plugin for a while tests | 42 | The more tests a plugin has, the better Open on GitHub 256 update_android_strings via bang Update Android res strings.xml Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 0 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 0 | How well is the README of the document written age | 0 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 236 | More downloads = more users have been using the plugin for a while tests | 0 | The more tests a plugin has, the better Open website (no GitHub link provided in gemspec) 254 unzip via Massimo Oliviero Extract compressed files in a ZIP Provided actions Name | Category | Description ------|----------|------------ **unzip** | - | Extract compressed files in a ZIP Score details Metric | Points | Description --------|--------|------------- contributors | 6 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 2 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 20 | Project that have been around for longer tend to be more stable major_release | 30 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 120 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 253 get_unprovisioned_devices_from_hockey via GaryJohnson Retrieves a list of unprovisioned devices from Hockey which can be passed directly into register_devices. Provided actions Name | Category | Description ------|----------|------------ **get_unprovisioned_devices_from_hockey** | - | Retrieves a list of unprovisioned devices from Hockey which can be passed directly into register_devices. Score details Metric | Points | Description --------|--------|------------- contributors | 12 | The more contributors a project has, the more likely it is it stays alive subscribers | 24 | More subscribers = more popular project stars | 6 | More stars = more popular project forks | 10 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 19 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 109 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 251 ruby via Felix Krause Useful pantograph actions for Ruby projects Provided actions Name | Category | Description ------|----------|------------ **rubocop** | - | Runs the code style checks **rspec** | - | Run tests using rspec Score details Metric | Points | Description --------|--------|------------- contributors | 6 | The more contributors a project has, the more likely it is it stays alive subscribers | 6 | More subscribers = more popular project stars | 4 | More stars = more popular project forks | 10 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 21 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 134 | More downloads = more users have been using the plugin for a while tests | 0 | The more tests a plugin has, the better Open on GitHub 251 codecov_reporter via BinaryBeard Uploads coverage report to Codecov.io Provided actions Name | Category | Description ------|----------|------------ **codecov_reporter** | - | Uploads coverage report to Codecov.io Score details Metric | Points | Description --------|--------|------------- contributors | 12 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 5 | More stars = more popular project forks | 15 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 13 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 130 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 243 branch via Branch, Jimmy Dee Adds Branch keys, custom URI schemes and domains to iOS and Android projects. Validates the Universal Link configuration for any Xcode project. Provided actions Name | Category | Description ------|----------|------------ **update_action_docs** | - | Generate a standard action page for each action **update_readme** | - | Update the contents of the README in this repo **branch_report** | project | Generate a brief summary or a full build report for your project. **setup_branch** | project | configuration for Xcode projects. **validate_universal_links** | project | Validates Universal Link configuration for an Xcode project. Score details Metric | Points | Description --------|--------|------------- contributors | 6 | The more contributors a project has, the more likely it is it stays alive subscribers | 24 | More subscribers = more popular project stars | 8 | More stars = more popular project forks | 5 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 15 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 35 | More downloads = more users have been using the plugin for a while tests | 80 | The more tests a plugin has, the better Open on GitHub 241 git_tags via Fernando Saragoca List git tags sorted by taggerdate Provided actions Name | Category | Description ------|----------|------------ **git_tags** | source_control | List git tags Score details Metric | Points | Description --------|--------|------------- contributors | 6 | The more contributors a project has, the more likely it is it stays alive subscribers | 0 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 17 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 139 | More downloads = more users have been using the plugin for a while tests | 9 | The more tests a plugin has, the better Open on GitHub 240 jira_versions via Sandy Chapman Manage your JIRA project's releases/versions with this plugin. Provided actions Name | Category | Description ------|----------|------------ **release_jira_version** | - | Releases a version in your JIRA project **create_jira_version** | - | Creates a new version in your JIRA project Score details Metric | Points | Description --------|--------|------------- contributors | 6 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 7 | More stars = more popular project forks | 5 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 19 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | -1 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 128 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 239 cosigner via Andr\u00e9 Pacheco Neves, Lu\u00eds Portela Afonso A pantograph plugin to help you sign your iOS builds Provided actions Name | Category | Description ------|----------|------------ **cosigner** | - | A pantograph plugin to help you sign your iOS builds Score details Metric | Points | Description --------|--------|------------- contributors | 12 | The more contributors a project has, the more likely it is it stays alive subscribers | 39 | More subscribers = more popular project stars | 21 | More stars = more popular project forks | 5 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 16 | Project that have been around for longer tend to be more stable major_release | 30 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 46 | More downloads = more users have been using the plugin for a while tests | 0 | The more tests a plugin has, the better Open on GitHub 236 applivery via Alejandro Jimenez Upload new build to Applivery Provided actions Name | Category | Description ------|----------|------------ **applivery** | beta | Upload new iOS or Android build to Applivery Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 9 | More subscribers = more popular project stars | 12 | More stars = more popular project forks | 20 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 20 | Project that have been around for longer tend to be more stable major_release | 30 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 72 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 236 latest_hockeyapp_version_number via Travis Palmer Easily fetch the most recent HockeyApp version number for your app Provided actions Name | Category | Description ------|----------|------------ **latest_hockeyapp_version_number** | - | Easily fetch the most recent HockeyApp version number for your app Score details Metric | Points | Description --------|--------|------------- contributors | 6 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 6 | More stars = more popular project forks | 5 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 25 | How well is the README of the document written age | 20 | Project that have been around for longer tend to be more stable major_release | 30 | Post 1.0 releases are great github_issues | -4 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 119 | More downloads = more users have been using the plugin for a while tests | 6 | The more tests a plugin has, the better Open on GitHub 229 gs_deliver via \u0421\u0435\u0440\u0433\u0435\u0438\u0306 \u0412\u0435\u0441\u0435\u043b\u043e\u0432\u0441\u043a\u0438\u0438\u0306 Gradoservice plugin to rule apps releases Provided actions Name | Category | Description ------|----------|------------ **gs_move_to_ready_for_sale** | - | Gradoservice plugin to rule apps releases **gs_remove_from_testflight_review** | - | Gradoservice plugin to rule apps releases **gs_get_release_notes** | - | Gradoservice plugin to rule apps releases **gs_get_app_status** | - | Gradoservice plugin to rule apps releases **gs_move_rc_to_beta_review** | - | Gradoservice plugin to rule apps releases **gs_start_external_testing** | - | Gradoservice plugin to rule apps releases **gs_reject_latest_version** | - | Gradoservice plugin to rule apps releases **gs_execute_command** | - | Gradoservice plugin to rule apps releases Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 1 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 25 | How well is the README of the document written age | 17 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 160 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 228 increment_version_name via fierysolid Increment the version name of your android project. Provided actions Name | Category | Description ------|----------|------------ **increment_version_name** | project | Increment the version name of your android project. Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 25 | How well is the README of the document written age | 20 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 157 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 226 download_file via Massimo Oliviero This action downloads a file from an HTTP/HTTPS url (e.g. ZIP file) and puts it in a destination path Provided actions Name | Category | Description ------|----------|------------ **download_file** | - | - Score details Metric | Points | Description --------|--------|------------- contributors | 6 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 1 | More stars = more popular project forks | 5 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 20 | Project that have been around for longer tend to be more stable major_release | 30 | Post 1.0 releases are great github_issues | -1 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 86 | More downloads = more users have been using the plugin for a while tests | 6 | The more tests a plugin has, the better Open on GitHub 219 s3_actions via Fernando Saragoca Download and upload files to AWS S3 Provided actions Name | Category | Description ------|----------|------------ **s3_download** | - | Download a file from AWS S3 **s3_check_file** | - | Check if file exists in AWS S3 **s3_upload** | - | Upload a file to AWS S3 Score details Metric | Points | Description --------|--------|------------- contributors | 6 | The more contributors a project has, the more likely it is it stays alive subscribers | 0 | More subscribers = more popular project stars | 1 | More stars = more popular project forks | 10 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 17 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | -1 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 116 | More downloads = more users have been using the plugin for a while tests | 0 | The more tests a plugin has, the better Open on GitHub 219 ci_changelog via icyleaf Automate generate changelog between previous build failed and the latest commit of scm in CI Provided actions Name | Category | Description ------|----------|------------ **ci_changelog** | - | Automate generate changelog between previous build failed and the latest commit of scm in CI. Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 6 | More subscribers = more popular project stars | 6 | More stars = more popular project forks | 5 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 19 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 33 | More downloads = more users have been using the plugin for a while tests | 80 | The more tests a plugin has, the better Open on GitHub 218 framer via DrAL3X Create images combining app screenshots with templates to make nice pictures for the App Store Provided actions Name | Category | Description ------|----------|------------ **framer** | - | Create images combining app screenshots to templates to make a nice \\'screenshot\\' to upload in App Store Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 12 | More subscribers = more popular project stars | 23 | More stars = more popular project forks | 5 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 19 | Project that have been around for longer tend to be more stable major_release | 30 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 11 | More downloads = more users have been using the plugin for a while tests | 48 | The more tests a plugin has, the better Open on GitHub 214 pretty_junit via GaryJohnson Pretty JUnit test results for your Android projects. Provided actions Name | Category | Description ------|----------|------------ **pretty_junit** | - | Pretty JUnit test results for your Android projects. Score details Metric | Points | Description --------|--------|------------- contributors | 6 | The more contributors a project has, the more likely it is it stays alive subscribers | 21 | More subscribers = more popular project stars | 1 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 25 | How well is the README of the document written age | 19 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 119 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 211 clean_testflight_testers via Felix Krause Automatically remove TestFlight testers that are not actually testing your app Provided actions Name | Category | Description ------|----------|------------ **clean_testflight_testers** | - | Automatically remove TestFlight testers that are not actually testing your app Score details Metric | Points | Description --------|--------|------------- contributors | 18 | The more contributors a project has, the more likely it is it stays alive subscribers | 6 | More subscribers = more popular project stars | 26 | More stars = more popular project forks | 15 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 13 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | -2 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 65 | More downloads = more users have been using the plugin for a while tests | 0 | The more tests a plugin has, the better Open on GitHub 211 blackberry_mam via Lyndsey Ferguson A pantograph plugin that works with Blackberry Dynamics (formerly Good Dynamics) provides Mobile Application Management Provided actions Name | Category | Description ------|----------|------------ **update_info_plist_for_blackberry_mam** | - | updates the plist so that the built application can be deployed and managed within BlackBerry's Good Dynamics Control Center for Enterprise Mobility Management. **blackberry_mam_network_check** | - | Checks to see if the required network ports for BlackBerry Dynamics are open on the network **blackberry_mam_version** | - | Checks the version of the installed Good framework Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 5 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 15 | Project that have been around for longer tend to be more stable major_release | 30 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 8 | More downloads = more users have been using the plugin for a while tests | 80 | The more tests a plugin has, the better Open on GitHub 211 upload_folder_to_s3 via teriiehina Upload a folder to S3 Provided actions Name | Category | Description ------|----------|------------ **upload_folder_to_s3** | - | Upload a folder to S3 Score details Metric | Points | Description --------|--------|------------- contributors | 30 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 7 | More stars = more popular project forks | 10 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 21 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 52 | More downloads = more users have been using the plugin for a while tests | 18 | The more tests a plugin has, the better Open on GitHub 210 patch via Jimmy Dee Apply and revert pattern-based patches to any text file. Provided actions Name | Category | Description ------|----------|------------ **apply_patch** | deprecated | Apply pattern-based patches to any text file. **revert_patch** | deprecated | Revert the action of apply_patch **patch** | project | Apply pattern-based patches to any text file. Score details Metric | Points | Description --------|--------|------------- contributors | 6 | The more contributors a project has, the more likely it is it stays alive subscribers | 6 | More subscribers = more popular project stars | 3 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 14 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 51 | More downloads = more users have been using the plugin for a while tests | 60 | The more tests a plugin has, the better Open on GitHub 208 sharethemeal via Helmut Januschka ShareTheMeal Provided actions Name | Category | Description ------|----------|------------ **sharethemeal** | - | Donate food via ShareTheMeal Score details Metric | Points | Description --------|--------|------------- contributors | 18 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 7 | More stars = more popular project forks | 10 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 19 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 78 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 206 xcconfig_actions via Maksym Grebenets Adds actions to pantograph to work with xcconfig files Provided actions Name | Category | Description ------|----------|------------ **build_settings_to_flags** | building | Map xcconfig build settings to compiler and linker build flags **read_xcconfig** | building | Read and resolve contents of xcconfig file and return as JSON **validate_xcconfig** | linting | Validate xcconfig file Score details Metric | Points | Description --------|--------|------------- contributors | 6 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 6 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 4 | Project that have been around for longer tend to be more stable major_release | 30 | Post 1.0 releases are great github_issues | -2 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 9 | More downloads = more users have been using the plugin for a while tests | 80 | The more tests a plugin has, the better Open on GitHub 205 automated_test_emulator_run_xing via Daniel Hartwich Starts n AVDs based on JSON file config. AVDs are created and configured according to user liking before instrumentation test process (started either via shell command or gradle) and killed/deleted after test process finishes. Provided actions Name | Category | Description ------|----------|------------ **automated_test_emulator_run_xing** | - | Starts AVD, based on AVD_setup.json file, before test launch and kills it after testing is done. Score details Metric | Points | Description --------|--------|------------- contributors | 36 | The more contributors a project has, the more likely it is it stays alive subscribers | 6 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 5 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 20 | Project that have been around for longer tend to be more stable major_release | 30 | Post 1.0 releases are great github_issues | -3 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 38 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 205 changelog_generator via Fernando Saragoca Changelog generation based on merged pull requests & tags Provided actions Name | Category | Description ------|----------|------------ **generate_changelog** | - | Changelog generation based on merged pull requests & tags **generate_release_changelog** | - | Changelog generation based on merged pull requests & tags, filtered by one or two tags Score details Metric | Points | Description --------|--------|------------- contributors | 12 | The more contributors a project has, the more likely it is it stays alive subscribers | 0 | More subscribers = more popular project stars | 8 | More stars = more popular project forks | 5 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 18 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | -2 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 94 | More downloads = more users have been using the plugin for a while tests | 0 | The more tests a plugin has, the better Open on GitHub 203 ftp via Allan Vialatte Simple ftp upload and download for Pantograph Provided actions Name | Category | Description ------|----------|------------ **ftp** | - | Upload and Download files via FTP Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 6 | More subscribers = more popular project stars | 27 | More stars = more popular project forks | 50 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 20 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | -3 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 30 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 203 cerberus via Harry Singh Cerberus is a pantograph plugin for extracting Jira issues from commit messages and sharing information on its respective Jenkins job and HockeyApp upload. Provided actions Name | Category | Description ------|----------|------------ **find_commits** | - | Extracts additional issues from the log **jira_comment** | - | This action adds comments on Jira issues with the current build number and url of that build **find_tickets** | - | Extracts the Jira issue keys between commits **release_notes** | - | - Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 57 | More subscribers = more popular project stars | 6 | More stars = more popular project forks | 15 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 7 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 18 | More downloads = more users have been using the plugin for a while tests | 30 | The more tests a plugin has, the better Open on GitHub 203 clubmate via KrauseFx Print the Club Mate logo in your build output Provided actions Name | Category | Description ------|----------|------------ **clubmate** | - | Print a Club Mate in your build output Score details Metric | Points | Description --------|--------|------------- contributors | 18 | The more contributors a project has, the more likely it is it stays alive subscribers | 6 | More subscribers = more popular project stars | 8 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 21 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 77 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 202 facelift via Richard Szalay Deprecated in favor of 'pantograph-plugin-act' Provided actions Name | Category | Description ------|----------|------------ **act** | - | Reconfigures .plists and icons inside a compiled IPA Score details Metric | Points | Description --------|--------|------------- contributors | 6 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 17 | More stars = more popular project forks | 10 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 19 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | -4 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 9 | More downloads = more users have been using the plugin for a while tests | 72 | The more tests a plugin has, the better Open on GitHub 201 jira_release_notes via Alexander Ignition Release notes from JIRA for version Provided actions Name | Category | Description ------|----------|------------ **jira_release_notes** | - | Jira release notes Score details Metric | Points | Description --------|--------|------------- contributors | 6 | The more contributors a project has, the more likely it is it stays alive subscribers | 18 | More subscribers = more popular project stars | 3 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 5 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 66 | More downloads = more users have been using the plugin for a while tests | 33 | The more tests a plugin has, the better Open on GitHub 201 localization via Viktor Malyi Export/import app localizations with help of xcodebuild -exportLocalizations/-importLocalizations tool Provided actions Name | Category | Description ------|----------|------------ **import_localizations** | - | Import app localizations with help of xcodebuild -importLocalizations tool **export_localizations** | - | Export app localizations with help of xcodebuild -exportLocalizations tool Score details Metric | Points | Description --------|--------|------------- contributors | 6 | The more contributors a project has, the more likely it is it stays alive subscribers | 0 | More subscribers = more popular project stars | 9 | More stars = more popular project forks | 15 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 20 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | -1 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 79 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 201 latest_hockey_build_number via Sergii Stotskyi, Kirill Pahnev Gets latest version number of the app with the bundle id from HockeyApp Provided actions Name | Category | Description ------|----------|------------ **latest_hockey_build_number** | - | Gets latest version number of the app with the bundle id from HockeyApp Score details Metric | Points | Description --------|--------|------------- contributors | 12 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 3 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 19 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 91 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 200 android_emulator via Michael Ruhl Creates and starts an Android Emulator (AVD) Provided actions Name | Category | Description ------|----------|------------ **android_emulator** | - | Creates and starts an Android Emulator (AVD) Score details Metric | Points | Description --------|--------|------------- contributors | 6 | The more contributors a project has, the more likely it is it stays alive subscribers | 18 | More subscribers = more popular project stars | 5 | More stars = more popular project forks | 30 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 11 | Project that have been around for longer tend to be more stable major_release | 30 | Post 1.0 releases are great github_issues | -2 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 26 | More downloads = more users have been using the plugin for a while tests | 6 | The more tests a plugin has, the better Open on GitHub 200 jira_set_fix_version via Tommy Sadiq Hinrichsen Tags all Jira issues mentioned in git changelog with with a fix version from parameter :name Provided actions Name | Category | Description ------|----------|------------ **jira_set_fix_version** | - | Tags all Jira issues mentioned in git changelog with with a fix version from parameter :name Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 9 | More subscribers = more popular project stars | 3 | More stars = more popular project forks | 10 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 11 | Project that have been around for longer tend to be more stable major_release | 30 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 64 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 196 giffy via SiarheiFiedartsou Pantograph plugin for Giffy.com API Provided actions Name | Category | Description ------|----------|------------ **giffy_random_sticker_url** | - | Allows to obtain URL to some random GIF sticker from Giffy.com **giffy_random_gif_url** | - | Allows to obtain URL to some random funny GIF from Giffy.com Score details Metric | Points | Description --------|--------|------------- contributors | 12 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 5 | More stars = more popular project forks | 5 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 19 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 70 | More downloads = more users have been using the plugin for a while tests | 12 | The more tests a plugin has, the better Open on GitHub 195 xamarin_build via punksta Build xamarin android\\ios projects Provided actions Name | Category | Description ------|----------|------------ **extract_certificate** | - | Extract certificate public key from provision profile **xamarin_update_configuration** | - | Set properties of specific build configuration in Xamarin configuration file **xamarin_build** | - | Build xamarin android and ios projects Score details Metric | Points | Description --------|--------|------------- contributors | 24 | The more contributors a project has, the more likely it is it stays alive subscribers | 9 | More subscribers = more popular project stars | 7 | More stars = more popular project forks | 40 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 20 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | -1 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 23 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 192 instabug via Siarhei Fiedartsou Uploads dSYM to Instabug Provided actions Name | Category | Description ------|----------|------------ **instabug** | - | - Score details Metric | Points | Description --------|--------|------------- contributors | 6 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 1 | More stars = more popular project forks | 10 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 21 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 60 | More downloads = more users have been using the plugin for a while tests | 21 | The more tests a plugin has, the better Open on GitHub 186 android_change_package_identifier via MaximusMcCann Change the package identifier in the AndroidManifest.xml file. Can revert as well. Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 0 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 0 | How well is the README of the document written age | 0 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 166 | More downloads = more users have been using the plugin for a while tests | 0 | The more tests a plugin has, the better Open website (no GitHub link provided in gemspec) 184 altool via Shashikant Jagtap Upload IPA to iTunes Connect using altool Provided actions Name | Category | Description ------|----------|------------ **altool** | - | Upload IPA to iTunes Connect using altool Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 6 | More subscribers = more popular project stars | 12 | More stars = more popular project forks | 30 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 11 | Project that have been around for longer tend to be more stable major_release | 30 | Post 1.0 releases are great github_issues | -1 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 23 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 183 instrumented_tests via Silviu Paragina New action to run instrumented tests for android. This plugin creates and boots an emulator before running a gradle command so that you can run instrumented tests against that emulator. After the gradle command is executed, the avd gets shut down and deleted. This is really helpful on CI services, keeping them clean and always having a fresh avd for testing. Provided actions Name | Category | Description ------|----------|------------ **instrumented_tests** | - | Run android instrumented tests via a gradle command againts a newly created avd Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 9 | More subscribers = more popular project stars | 14 | More stars = more popular project forks | 15 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 20 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | -4 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 56 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 183 android_sdk_update via Philipp Burgk, Michael Ruhl Install required Android-SDK packages Provided actions Name | Category | Description ------|----------|------------ **android_sdk_update** | - | Install and update required Android-SDK packages Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 30 | More subscribers = more popular project stars | 5 | More stars = more popular project forks | 5 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 15 | Project that have been around for longer tend to be more stable major_release | 30 | Post 1.0 releases are great github_issues | -1 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 20 | More downloads = more users have been using the plugin for a while tests | 9 | The more tests a plugin has, the better Open on GitHub 182 demo_mode via Florian Rauscha Sets your connected android devices to demo mode Provided actions Name | Category | Description ------|----------|------------ **demo_mode** | - | Sets your device to demo mode Score details Metric | Points | Description --------|--------|------------- contributors | 12 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 4 | More stars = more popular project forks | 5 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 15 | Project that have been around for longer tend to be more stable major_release | 30 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 40 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 182 xcodegen via Michael Ruhl Run xcodegen for the project Provided actions Name | Category | Description ------|----------|------------ **xcodegen** | - | Runs `xcodegen` for the project Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 30 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 9 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 64 | More downloads = more users have been using the plugin for a while tests | 9 | The more tests a plugin has, the better Open on GitHub 176 gmail via Alexander Ignition send mail from gmail Provided actions Name | Category | Description ------|----------|------------ **gmail** | - | A short description with < = 80 characters of what this action does Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 18 | More subscribers = more popular project stars | 6 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 5 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 62 | More downloads = more users have been using the plugin for a while tests | 15 | The more tests a plugin has, the better Open on GitHub 175 sftp via Oliver Limberg Plugin to upload files via SFTP Provided actions Name | Category | Description ------|----------|------------ **sftp_download** | misc | download files from a remote Server via SFTP **sftp_upload** | misc | upload files to a remote Server via SFTP Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 5 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 4 | Project that have been around for longer tend to be more stable major_release | 30 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 3 | More downloads = more users have been using the plugin for a while tests | 60 | The more tests a plugin has, the better Open on GitHub 175 store_sizer via Marcelo Oliveira Estimates download and install sizes for your app, also checks if sizes fit the requirements Provided actions Name | Category | Description ------|----------|------------ **store_size_xcarchive_check** | - | Checks if the size report fits the requirements **store_size_xcarchive** | - | Estimates download and install sizes for your app Score details Metric | Points | Description --------|--------|------------- contributors | 12 | The more contributors a project has, the more likely it is it stays alive subscribers | 0 | More subscribers = more popular project stars | 11 | More stars = more popular project forks | 5 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 14 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | -2 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 26 | More downloads = more users have been using the plugin for a while tests | 39 | The more tests a plugin has, the better Open on GitHub 174 firebase_test_lab_android via wasabeef Test your app with Firebase Test Lab with ease using pantograph Provided actions Name | Category | Description ------|----------|------------ **firebase_test_lab_android** | - | Runs Android tests in Firebase Test Lab. Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 51 | More subscribers = more popular project stars | 18 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 4 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 31 | More downloads = more users have been using the plugin for a while tests | 0 | The more tests a plugin has, the better Open on GitHub 174 gs_project_flow_ios via \u0421\u0435\u0440\u0433\u0435\u0438\u0306 \u0412\u0435\u0441\u0435\u043b\u043e\u0432\u0441\u043a\u0438\u0438\u0306 Plugin contains project flow code for code sharing between projects Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 0 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 0 | How well is the README of the document written age | 0 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 154 | More downloads = more users have been using the plugin for a while tests | 0 | The more tests a plugin has, the better Open website (no GitHub link provided in gemspec) 172 transporter via Maksym Grebenets Manage Apple iTMSTransporter installation Provided actions Name | Category | Description ------|----------|------------ **configure_transporter** | - | Configure Apple iTMSTransporter installation **update_transporter_path** | - | Configure Pantograph to use custom Transporter installation **install_transporter** | - | Install Apple iTMSTransporter Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 1 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 3 | Project that have been around for longer tend to be more stable major_release | 30 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 5 | More downloads = more users have been using the plugin for a while tests | 60 | The more tests a plugin has, the better Open on GitHub 170 upload_symbols_to_new_relic via Helmut Januschka Uploads dSym to New Relic Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 0 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 0 | How well is the README of the document written age | 0 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 150 | More downloads = more users have been using the plugin for a while tests | 0 | The more tests a plugin has, the better Open website (no GitHub link provided in gemspec) 169 jira_transition via Valerio Mazzeo Apply a JIRA transition to issues mentioned in the changelog Provided actions Name | Category | Description ------|----------|------------ **jira_transition** | - | Apply a JIRA transition to issues mentioned in the changelog Score details Metric | Points | Description --------|--------|------------- contributors | 6 | The more contributors a project has, the more likely it is it stays alive subscribers | 6 | More subscribers = more popular project stars | 12 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 25 | How well is the README of the document written age | 21 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 76 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 169 waldo via J. G. Pusey Upload build to Waldo Provided actions Name | Category | Description ------|----------|------------ **waldo** | testing | Upload a new build to [Waldo](https://www.waldo.io) Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 12 | More subscribers = more popular project stars | 5 | More stars = more popular project forks | 5 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 9 | Project that have been around for longer tend to be more stable major_release | 30 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 35 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 169 ensure_xcode_build_version via Fumiya Nakamura Ensure Xcode Build Version for working with Beta, GM and Release Provided actions Name | Category | Description ------|----------|------------ **ensure_xcode_build_version** | - | Ensure the selected Xcode Build version with xcode-select matches a value Score details Metric | Points | Description --------|--------|------------- contributors | 6 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 2 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 19 | Project that have been around for longer tend to be more stable major_release | 30 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 24 | More downloads = more users have been using the plugin for a while tests | 15 | The more tests a plugin has, the better Open on GitHub 168 android_change_string_app_name via MaximusMcCann Change the app_name in the strings.xml file & revert method Provided actions Name | Category | Description ------|----------|------------ **android_change_string_app_name** | - | Change the app_name in the strings.xml file & revert method **android_change_string_app_name_revert** | - | Revert strings.xml app_name using ANDROID_CHANGE_STRING_APP_NAME_ORIGINAL_NAME Score details Metric | Points | Description --------|--------|------------- contributors | 12 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 5 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 25 | How well is the README of the document written age | 18 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 82 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 168 rocket_chat via Thiago Felix Send message to Rocket.Chat right from pantograph Provided actions Name | Category | Description ------|----------|------------ **rocket_chat** | - | Send a success/error message to your RocketChat group Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 0 | More subscribers = more popular project stars | 6 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 19 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | -1 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 65 | More downloads = more users have been using the plugin for a while tests | 9 | The more tests a plugin has, the better Open on GitHub 167 msbuild via Jeff Ward Build a Xamarin.iOS or Xamarin.Android project using msbuild Provided actions Name | Category | Description ------|----------|------------ **msbuild** | - | Build a Xamarin.iOS or Xamarin.Android project using msbuild **assembly_info_poke_version** | - | Set the version in an AssemblyInfo.cs file. Optionally only set the revision number **nuget_pack** | - | Package a nuspec **nuspec_poke_version** | - | Set the version in a Nuspec file. Optionally only set the revision number Score details Metric | Points | Description --------|--------|------------- contributors | 6 | The more contributors a project has, the more likely it is it stays alive subscribers | 27 | More subscribers = more popular project stars | 4 | More stars = more popular project forks | 5 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 25 | How well is the README of the document written age | 16 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | -2 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 66 | More downloads = more users have been using the plugin for a while tests | 0 | The more tests a plugin has, the better Open on GitHub 167 polidea via Piotrek Dubiel Polidea's pantograph action Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 0 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 0 | How well is the README of the document written age | 0 | Project that have been around for longer tend to be more stable major_release | 30 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 117 | More downloads = more users have been using the plugin for a while tests | 0 | The more tests a plugin has, the better Open website (no GitHub link provided in gemspec) 165 twine via Jonas Rottmann A pantograph plugin providing actions related to twine Provided actions Name | Category | Description ------|----------|------------ **twine_generate** | building | Generates all localization files specified by the configuration file **twine_check** | building | Checks the source twine file against the localization file to make sure they are in sync **twine_validate** | building | Validates all twine files mentioned in the config file Score details Metric | Points | Description --------|--------|------------- contributors | 6 | The more contributors a project has, the more likely it is it stays alive subscribers | 6 | More subscribers = more popular project stars | 4 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 11 | Project that have been around for longer tend to be more stable major_release | 30 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 2 | More downloads = more users have been using the plugin for a while tests | 36 | The more tests a plugin has, the better Open on GitHub 163 lokalise via Abbas Jaffery Sync metadata with Lokalise Provided actions Name | Category | Description ------|----------|------------ **add_keys_to_lokalise** | - | Add keys to lokalise **lokalise** | - | Download Lokalise localization **lokalise_metadata** | - | Upload metadata to lokalise. Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 0 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 5 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 4 | Project that have been around for longer tend to be more stable major_release | 30 | Post 1.0 releases are great github_issues | -1 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 52 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 163 github_status via Michael Furtak Provides the ability to display and act upon GitHub server status as part of your build Provided actions Name | Category | Description ------|----------|------------ **github_status** | - | Provides the ability to check on GitHub server status as part of your build Score details Metric | Points | Description --------|--------|------------- contributors | 6 | The more contributors a project has, the more likely it is it stays alive subscribers | 0 | More subscribers = more popular project stars | 8 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 21 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 10 | More downloads = more users have been using the plugin for a while tests | 48 | The more tests a plugin has, the better Open on GitHub 162 snapshot_test via Moyuru Aizawa Compare snapshots Provided actions Name | Category | Description ------|----------|------------ **take_screenshot** | - | Take screenshots Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 60 | More subscribers = more popular project stars | 4 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 1 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 15 | More downloads = more users have been using the plugin for a while tests | 12 | The more tests a plugin has, the better Open on GitHub 162 google_sheet_localize via Mario Hahn Creates .strings files for iOS and strings.xml files for Android Provided actions Name | Category | Description ------|----------|------------ **google_sheet_localize** | - | Creates .strings files for iOS and strings.xml files for Android Score details Metric | Points | Description --------|--------|------------- contributors | 6 | The more contributors a project has, the more likely it is it stays alive subscribers | 15 | More subscribers = more popular project stars | 8 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 4 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | -1 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 57 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 161 simctl via Renzo Crisostomo Pantograph plugin to interact with xcrun simctl Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 0 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 0 | How well is the README of the document written age | 0 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 141 | More downloads = more users have been using the plugin for a while tests | 0 | The more tests a plugin has, the better Open website (no GitHub link provided in gemspec) 160 souyuz via Felix Rudat A pantograph component to make Xamarin builds a breeze Provided actions Name | Category | Description ------|----------|------------ **app_version** | - | Easily set or print app version with `app_version` **souyuz** | - | Easily build and sign your app using `souyuz` Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 9 | More subscribers = more popular project stars | 28 | More stars = more popular project forks | 30 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 25 | How well is the README of the document written age | 21 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | -4 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 31 | More downloads = more users have been using the plugin for a while tests | 0 | The more tests a plugin has, the better Open on GitHub 160 bugsee via Dmitry Fink Bugsee symbols uploader Provided actions Name | Category | Description ------|----------|------------ **upload_symbols_to_bugsee** | - | - Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 1 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 17 | Project that have been around for longer tend to be more stable major_release | 30 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 36 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 157 xcov_report via Gianfranco Manganiello Generate custom HTML for coverage Provided actions Name | Category | Description ------|----------|------------ **xcov_report** | - | Generate custom HTML for coverage Score details Metric | Points | Description --------|--------|------------- contributors | 18 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 4 | More stars = more popular project forks | 5 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 13 | Project that have been around for longer tend to be more stable major_release | 30 | Post 1.0 releases are great github_issues | -3 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 14 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 157 ionic_integration via Adrian Regan Integrating Pantograph with Ionic Generated Projects Provided actions Name | Category | Description ------|----------|------------ **ionic_ios_config_snapshot** | - | Create a Sample iOS UI Unit Test to get started with in a generated Ionic/Cordova project **ionic_ios_snapshot** | - | Bridge between Ionic/Cordova Projects and Pantograph for Automated Snapshot Generation for iOS Projects Score details Metric | Points | Description --------|--------|------------- contributors | 12 | The more contributors a project has, the more likely it is it stays alive subscribers | 6 | More subscribers = more popular project stars | 22 | More stars = more popular project forks | 10 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 15 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | -4 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 11 | More downloads = more users have been using the plugin for a while tests | 15 | The more tests a plugin has, the better Open on GitHub 156 verify_ipa via Derek Yang Verify various aspects of iOS ipa file Provided actions Name | Category | Description ------|----------|------------ **verify_ipa_files** | - | Verify files in ipa file **verify_ipa_entitlements** | - | Verify ipa entitlements Score details Metric | Points | Description --------|--------|------------- contributors | 6 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 3 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 16 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 7 | More downloads = more users have been using the plugin for a while tests | 51 | The more tests a plugin has, the better Open on GitHub 155 app_info via icyleaf Teardown tool for mobile app(ipa/apk), analysis metedata like version, name, icon etc. Provided actions Name | Category | Description ------|----------|------------ **app_info** | - | Parse and dump mobile app(ipa/apk) metedata. Score details Metric | Points | Description --------|--------|------------- contributors | 6 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 1 | More stars = more popular project forks | 5 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 17 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 14 | More downloads = more users have been using the plugin for a while tests | 39 | The more tests a plugin has, the better Open on GitHub 154 automated_test_emulator_run_mik via Kamil Krzyk Starts n AVDs based on JSON file config. AVDs are created and configured according to user liking before instrumentation test process (started either via shell command or gradle) and killed/deleted after test process finishes. Provided actions Name | Category | Description ------|----------|------------ **automated_test_emulator_run** | - | Starts AVD, based on AVD_setup.json file, before test launch and kills it after testing is done. Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 20 | Project that have been around for longer tend to be more stable major_release | 30 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 28 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 153 xcpretty_report via Fernando Saragoca Generate xcodebuild reports using xcpretty Provided actions Name | Category | Description ------|----------|------------ **xcpretty_report** | - | xcpretty Score details Metric | Points | Description --------|--------|------------- contributors | 6 | The more contributors a project has, the more likely it is it stays alive subscribers | 0 | More subscribers = more popular project stars | 1 | More stars = more popular project forks | 5 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 17 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 54 | More downloads = more users have been using the plugin for a while tests | 0 | The more tests a plugin has, the better Open on GitHub 152 hours via Rishabh Tayal Record total time saved by pantograph Provided actions Name | Category | Description ------|----------|------------ **hours** | - | Record total time saved by pantograph Score details Metric | Points | Description --------|--------|------------- contributors | 6 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 3 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 12 | Project that have been around for longer tend to be more stable major_release | 30 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 25 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 152 trigger_bitrise_build via Nick Hammond Trigger a Bitrise build from Pantograph Provided actions Name | Category | Description ------|----------|------------ **trigger_bitrise_build** | - | Trigger a Bitrise build from Pantograph Score details Metric | Points | Description --------|--------|------------- contributors | 6 | The more contributors a project has, the more likely it is it stays alive subscribers | 12 | More subscribers = more popular project stars | 2 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 12 | Project that have been around for longer tend to be more stable major_release | 30 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 17 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 151 aws_sns via Josh Holtz Creates AWS SNS platform applications Provided actions Name | Category | Description ------|----------|------------ **aws_sns** | - | Creates AWS SNS platform applications Score details Metric | Points | Description --------|--------|------------- contributors | 6 | The more contributors a project has, the more likely it is it stays alive subscribers | 6 | More subscribers = more popular project stars | 8 | More stars = more popular project forks | 5 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 25 | How well is the README of the document written age | 18 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | -1 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 61 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 149 bluepill via tbrand Pantograph plugin to use bluepill in pantograph Provided actions Name | Category | Description ------|----------|------------ **bluepill** | - | Plugin to use bluepill in pantograph Score details Metric | Points | Description --------|--------|------------- contributors | 6 | The more contributors a project has, the more likely it is it stays alive subscribers | 15 | More subscribers = more popular project stars | 13 | More stars = more popular project forks | 15 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 16 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | -2 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 13 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 149 remove_setting via Colin Harris Pantograph plugin to remove settings from an iOS settings bundle Provided actions Name | Category | Description ------|----------|------------ **remove_setting** | project | Pantograph plugin action to remove settings in an iOS settings bundle Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 1 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 13 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 2 | More downloads = more users have been using the plugin for a while tests | 60 | The more tests a plugin has, the better Open on GitHub 148 compilation_time_report via Tinkoff.ru Generate custom HTML report compilation time of each Swift func Provided actions Name | Category | Description ------|----------|------------ **compilation_time_report** | - | Generate custom HTML report compilation time of each Swift func Score details Metric | Points | Description --------|--------|------------- contributors | 6 | The more contributors a project has, the more likely it is it stays alive subscribers | 24 | More subscribers = more popular project stars | 5 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 5 | Project that have been around for longer tend to be more stable major_release | 30 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 5 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 148 dropbox via Dominik Kapusta Uploads files to Dropbox Provided actions Name | Category | Description ------|----------|------------ **dropbox** | - | Uploads files to Dropbox Score details Metric | Points | Description --------|--------|------------- contributors | 12 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 2 | More stars = more popular project forks | 5 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 11 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 30 | More downloads = more users have been using the plugin for a while tests | 15 | The more tests a plugin has, the better Open on GitHub 147 appbox via Vineet Choudhary Deploy Development, Ad-Hoc and In-house (Enterprise) iOS applications directly to the devices from your Dropbox account. Provided actions Name | Category | Description ------|----------|------------ **appbox** | - | Deploy Development, Ad-Hoc and In-house (Enterprise) iOS applications directly to the devices from your Dropbox account. Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 5 | More stars = more popular project forks | 25 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 5 | Project that have been around for longer tend to be more stable major_release | 30 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 6 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 147 poeditor_export via James Campbell Exports translations from POEditor.com Provided actions Name | Category | Description ------|----------|------------ **poeditor_export** | - | Exports translations from POEditor.com Score details Metric | Points | Description --------|--------|------------- contributors | 6 | The more contributors a project has, the more likely it is it stays alive subscribers | 6 | More subscribers = more popular project stars | 8 | More stars = more popular project forks | 5 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 20 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 29 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 146 git_status via Bruno Coelho Show the status of one or multiple files/directories Provided actions Name | Category | Description ------|----------|------------ **git_status** | - | Show the status of one or multiple files/directories Score details Metric | Points | Description --------|--------|------------- contributors | 6 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 18 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 40 | More downloads = more users have been using the plugin for a while tests | 9 | The more tests a plugin has, the better Open on GitHub 146 flurry via Akash Duseja Upload dSYM symbolication files to Flurry Provided actions Name | Category | Description ------|----------|------------ **flurry_upload_dsym** | misc | Upload dSYM symbolication files to Flurry Score details Metric | Points | Description --------|--------|------------- contributors | 6 | The more contributors a project has, the more likely it is it stays alive subscribers | 30 | More subscribers = more popular project stars | 1 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 18 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 9 | More downloads = more users have been using the plugin for a while tests | 12 | The more tests a plugin has, the better Open on GitHub 146 get_android_version via MaximusMcCann gets the android versionName and versionCode from the AndroidManifest.xml file located in the provided apk Provided actions Name | Category | Description ------|----------|------------ **get_android_version** | - | Gets the android versionName, versionCode and parsed appName (label) from AndroidManifest.xml file in provided apk Score details Metric | Points | Description --------|--------|------------- contributors | 6 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 3 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 25 | How well is the README of the document written age | 18 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 68 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 145 versioning_ios via Igor Lamo\u0161 iOS Versioning Plugin for Pantograph Provided actions Name | Category | Description ------|----------|------------ **ios_set_build_number** | - | Set the Build Number of your iOS project **ios_get_build_number** | - | Get the Build Number of your iOS project **ios_set_version** | - | Set the Version of your iOS project **ios_get_version** | - | Get the Version of your iOS project Score details Metric | Points | Description --------|--------|------------- contributors | 6 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 3 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 25 | How well is the README of the document written age | 12 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 25 | More downloads = more users have been using the plugin for a while tests | 51 | The more tests a plugin has, the better Open on GitHub 143 tunes via Boris Bu\u0308gling Play music using pantograph, because you can. Provided actions Name | Category | Description ------|----------|------------ **tunes** | - | Play music using pantograph, because you can Score details Metric | Points | Description --------|--------|------------- contributors | 12 | The more contributors a project has, the more likely it is it stays alive subscribers | 6 | More subscribers = more popular project stars | 8 | More stars = more popular project forks | 10 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 21 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | -1 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 17 | More downloads = more users have been using the plugin for a while tests | 0 | The more tests a plugin has, the better Open on GitHub 142 flutter via Artem Sheremet Flutter actions plugin for Pantograph Provided actions Name | Category | Description ------|----------|------------ **flutter_bootstrap** | - | Flutter SDK installation, upgrade and application bootstrap **flutter** | - | Run \"flutter\" binary with the specified arguments **flutter_build** | building | - **flutter_generate** | - | 1. Run `build_runner build` if build_runner is in dev_dependencies\\n2. According to `package:intl`, take `$strings_file` and generate `${strings_file.dirname}/arb/intl_messages.arb`, then take all files matching `${strings_file.dirname}/intl_*.arb`, fix them and generate .dart files from them Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 6 | More stars = more popular project forks | 5 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 9 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 49 | More downloads = more users have been using the plugin for a while tests | 0 | The more tests a plugin has, the better Open on GitHub 142 wait_xcrun via Maksym Grebenets Wait for Xcode toolchain to come back online after switching Xcode versions. Provided actions Name | Category | Description ------|----------|------------ **wait_xcrun** | - | Wait for Xcode toolchain to come back online after switching Xcode versions. Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 1 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 19 | Project that have been around for longer tend to be more stable major_release | 30 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 13 | More downloads = more users have been using the plugin for a while tests | 6 | The more tests a plugin has, the better Open on GitHub 141 raven via Marten Klitzke Plugin to manage Releases and upload JS Sourcemaps Provided actions Name | Category | Description ------|----------|------------ **raven** | - | Create new Sentry/Raven Release and Upload Sourcemaps Score details Metric | Points | Description --------|--------|------------- contributors | 18 | The more contributors a project has, the more likely it is it stays alive subscribers | 30 | More subscribers = more popular project stars | 2 | More stars = more popular project forks | 5 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 25 | How well is the README of the document written age | 16 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | -1 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 23 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 141 set_jira_fix_version via yuriy-tolstoguzov Adds fix version to specified JIRA issues. Creates version if needed Provided actions Name | Category | Description ------|----------|------------ **set_jira_fix_version** | misc | Adds fix version to specified JIRA issues. Creates version if needed **jira_issue_keys_from_changelog** | misc | Gets list of JIRA issues kyes from git log starting from specified tag Score details Metric | Points | Description --------|--------|------------- contributors | 6 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 2 | More stars = more popular project forks | 5 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 25 | How well is the README of the document written age | 16 | Project that have been around for longer tend to be more stable major_release | 30 | Post 1.0 releases are great github_issues | -1 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 32 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 140 clang_analyzer via Siarhei Fiedartsou Runs Clang Static Analyzer(http://clang-analyzer.llvm.org/) and generates report Provided actions Name | Category | Description ------|----------|------------ **clang_analyzer** | - | Runs Clang Static Analyzer(http://clang-analyzer.llvm.org/) and generates report Score details Metric | Points | Description --------|--------|------------- contributors | 6 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 5 | More stars = more popular project forks | 15 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 19 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 16 | More downloads = more users have been using the plugin for a while tests | 6 | The more tests a plugin has, the better Open on GitHub 140 branding via Stefan Natchev Add some branding to your pantograph output Provided actions Name | Category | Description ------|----------|------------ **branding** | - | Add some branding to your pantograph output Score details Metric | Points | Description --------|--------|------------- contributors | 12 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 11 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 21 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 20 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 140 code_static_analyzer via Olga Kniazska Runs different Static Analyzers and generate report Provided actions Name | Category | Description ------|----------|------------ **ruby_analyzer** | - | This analyzer detect warnings, errors and check syntax in ruby files. This is based on rubocop **cpd_analyzer** | - | This analyzer detect copy paste code (it uses PMD CPD) **clang_analyzer** | - | A short description with < = 80 characters of what this action does **warning_analyzer** | - | This analyzer detect warnings in Xcode projects. **code_static_analyzer** | - | - Score details Metric | Points | Description --------|--------|------------- contributors | 6 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 5 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 17 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 36 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 139 humanable_build_number via icyleaf Automatic generate app build number unque and human readable friendly, like yymmHHMM. both support iOS and Android. Provided actions Name | Category | Description ------|----------|------------ **humanable_build_number** | - | Automatic generate app build number unque and human readable friendly, like yymmHHMM. both support iOS and Android. Score details Metric | Points | Description --------|--------|------------- contributors | 6 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 2 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 17 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 38 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 139 slack_train via Felix Krause Show a train of the pantograph progress Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 0 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 0 | How well is the README of the document written age | 0 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 119 | More downloads = more users have been using the plugin for a while tests | 0 | The more tests a plugin has, the better Open website (no GitHub link provided in gemspec) 137 translation via Jakob Jensen Handling translations from Google sheet. Provided actions Name | Category | Description ------|----------|------------ **create_translation** | - | Create sheet for translations in Google sheets. **translation** | - | Output translations from Google sheet into templates. Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 6 | More subscribers = more popular project stars | 3 | More stars = more popular project forks | 10 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 25 | How well is the README of the document written age | 17 | Project that have been around for longer tend to be more stable major_release | 30 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 23 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 137 properties via Pavlo Pakholka Adds 4 actions to pantograph to read and update properties files. Provided actions Name | Category | Description ------|----------|------------ **increment_version_name_in_properties_file** | - | Sets a value of a setting in .properties file. **set_properties_value** | - | Sets a value of a setting in .properties file. **get_properties_value** | - | Reads a value of a setting from .properties file. **increment_version_code_in_properties_file** | - | Increase version code inside .properties file. Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 1 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 1 | Project that have been around for longer tend to be more stable major_release | 30 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 17 | More downloads = more users have been using the plugin for a while tests | 15 | The more tests a plugin has, the better Open on GitHub 136 docker via Manu Wallner pantograph Actions to support building images, logging into Docker Hub, and pushing those images to the Hub Provided actions Name | Category | Description ------|----------|------------ **docker_build** | - | Build docker images in the current directory **docker_login** | - | Login to Docker Hub **ensure_docker_machine_available** | - | Makes sure a docker machine is created and available for us to use **docker_compose** | - | Define and run multi-container applications with Docker **docker_push** | - | Push a docker image to its' repository Score details Metric | Points | Description --------|--------|------------- contributors | 12 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 6 | More stars = more popular project forks | 10 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 18 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | -1 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 15 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 136 google_cloud_storage via Fernando Saragoca Google Cloud Storage Provided actions Name | Category | Description ------|----------|------------ **google_cloud_storage_check_file** | - | Check if file exists in Google Cloud Storage **google_cloud_storage_download** | - | Download a file from Google Cloud Storage **google_cloud_storage_upload** | - | Upload a file to Google Cloud Storage Score details Metric | Points | Description --------|--------|------------- contributors | 6 | The more contributors a project has, the more likely it is it stays alive subscribers | 0 | More subscribers = more popular project stars | 2 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 17 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | -3 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 44 | More downloads = more users have been using the plugin for a while tests | 0 | The more tests a plugin has, the better Open on GitHub 135 firebase_management via Ackee Unofficial tool to access Firebase project settings Provided actions Name | Category | Description ------|----------|------------ **firebase_management_add_app** | - | Add new app to Firebase project **firebase_management_list** | - | List all Firebase projects and their apps **firebase_management_download_config** | - | Download configuration file for Firebase app Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 12 | More subscribers = more popular project stars | 2 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 15 | Project that have been around for longer tend to be more stable major_release | 30 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 3 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 134 firebase via Tomas Kohout Unofficial tool to access Firebase project settings Provided actions Name | Category | Description ------|----------|------------ **firebase_delete_client** | - | An unofficial tool to access Firebase **firebase_add_client** | - | An unofficial tool to access Firebase **firebase_list** | - | An unofficial tool to access Firebase **firebase_download_config** | - | An unofficial tool to access Firebase **firebase_upload_certificate** | - | An unofficial tool to access Firebase Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 6 | More subscribers = more popular project stars | 23 | More stars = more popular project forks | 10 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 15 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | -4 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 11 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 133 ascii_art via Boris Bu\u0308gling Add some fun to your pantograph output. Provided actions Name | Category | Description ------|----------|------------ **ascii_art** | - | Add some fun to your pantograph output. Score details Metric | Points | Description --------|--------|------------- contributors | 6 | The more contributors a project has, the more likely it is it stays alive subscribers | 6 | More subscribers = more popular project stars | 20 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 21 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 7 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 133 android_emulator-kami via Michael Ruhl Creates and starts an Android Emulator (AVD) Provided actions Name | Category | Description ------|----------|------------ **android_emulator_kami** | - | Creates and starts an Android Emulator (AVD) Score details Metric | Points | Description --------|--------|------------- contributors | 12 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 11 | Project that have been around for longer tend to be more stable major_release | 30 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 1 | More downloads = more users have been using the plugin for a while tests | 6 | The more tests a plugin has, the better Open on GitHub 132 napp_distribution via Mads M\u00f8ller Upload IPA AND APK builds to Napp Distribution Provided actions Name | Category | Description ------|----------|------------ **napp_distribution** | - | Upload builds to Napp Distribution Center Score details Metric | Points | Description --------|--------|------------- contributors | 6 | The more contributors a project has, the more likely it is it stays alive subscribers | 0 | More subscribers = more popular project stars | 1 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 15 | Project that have been around for longer tend to be more stable major_release | 30 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 7 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 131 provisioning via Pawel Jankowski Helps provision your app in the CI environment Provided actions Name | Category | Description ------|----------|------------ **set_key_partition_list** | - | Sets key partition list (required by macOS Sierra) **install_profiles** | - | Install profiles from specified directory Score details Metric | Points | Description --------|--------|------------- contributors | 6 | The more contributors a project has, the more likely it is it stays alive subscribers | 0 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 17 | Project that have been around for longer tend to be more stable major_release | 30 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 5 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 129 airwatch_workspaceone via Ram Awadhesh Sharan The main purpose of this plugin is to upload an IPA or an APK file to an AirWatch or Workspace ONE enterprise instance/console. Provided actions Name | Category | Description ------|----------|------------ **add_or_update_assignments** | - | The main purpose of this action is to add a new smart group assignment to an application or to update an existing smart group assignment of an application with a given dictionary of deployment/assignment parameters. If a smart group name is provided which does not exist yet on Console, assignment for that smart group is ignored. **unretire_specific_version** | - | The main purpose of this action is to unretire a specific version of an application. This action takes a string parameter where you can specify the version number to unretire. **retire_previous_versions** | - | The main purpose of this action is to retire previous active versions of an application. This action takes a string parameter where you can specify the number of latest versions to keep if you do not want to retire all the previous active versions. **delete_specific_version** | - | The main purpose of this action is to delete a specific version of an application. This action takes a string parameter where you can specify the version number to delete. **deploy_build** | - | The main purpose of this action is to upload an IPA or an APK file to an AirWatch or Workspace ONE enterprise console. **delete_previous_versions** | - | The main purpose of this action is to delete versions of an application. This action takes a string parameter where you can specify the number of latest versions to keep if you do not want to delete all the versions. **retire_specific_version** | - | The main purpose of this action is to retire a specific version of an application. This action takes a string parameter where you can specify the version number to retire. **unretire_all_versions** | - | The main purpose of this action is to unretire all retired versions of an application. Score details Metric | Points | Description --------|--------|------------- contributors | 6 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 1 | More stars = more popular project forks | 5 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 2 | Project that have been around for longer tend to be more stable major_release | 30 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 9 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 128 dmg via Alexey Dvoryanskiy Easily create dmg for your Mac app Provided actions Name | Category | Description ------|----------|------------ **dmg** | misc | Create DMG for your Mac app Score details Metric | Points | Description --------|--------|------------- contributors | 6 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 2 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 12 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 8 | More downloads = more users have been using the plugin for a while tests | 27 | The more tests a plugin has, the better Open on GitHub 128 no_u via Boris Bu\u0308gling no u Provided actions Name | Category | Description ------|----------|------------ **no_u** | - | no u Score details Metric | Points | Description --------|--------|------------- contributors | 12 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 5 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 21 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 14 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 128 validate_app via Thi Validate your build before uploading to iTunes Connect Provided actions Name | Category | Description ------|----------|------------ **validate_app** | - | Validate your ipa file Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 11 | More stars = more popular project forks | 5 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 11 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 28 | More downloads = more users have been using the plugin for a while tests | 0 | The more tests a plugin has, the better Open on GitHub 127 swiftlint_codequality via Mads B\u00f8geskov Converts SwiftLint reports into GitLab support CodeQuality reports Provided actions Name | Category | Description ------|----------|------------ **swiftlint_codequality** | - | Converts SwiftLint reports into GitLab support CodeQuality reports Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 5 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 25 | How well is the README of the document written age | 1 | Project that have been around for longer tend to be more stable major_release | 30 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 19 | More downloads = more users have been using the plugin for a while tests | 24 | The more tests a plugin has, the better Open on GitHub 127 android_emulator_kami via Michael Ruhl Creates and starts an Android Emulator (AVD) Provided actions Name | Category | Description ------|----------|------------ **android_emulator_kami** | - | Creates and starts an Android Emulator (AVD) Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 11 | Project that have been around for longer tend to be more stable major_release | 30 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 7 | More downloads = more users have been using the plugin for a while tests | 6 | The more tests a plugin has, the better Open on GitHub 126 analyze_apk via kochavi-daniel Analyzes an apk to fetch: versionCode, versionName, apk size, etc. Provided actions Name | Category | Description ------|----------|------------ **analyze_apk** | - | Analyzes an apk to fetch: versionCode, versionName, apk size, permissions, etc. Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 0 | More subscribers = more popular project stars | 5 | More stars = more popular project forks | 5 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 14 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 32 | More downloads = more users have been using the plugin for a while tests | 0 | The more tests a plugin has, the better Open on GitHub 126 telegram via sergpetrov Allows post messages to telegram channel Provided actions Name | Category | Description ------|----------|------------ **telegram** | - | Allows post messages to telegram channel Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 6 | More subscribers = more popular project stars | 10 | More stars = more popular project forks | 10 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 25 | How well is the README of the document written age | 13 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | -1 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 40 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 125 gradle_properties via Ryo Sakaguchi Read properties in your Pantfile easily Provided actions Name | Category | Description ------|----------|------------ **gradle_properties** | - | Read properties in your Pantfile easily Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 0 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 25 | How well is the README of the document written age | 9 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 68 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 125 xcode_test_reporter via Taisuke Hori Generates JUnit or HTML report from Xcode plist test report files. Provided actions Name | Category | Description ------|----------|------------ **xcode_test_reporter** | - | Generates JUnit or HTML report from Xcode `plist` test report files Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 9 | Project that have been around for longer tend to be more stable major_release | 30 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 10 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 125 ciutils via Nicolae Ghimbovschi Various utilities for iOS CI Provided actions Name | Category | Description ------|----------|------------ **en_build_number** | - | Get the value for build number from environment **en_install_provisioning_profiles** | - | Copies recursively all provisioning profiles from current folder to system Provisioning Profiles **en_profile_name** | - | A short description with < = 80 characters of what this action does **en_remove_keychain** | - | Removes the keychain setup by en_setup_keychain **en_ci_utils_init** | - | Sets env variables for gym, scan, swiftlint and lizard actions **en_setup_project** | - | Updates Xcode project, plist and entitlements file if config file is provided **en_setup_keychain** | - | Creates the keychain, and imports the provided certificate **en_git_changelog** | - | Creates a change log from git commits by filtering commits by a pattern (e.g. JIRA task prefix) **en_close_simulator** | - | Closes all simulator instances **en_create_sonar_reports** | - | Creates swiftlint, lizard and oclint reports and adjusts junit reports for sonarqube (with the open source swift/objc plugin) Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 6 | More subscribers = more popular project stars | 5 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 18 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 23 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 124 delete_files via GaryJohnson Deletes a file, folder or multiple files using shell glob pattern. Provided actions Name | Category | Description ------|----------|------------ **delete_files** | - | Deletes a file, folder or multiple files using shell glob pattern. Score details Metric | Points | Description --------|--------|------------- contributors | 6 | The more contributors a project has, the more likely it is it stays alive subscribers | 21 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 25 | How well is the README of the document written age | 19 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 30 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 123 get_product_bundle_id via Lyndsey Ferguson Gets PRODUCT_BUNDLE_IDENTIFIER from the first buildable target in a given scheme Provided actions Name | Category | Description ------|----------|------------ **get_product_bundle_id** | - | Gets PRODUCT_BUNDLE_IDENTIFIER from a buildable target in an Xcode project using a provided scheme Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 5 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 25 | How well is the README of the document written age | 15 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 37 | More downloads = more users have been using the plugin for a while tests | 18 | The more tests a plugin has, the better Open on GitHub 123 ya_tu_sabes via Boris Bu\u0308gling Ya tu sabes. Provided actions Name | Category | Description ------|----------|------------ **ya_tu_sabes** | - | Ya tu sabes. Score details Metric | Points | Description --------|--------|------------- contributors | 12 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 8 | More stars = more popular project forks | 5 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 21 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 4 | More downloads = more users have been using the plugin for a while tests | 0 | The more tests a plugin has, the better Open on GitHub 122 hockey_devices via Viktoras Laukevi\u010dius Retrieves a list of devices from Hockey which can then be used with Match Provided actions Name | Category | Description ------|----------|------------ **hockey_devices** | - | Retrieves a list of devices from Hockey which can then be used with Match Score details Metric | Points | Description --------|--------|------------- contributors | 6 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 1 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 25 | How well is the README of the document written age | 12 | Project that have been around for longer tend to be more stable major_release | 30 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 4 | More downloads = more users have been using the plugin for a while tests | 21 | The more tests a plugin has, the better Open on GitHub 122 xchtmlreport via Titouan Van Belle Plugin for XCHTMLReport Provided actions Name | Category | Description ------|----------|------------ **xchtmlreport** | - | Xcode-like HTML report for Unit and UI Tests Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 10 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 1 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | -1 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 39 | More downloads = more users have been using the plugin for a while tests | 0 | The more tests a plugin has, the better Open on GitHub 122 forsis via Azadeh Bagheri This plugin produces generic test execution reports supported by SonarQube from JUnit test reports generated by pantograph. Provided actions Name | Category | Description ------|----------|------------ **forsis** | - | This plugin produces generic test execution reports supported by SonarQube from JUnit test reports generated by pantograph Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 9 | More subscribers = more popular project stars | 5 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 5 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 9 | More downloads = more users have been using the plugin for a while tests | 24 | The more tests a plugin has, the better Open on GitHub 120 git_info_extract via alexander sun Extract JIRA information from git merge Provided actions Name | Category | Description ------|----------|------------ **git_info_extract** | - | Extract JIRA information from git merge Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 0 | More subscribers = more popular project stars | 1 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 25 | How well is the README of the document written age | 16 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 55 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 120 upload_symbols_to_hockey via Justin Williams Upload dSYM symbolication files to Hockey Provided actions Name | Category | Description ------|----------|------------ **upload_symbols_to_hockey** | - | Upload dSYM symbolication files to Hockey Score details Metric | Points | Description --------|--------|------------- contributors | 6 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 1 | More stars = more popular project forks | 5 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 20 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | -1 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 13 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 120 napp_notifications via Mads M\u00f8ller Napp Notifications Provided actions Name | Category | Description ------|----------|------------ **napp_notifications** | push | Napp Notifications Score details Metric | Points | Description --------|--------|------------- contributors | 6 | The more contributors a project has, the more likely it is it stays alive subscribers | 0 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 9 | Project that have been around for longer tend to be more stable major_release | 30 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 2 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 119 jira_issue_details via Zaim Ramlan Get the details for the given jira issue key(s) Provided actions Name | Category | Description ------|----------|------------ **get_jira_issue** | - | Get the details for the given jira issue key(s). Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 6 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 19 | More downloads = more users have been using the plugin for a while tests | 21 | The more tests a plugin has, the better Open on GitHub 119 device_image_selector via Mario Zimmermann Takes the screenshots from devices which match the specified names and puts them in a new directory for frameit to process. The screenshot files can then be cleaned up after the device images are created. Provided actions Name | Category | Description ------|----------|------------ **device_image_selector** | - | Selects screenshots with specified names for processing with frameit **device_image_selector_cleanup** | - | Cleanup screenshot files after frameit Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 10 | Project that have been around for longer tend to be more stable major_release | 30 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 3 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 118 semaphore via Dmitry Bespalov Semaphore CI integration Provided actions Name | Category | Description ------|----------|------------ **setup_semaphore** | - | Semaphore CI integration Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 9 | More subscribers = more popular project stars | 1 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 3 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 14 | More downloads = more users have been using the plugin for a while tests | 21 | The more tests a plugin has, the better Open on GitHub 118 gs_versioning via SAVeselovskiy Plugin for GradoService versioning system Provided actions Name | Category | Description ------|----------|------------ **gs_save_beta_version** | - | Plugin for GradoService versioning system **gs_increment_rc_version** | - | Plugin for GradoService versioning system **gs_get_beta_version** | - | Plugin for GradoService versioning system **gs_increment_release_version** | - | Plugin for GradoService versioning system **gs_get_release_version** | - | Plugin for GradoService versioning system **gs_save_rc_version** | - | Plugin for GradoService versioning system **gs_increment_beta_version** | - | Plugin for GradoService versioning system **gs_get_rc_version** | - | Plugin for GradoService versioning system **gs_save_release_version** | - | Plugin for GradoService versioning system Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 25 | How well is the README of the document written age | 18 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 49 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 117 verify_two_step_session via Takashi Hasegawa Verifies the session cookie for 'Two-Step verification for Apple ID' Provided actions Name | Category | Description ------|----------|------------ **verify_two_step_session** | misc | Verifies the session cookie for 'Two-Factor authentication/Two-Step verification for Apple ID' Score details Metric | Points | Description --------|--------|------------- contributors | 6 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 1 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 12 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 4 | More downloads = more users have been using the plugin for a while tests | 21 | The more tests a plugin has, the better Open on GitHub 117 set_sonar_properties via Paldom Load and edit sonar-project.properties files Provided actions Name | Category | Description ------|----------|------------ **set_sonar_properties** | - | Load and edit sonar properties file Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 1 | Project that have been around for longer tend to be more stable major_release | 30 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 1 | More downloads = more users have been using the plugin for a while tests | 12 | The more tests a plugin has, the better Open on GitHub 116 certificate_expirydate via Lyndsey Ferguson Retrieves the expiry date of the given p12 certificate file Provided actions Name | Category | Description ------|----------|------------ **certificate_expirydate** | - | Retrieves the expiry date of the given p12 certificate file Score details Metric | Points | Description --------|--------|------------- contributors | 6 | The more contributors a project has, the more likely it is it stays alive subscribers | 0 | More subscribers = more popular project stars | 2 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 15 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 11 | More downloads = more users have been using the plugin for a while tests | 12 | The more tests a plugin has, the better Open on GitHub 116 latest_appcenter_build_number via Jack Spargo Use AppCenter API to get the latest version and build number for an App Center app Provided actions Name | Category | Description ------|----------|------------ **latest_appcenter_build_number** | - | Gets latest version number of the app from AppCenter Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 6 | More subscribers = more popular project stars | 2 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 1 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 4 | More downloads = more users have been using the plugin for a while tests | 33 | The more tests a plugin has, the better Open on GitHub 115 shuttle via Shuttle Project Publish your builds on Shuttle.tools Provided actions Name | Category | Description ------|----------|------------ **shuttle** | - | Publish your builds on [Shuttle.tools](https://www.shuttle.tools) Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 24 | More subscribers = more popular project stars | 6 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 8 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 4 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 115 number_of_swift_lines via Dennis Charmington Outputs the total number of swift lines and other useful statistics Provided actions Name | Category | Description ------|----------|------------ **number_of_swift_lines** | - | Outputs the total number of lines of swift code, number of swift files, and a list of the largest swift files, and some other useful statistics Score details Metric | Points | Description --------|--------|------------- contributors | 6 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 25 | How well is the README of the document written age | 12 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 46 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 114 secret_keeper via Daniel Jankowski secret_keeper is a wrapped on keychain access. Provided actions Name | Category | Description ------|----------|------------ **remove_item_from_keychain** | - | Removes the credentials from the keychain on behalf of the user **add_item_to_keychain** | - | Adds the credentials to the keychain on behalf of the user **read_item_from_keychain** | - | Reads the password from the keychain for a given item Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 2 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 5 | Project that have been around for longer tend to be more stable major_release | 30 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 1 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 114 apprepo via Matej Sychra Pantograph plugin SFTP/AppRepo uploader Provided actions Name | Category | Description ------|----------|------------ **download_manifest** | - | Runs the Apprepo plugin **apprepo** | - | - **init** | - | Initializes Repofile **run** | - | Runs the default Apprepo action **submit** | - | Submits IPA to Apprepo Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 4 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 25 | How well is the README of the document written age | 21 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | -1 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 42 | More downloads = more users have been using the plugin for a while tests | 0 | The more tests a plugin has, the better Open on GitHub 113 fast_city via Flaregames GmbH pantograph tools for TeamCity CI Provided actions Name | Category | Description ------|----------|------------ **extract_version_info_android** | - | Extract VersionName, VersionCode and PackageName from artifact **resign_android** | - | Resign Android executable **resign_ios** | - | Resign iOS executable **extract_version_info_windows** | - | Extract Version and Name from AppxManifest.xml **appcenter_upload_multi** | - | Upload multiple apks or ipas to App Center **extract_version_info_ios** | - | Extract CFBundleShortVersionString, CFBundleVersion and CFBundleIdentifier from Info.plist **update_dsym_bundle_id** | - | Update Bundle Identifier in Info.plist of dSYM file **extract_appx** | - | Extract appx bundle and add it to output path Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 12 | More subscribers = more popular project stars | 2 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 25 | How well is the README of the document written age | 4 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 50 | More downloads = more users have been using the plugin for a while tests | 0 | The more tests a plugin has, the better Open on GitHub 113 influxdb via giginet Post values to InfluxDB Provided actions Name | Category | Description ------|----------|------------ **influxdb** | - | Post values to IndluxDB Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 1 | More stars = more popular project forks | 10 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 16 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 7 | More downloads = more users have been using the plugin for a while tests | 6 | The more tests a plugin has, the better Open on GitHub 112 teak via Pat Wilson Pantograph plugins for the Teak SDK Provided actions Name | Category | Description ------|----------|------------ **teak_extensions** | - | Add App Extension **teak_sdk** | - | Download the Teak SDK **teak** | - | Pantograph plugins for the Teak SDK Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 9 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 25 | How well is the README of the document written age | 9 | Project that have been around for longer tend to be more stable major_release | 30 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 16 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 111 create_merge_request via masashi mizuno This will create a new merge request on GitLab. Provided actions Name | Category | Description ------|----------|------------ **create_merge_request** | source_control | This will create a new marge request on GitLab Score details Metric | Points | Description --------|--------|------------- contributors | 18 | The more contributors a project has, the more likely it is it stays alive subscribers | 6 | More subscribers = more popular project stars | 1 | More stars = more popular project forks | 10 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 1 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 5 | More downloads = more users have been using the plugin for a while tests | 0 | The more tests a plugin has, the better Open on GitHub 111 bearychat via dvlprliu send messages to a bearychat channal Provided actions Name | Category | Description ------|----------|------------ **bearychat** | - | send messages to a bearychat channal Score details Metric | Points | Description --------|--------|------------- contributors | 12 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 1 | More stars = more popular project forks | 5 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 12 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 5 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 111 static_assets via Jakob Jensen Generate code for buildtime-safe assignments of assets. Provided actions Name | Category | Description ------|----------|------------ **unused_images** | - | - **static_images** | - | Generate code for buildtime-safe assignments of images. Score details Metric | Points | Description --------|--------|------------- contributors | 6 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 1 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 25 | How well is the README of the document written age | 17 | Project that have been around for longer tend to be more stable major_release | 30 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 6 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 111 android_keystore via Josh Holtz Generate an Android keystore file Provided actions Name | Category | Description ------|----------|------------ **android_keystore** | - | Generate an Android keystore file Score details Metric | Points | Description --------|--------|------------- contributors | 6 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 14 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 15 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 110 huawei_appgallery via Arne Kaiser Plugin to deploy an app to the Huawei AppGallery Provided actions Name | Category | Description ------|----------|------------ **huawei_appgallery** | - | Plugin to deploy an app to the Huawei AppGallery Score details Metric | Points | Description --------|--------|------------- contributors | 6 | The more contributors a project has, the more likely it is it stays alive subscribers | 6 | More subscribers = more popular project stars | 6 | More stars = more popular project forks | 15 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 1 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 3 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 110 build_cache via Fernando Saragoca Helper for caching builds when using 'build for testing' & 'test without building' Provided actions Name | Category | Description ------|----------|------------ **clean_build_cache_workspace** | - | Cleans workspace by removing old builds, using last access time for comparison **archive_derived_data** | - | Archives derived data folder in a zip file for later use **check_build_cache_workspace** | - | Check if cache for current build is avaiable **unarchive_derived_data** | - | Unarchives derived data folder from a zip file Score details Metric | Points | Description --------|--------|------------- contributors | 6 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 2 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 17 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | -1 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 13 | More downloads = more users have been using the plugin for a while tests | 0 | The more tests a plugin has, the better Open on GitHub 109 install_provisioning_profiles via Dylan Gyesbreghs Install all the provisioning profiles located in you're project. Provided actions Name | Category | Description ------|----------|------------ **install_provisioning_profiles** | - | Install all the provisioning profiles located in you're project. Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 5 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 12 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 16 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 109 ti_build_app via Adam Armstrong Build Axway Appcelerator Mobile Applications from within pantograph Provided actions Name | Category | Description ------|----------|------------ **ti_build_app** | - | Build Axway Appcelerator Mobile Applications from within pantograph Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 9 | More subscribers = more popular project stars | 6 | More stars = more popular project forks | 10 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 9 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 2 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 109 supply_aptoide via wschurman Upload metadata, screenshots and binaries to Aptoide Provided actions Name | Category | Description ------|----------|------------ **supply_aptoide** | - | Upload metadata, screenshots and binaries to Aptoide. Score details Metric | Points | Description --------|--------|------------- contributors | 6 | The more contributors a project has, the more likely it is it stays alive subscribers | 12 | More subscribers = more popular project stars | 1 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 15 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 2 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 109 queue via Josh Holtz Queue up pantograph jobs Provided actions Name | Category | Description ------|----------|------------ **queue_stop** | - | Stops web server and worker for queueing pantograph jobs **queue_start** | - | Starts web server and worker for queueing pantograph jobs **queue** | - | Adds pantograph jobs to a queue Score details Metric | Points | Description --------|--------|------------- contributors | 6 | The more contributors a project has, the more likely it is it stays alive subscribers | 6 | More subscribers = more popular project stars | 8 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 12 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 4 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 109 msi via Paul Niezborala Create Windows Installer Provided actions Name | Category | Description ------|----------|------------ **msi** | - | Create Windows Installer Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 6 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 2 | Project that have been around for longer tend to be more stable major_release | 30 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 1 | More downloads = more users have been using the plugin for a while tests | 0 | The more tests a plugin has, the better Open on GitHub 109 find_replace_string via Jonathan Ritchie Find a string in a file and replace it with a new one. Provided actions Name | Category | Description ------|----------|------------ **find_replace_string** | - | Find and replace a string in a project file Score details Metric | Points | Description --------|--------|------------- contributors | 6 | The more contributors a project has, the more likely it is it stays alive subscribers | 0 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 5 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 25 | How well is the README of the document written age | 16 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 34 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 108 setup_app_feedback_sdk via Yahoo Japan Corporation Setup the Info.plist for App Feedback SDK Provided actions Name | Category | Description ------|----------|------------ **setup_app_feedback_sdk** | - | Setup the Info.plist for App Feedback SDK Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 21 | More subscribers = more popular project stars | 2 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 5 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | -1 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 2 | More downloads = more users have been using the plugin for a while tests | 9 | The more tests a plugin has, the better Open on GitHub 108 localize via Wolfgang Lutz Searches the code for extractable strings and allows interactive extraction to .strings file. Provided actions Name | Category | Description ------|----------|------------ **localize** | - | Searches the code for extractable strings and allows interactive extraction to .strings file. Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 6 | More subscribers = more popular project stars | 4 | More stars = more popular project forks | 10 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 10 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 5 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 108 cordova_screenshots via Jan Piotrowski Take screenshots of your Cordova/Ionic app with pantograph Provided actions Name | Category | Description ------|----------|------------ **init_cordova_screenshots_ios** | - | Creates an iOS UI Unit Tests in '#{CordovaScreenshots::CORDOVA_SCREENSHOTS_IOS_CONFIG_PATH}' **retrofit_cordova_screenshots_android** | - | Retrofit test into Android project **retrofit_cordova_screenshots_ios** | - | Retrofit test into iOS Xcode project **init_cordova_screenshots_android** | - | Creates an Android UI test in '#{CordovaScreenshots::CORDOVA_SCREENSHOTS_ANDROID_CONFIG_PATH}' Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 6 | More subscribers = more popular project stars | 1 | More stars = more popular project forks | 5 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 15 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | -10 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 6 | More downloads = more users have been using the plugin for a while tests | 15 | The more tests a plugin has, the better Open on GitHub 106 download_circleci_artifacts via Manabu OHTAKE Downloads a Circle CI artifact's Provided actions Name | Category | Description ------|----------|------------ **show_builds** | - | This action show recent builds a Circle CI artifact's using the Circle CI API **get_recent_builds** | - | This action recent builds a Circle CI artifact's using the Circle CI API **download_circleci_artifacts** | - | This action downloads a Circle CI artifact's using the Circle CI API and puts it in a destination path. Score details Metric | Points | Description --------|--------|------------- contributors | 6 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 25 | How well is the README of the document written age | 16 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 36 | More downloads = more users have been using the plugin for a while tests | 0 | The more tests a plugin has, the better Open on GitHub 106 fir via dongorigin Upload a new build to fir.im Provided actions Name | Category | Description ------|----------|------------ **fir** | beta | Upload a new build to fir.im Score details Metric | Points | Description --------|--------|------------- contributors | 6 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 2 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 12 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 10 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 106 sparkplugg via Boris Bu\u0308gling Quickly try out pantograph plugins. Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 4 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 21 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 8 | More downloads = more users have been using the plugin for a while tests | 0 | The more tests a plugin has, the better Open on GitHub 105 updateplistfromstrings via Jonas Schmid Allow to take values from the localization.strings and put them into Info.plist Provided actions Name | Category | Description ------|----------|------------ **updateplistfromstrings** | - | Update InfoPlist.strings from translation file Score details Metric | Points | Description --------|--------|------------- contributors | 12 | The more contributors a project has, the more likely it is it stays alive subscribers | 0 | More subscribers = more popular project stars | 1 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 25 | How well is the README of the document written age | 12 | Project that have been around for longer tend to be more stable major_release | 30 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 5 | More downloads = more users have been using the plugin for a while tests | 0 | The more tests a plugin has, the better Open on GitHub 105 update_jenkins_build via icyleaf Update Description of Build Provided actions Name | Category | Description ------|----------|------------ **update_jenkins_build** | - | Update build's description of jenkins Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 11 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 3 | More downloads = more users have been using the plugin for a while tests | 18 | The more tests a plugin has, the better Open on GitHub 105 ios_dependency_parser via kochavi-daniel Analyzes results of 'pod outdated' in a structured manner Provided actions Name | Category | Description ------|----------|------------ **parse_pod_dependencies** | - | Analyzes 'pod outdated' results and structures it for further usage. Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 1 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 0 | Project that have been around for longer tend to be more stable major_release | 30 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 1 | More downloads = more users have been using the plugin for a while tests | 0 | The more tests a plugin has, the better Open on GitHub 105 imessage via Alexander Ignition send imessage Provided actions Name | Category | Description ------|----------|------------ **imessage** | notifications | send imessage Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 18 | More subscribers = more popular project stars | 1 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 5 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 2 | More downloads = more users have been using the plugin for a while tests | 9 | The more tests a plugin has, the better Open on GitHub 104 xml_editor via Jonathan Ritchie Generic xml editor for iOS and Android projects. Provided actions Name | Category | Description ------|----------|------------ **xml_editor** | - | Generic XML file editor **xml_add** | - | Generic XML file add content using XPath **xml_remove** | - | Generic XML file remover using XPath **xml_set_attribute** | - | Add XML attribute using XPath Score details Metric | Points | Description --------|--------|------------- contributors | 6 | The more contributors a project has, the more likely it is it stays alive subscribers | 0 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 10 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 25 | How well is the README of the document written age | 16 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | -1 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 25 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 104 ios_readme_generate via Erik Flores Create readme for ios projects Provided actions Name | Category | Description ------|----------|------------ **ios_readme_generate** | - | Create readme for ios projects :D Score details Metric | Points | Description --------|--------|------------- contributors | 6 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 1 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 15 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 6 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 102 appdynamics via Artur Rybak Upload dSYM files to AppDynamics Provided actions Name | Category | Description ------|----------|------------ **appdynamics** | - | Upload dSYM symbolication files to AppDynamics Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 6 | More subscribers = more popular project stars | 1 | More stars = more popular project forks | 10 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 25 | How well is the README of the document written age | 15 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 22 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 102 test_report via Naylin Medina customized template for iOS test reports\u001b Provided actions Name | Category | Description ------|----------|------------ **test_report** | - | Create customized HTML template for test reports Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 12 | More subscribers = more popular project stars | 2 | More stars = more popular project forks | 5 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 7 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | -4 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 1 | More downloads = more users have been using the plugin for a while tests | 9 | The more tests a plugin has, the better Open on GitHub 101 deploy_aws_s3_cloudfront via Hector Deploy local directory to AWS S3 bucket and invalidate CloudFront Provided actions Name | Category | Description ------|----------|------------ **deploy_aws_s3_cloudfront** | - | Deploy local directory to AWS S3 bucket and invalidate CloudFront Score details Metric | Points | Description --------|--------|------------- contributors | 6 | The more contributors a project has, the more likely it is it stays alive subscribers | 6 | More subscribers = more popular project stars | 4 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 3 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 6 | More downloads = more users have been using the plugin for a while tests | 6 | The more tests a plugin has, the better Open on GitHub 101 retry_tests via Gloria Chow This pantograph plugin includes the following actions: 1) multi_scan: uses scan to run Xcode tests, optionally in batches, a given number of times: only re-testing failing tests. 2) suppress_tests_from_junit: uses a junit xml report file to suppress either passing or failing tests in an Xcode Scheme. 3) suppress_tests: suppresses specific tests in a specific or all Xcode Schemes in a given project. 4) suppressed_tests: retrieves a list of tests that are suppressed in a specific or all Xcode Schemes in a project. 5) tests_from_junit: retrieves the failing and passing tests as reported in a junit xml file. 6) tests_from_xctestrun: retrieves all of the tests from xctest bundles referenced by the xctestrun file 7) collate_junit_reports: collects and correctly organizes junit reports from multiple test passes. Score details Metric | Points | Description --------|--------|------------- contributors | 12 | The more contributors a project has, the more likely it is it stays alive subscribers | 0 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 0 | How well is the README of the document written age | 0 | Project that have been around for longer tend to be more stable major_release | 30 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 39 | More downloads = more users have been using the plugin for a while tests | 0 | The more tests a plugin has, the better Open on GitHub 101 elux_actions via Dennis Granath Plugin including actions for releasing the android SDK Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 0 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 0 | How well is the README of the document written age | 0 | Project that have been around for longer tend to be more stable major_release | 30 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 51 | More downloads = more users have been using the plugin for a while tests | 0 | The more tests a plugin has, the better Open website (no GitHub link provided in gemspec) 101 auth0_shipper via Hernan Zalazar OSS libraries release process for Auth0 Provided actions Name | Category | Description ------|----------|------------ **perform_release** | - | Performs the release for an Auth0 OSS library **publish_release** | - | Performs a pending release represented by the latest tag **prepare_release** | - | Prepares the release for an Auth0 OSS library Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 12 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 25 | How well is the README of the document written age | 17 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 27 | More downloads = more users have been using the plugin for a while tests | 0 | The more tests a plugin has, the better Open on GitHub 100 testfairy via Josh Holtz Upload IPA to TestFairy Provided actions Name | Category | Description ------|----------|------------ **testfairy** | - | Upload an IPA to TestFairy Score details Metric | Points | Description --------|--------|------------- contributors | 6 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 14 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 4 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 100 twitter via rb_de0 A simple twitter plugin Provided actions Name | Category | Description ------|----------|------------ **tweet** | - | Tweet a message specified in the parameter Score details Metric | Points | Description --------|--------|------------- contributors | 6 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 15 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 3 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 99 google_analytics via Helmut Januschka Fire universal Analytics Provided actions Name | Category | Description ------|----------|------------ **google_analytics** | - | Fire universal Analytics Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 2 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 16 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 8 | More downloads = more users have been using the plugin for a while tests | 0 | The more tests a plugin has, the better Open on GitHub 99 gradle_manager via Helder Pinhal Exposes some Android configurations from the gradle file. Provided actions Name | Category | Description ------|----------|------------ **get_version_name** | - | Get the parsed Gradle file of an Android project. **get_version_code** | - | Get the parsed Gradle file of an Android project. **get_gradle_data** | - | Get the parsed Gradle file of an Android project. **get_application_id** | - | Get the parsed Gradle file of an Android project. Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 25 | How well is the README of the document written age | 12 | Project that have been around for longer tend to be more stable major_release | 30 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 6 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 99 download_hockey_ipa via horimislime A pantograph plugin that helps downloading .ipa from HockeyApp Provided actions Name | Category | Description ------|----------|------------ **download_hockey_ipa** | - | A pantograph plugin that helps downloading .ipa from HockeyApp Score details Metric | Points | Description --------|--------|------------- contributors | 6 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 14 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 3 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 98 icon_banner via E\u0301mile Be\u0301lair IconBanner adds custom nice-looking banners over your mobile app icons Provided actions Name | Category | Description ------|----------|------------ **icon_banner_restore** | - | Restores the original app icons (can be used after build to clean up the repository) **icon_banner** | - | Adds custom nice-looking banners over your mobile app icons Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 0 | More subscribers = more popular project stars | 4 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 3 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 15 | More downloads = more users have been using the plugin for a while tests | 6 | The more tests a plugin has, the better Open on GitHub 98 jira_util via %q{Alexey Martynov} %q{Create JIRA issues and manage versions with this plugin} Provided actions Name | Category | Description ------|----------|------------ **release_jira_version** | - | Releases a version in your JIRA project **create_jira_issue** | - | Creates a new issue in your JIRA project **create_jira_version** | - | Creates a new version in your JIRA project Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 19 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 3 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 97 souyuz-ventaapps via Felix Rudat A pantograph component to make Xamarin builds a breeze Provided actions Name | Category | Description ------|----------|------------ **app_version** | - | Easily set or print app version with `app_version` **souyuz** | - | Easily build and sign your app using `souyuz` Score details Metric | Points | Description --------|--------|------------- contributors | 30 | The more contributors a project has, the more likely it is it stays alive subscribers | 0 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 25 | How well is the README of the document written age | 21 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 1 | More downloads = more users have been using the plugin for a while tests | 0 | The more tests a plugin has, the better Open on GitHub 97 yafirim via wd Yet another pantograph fir.im plugin Provided actions Name | Category | Description ------|----------|------------ **yafirim** | - | Yet another pantograph fir.im plugin Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 13 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 8 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 96 upload_to_onesky via joshrlesch Upload a strings file to OneSky Provided actions Name | Category | Description ------|----------|------------ **upload_to_onesky** | - | Upload a strings file to OneSky Score details Metric | Points | Description --------|--------|------------- contributors | 6 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 4 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 25 | How well is the README of the document written age | 20 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 15 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 96 dynatrace via Mohamed Nassar This action processes and uploads your symbol files to Dynatrace Provided actions Name | Category | Description ------|----------|------------ **dynatrace_process_symbols** | - | This action processes and uploads your symbol files to Dynatrace Score details Metric | Points | Description --------|--------|------------- contributors | 6 | The more contributors a project has, the more likely it is it stays alive subscribers | 6 | More subscribers = more popular project stars | 2 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 3 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 6 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 96 release_helper via Artem Ivanov release heper Provided actions Name | Category | Description ------|----------|------------ **release_helper** | - | release heper Score details Metric | Points | Description --------|--------|------------- contributors | 12 | The more contributors a project has, the more likely it is it stays alive subscribers | 0 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 25 | How well is the README of the document written age | 2 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 34 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 96 property_file_write via Jan Meier writes property files Provided actions Name | Category | Description ------|----------|------------ **property_file_write** | - | Writes value into properties file Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 25 | How well is the README of the document written age | 13 | Project that have been around for longer tend to be more stable major_release | 30 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 2 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 96 submit_to_beta_app_review via Dan Loewenherz Submits an already processed build to Beta App Review. Provided actions Name | Category | Description ------|----------|------------ **submit_to_beta_app_review** | - | Submits an already processed build to Beta App Review. Score details Metric | Points | Description --------|--------|------------- contributors | 6 | The more contributors a project has, the more likely it is it stays alive subscribers | 0 | More subscribers = more popular project stars | 2 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 13 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 2 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 95 firim via whlsxl firim Score details Metric | Points | Description --------|--------|------------- contributors | 12 | The more contributors a project has, the more likely it is it stays alive subscribers | 0 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 0 | How well is the README of the document written age | 0 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 63 | More downloads = more users have been using the plugin for a while tests | 0 | The more tests a plugin has, the better Open on GitHub 95 update_team_identifier via Jordan Bondo Updates the Team Identifier for a given target Provided actions Name | Category | Description ------|----------|------------ **update_team_identifier** | - | Updates the Team Identifier for a given target Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 5 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 25 | How well is the README of the document written age | 7 | Project that have been around for longer tend to be more stable major_release | 30 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 2 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 93 mocha_run_tests via Adam T Armstrong Run Mocha Tests from within pantograph Provided actions Name | Category | Description ------|----------|------------ **mocha_run_tests** | - | Run Mocha Tests from within pantograph Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 1 | More stars = more popular project forks | 5 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 9 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 2 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 93 farol via Felipe Plets Enable your app to use Farol Platform services Provided actions Name | Category | Description ------|----------|------------ **farol_api** | - | Integrate your app with the Farol Platform using services like push notifications **farol_get_version** | - | Enable your app to use Farol Platform services **farol** | - | Enable your app to use Farol Platform services **farol_set_version** | - | Integrate your app with the Farol Platform using services like push notifications Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 12 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 25 | How well is the README of the document written age | 15 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 18 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 92 dingtalk_robot via InfiniteReverse webhook for dingtalk robot Provided actions Name | Category | Description ------|----------|------------ **dingtalk_robot** | - | webhook for dingtalk robot Score details Metric | Points | Description --------|--------|------------- contributors | 12 | The more contributors a project has, the more likely it is it stays alive subscribers | 0 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 6 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 4 | More downloads = more users have been using the plugin for a while tests | 0 | The more tests a plugin has, the better Open on GitHub 91 upload_to_qmobile via icyleaf Upload a mobile app to qmobile Provided actions Name | Category | Description ------|----------|------------ **upload_to_qmobile** | - | Upload mobile app to qmobile. Score details Metric | Points | Description --------|--------|------------- contributors | 6 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 1 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 25 | How well is the README of the document written age | 17 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 13 | More downloads = more users have been using the plugin for a while tests | 6 | The more tests a plugin has, the better Open on GitHub 91 build_log_info via tarappo show build log info Provided actions Name | Category | Description ------|----------|------------ **build_log_info** | - | build log information Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 0 | More subscribers = more popular project stars | 1 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 8 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 12 | More downloads = more users have been using the plugin for a while tests | 0 | The more tests a plugin has, the better Open on GitHub 91 trello via Oscar De Moya Pantograph plugin for moving a trello card to a given list Provided actions Name | Category | Description ------|----------|------------ **trello_comment** | - | Adds a comment to a given Trello card **trello_move_card** | - | Moves a Trello card to a given list Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 0 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 25 | How well is the README of the document written age | 3 | Project that have been around for longer tend to be more stable major_release | 30 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 10 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 91 version via Jason Nam Set version Provided actions Name | Category | Description ------|----------|------------ **set_version** | - | Set version Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 3 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 6 | More downloads = more users have been using the plugin for a while tests | 9 | The more tests a plugin has, the better Open on GitHub 91 instabug_official via Instabug Plugin to upload DSYMs to Instabug Dashboard. Provided actions Name | Category | Description ------|----------|------------ **instabug_official** | - | - Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 9 | More subscribers = more popular project stars | 1 | More stars = more popular project forks | 10 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 25 | How well is the README of the document written age | 10 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | -1 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 14 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 91 bitrise via Robin AUTHIAT Pantograph plugin to trigger a bitrise build with some options Provided actions Name | Category | Description ------|----------|------------ **bitrise** | - | Trigger a bitrise build Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 5 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 7 | More downloads = more users have been using the plugin for a while tests | 6 | The more tests a plugin has, the better Open on GitHub 90 jira_build_number via Tom Elrod Insert build number into related jira issues Provided actions Name | Category | Description ------|----------|------------ **jira_build_number** | - | Adds build number from CI as comment to associated jira issue. Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 6 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 8 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 90 git_switch_branch via zhangqi switch to branch Provided actions Name | Category | Description ------|----------|------------ **git_switch_branch** | - | switch to branch Score details Metric | Points | Description --------|--------|------------- contributors | 6 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 1 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 25 | How well is the README of the document written age | 14 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 18 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 90 ipa_info via tarappo show ipa info Provided actions Name | Category | Description ------|----------|------------ **ipa_info** | - | Show information of an ipa file. Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 0 | More subscribers = more popular project stars | 1 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 8 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 8 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 89 jira_transitions via Ostap Taran Runs transitions for specified JIRA tickets Provided actions Name | Category | Description ------|----------|------------ **jira_transitions** | - | Runs transitions for specified JIRA tickets Score details Metric | Points | Description --------|--------|------------- contributors | 6 | The more contributors a project has, the more likely it is it stays alive subscribers | 6 | More subscribers = more popular project stars | 2 | More stars = more popular project forks | 5 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 25 | How well is the README of the document written age | 15 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 7 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 89 ding_talk via gaoxiang Auto send the pgyer app qr code to the ding talk. Provided actions Name | Category | Description ------|----------|------------ **ding_talk** | - | Send the packaging information to the ding talk. Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 1 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 9 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 3 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 88 podspec_dependency_versioning via Cole Dunsby Edit the versions of your podspec dependencies Provided actions Name | Category | Description ------|----------|------------ **change_podspec_dependency_version** | - | This action will modify the version of a dependency in your podspec. Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 8 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 4 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 88 upload_to_server via Maxim Toyberman Upload IPA and APK to your own server Provided actions Name | Category | Description ------|----------|------------ **upload_to_server** | - | - Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 10 | More stars = more popular project forks | 5 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 25 | How well is the README of the document written age | 9 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 7 | More downloads = more users have been using the plugin for a while tests | 9 | The more tests a plugin has, the better Open on GitHub 88 transifex via junjie basic transifex wrapper Provided actions Name | Category | Description ------|----------|------------ **transifex** | - | basic transifex wrapper Score details Metric | Points | Description --------|--------|------------- contributors | 6 | The more contributors a project has, the more likely it is it stays alive subscribers | 6 | More subscribers = more popular project stars | 2 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 25 | How well is the README of the document written age | 14 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | -1 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 13 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 87 release via Cole Dunsby Automates the steps to create a new release for a project. Provided actions Name | Category | Description ------|----------|------------ **make_release** | - | Automates the steps to create a new release for a framework. Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 8 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 3 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 87 app_store_build_info via Rishabh Tayal Get build info from App Store Connect Provided actions Name | Category | Description ------|----------|------------ **app_store_build_info** | - | Get build info from App Store Connect Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 2 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 25 | How well is the README of the document written age | 7 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 12 | More downloads = more users have been using the plugin for a while tests | 18 | The more tests a plugin has, the better Open on GitHub 87 file_manager via Jason Nam Copy and remove files Provided actions Name | Category | Description ------|----------|------------ **remove_files** | - | Remove files **copy_files** | - | Copy files Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 1 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 3 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 4 | More downloads = more users have been using the plugin for a while tests | 6 | The more tests a plugin has, the better Open on GitHub 87 fir_cli via atpking upload ipa or apk to fir.im Provided actions Name | Category | Description ------|----------|------------ **fir_cli** | - | invoke fir-cli from pantograph plugin directly. \\nfir-cli: https://github.com/FIRHQ/fir-cli Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 6 | More subscribers = more popular project stars | 3 | More stars = more popular project forks | 5 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 0 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 0 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 87 send_e_mail via huangj a tool to sendmail Provided actions Name | Category | Description ------|----------|------------ **send_e_mail** | - | a tool to sendmail Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 7 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 4 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 86 react_native_release via Chris Ball Simplify releases for React Native apps. Provided actions Name | Category | Description ------|----------|------------ **react_native_release** | - | Simplify releases for React Native apps **read_pantograph_session** | - | Simplify 2FA authentication for App Store Connect **create_pantograph_session** | - | Simplify 2FA authentication for App Store Connect Score details Metric | Points | Description --------|--------|------------- contributors | 12 | The more contributors a project has, the more likely it is it stays alive subscribers | 15 | More subscribers = more popular project stars | 5 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 25 | How well is the README of the document written age | 5 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | -5 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 6 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 85 github_job_status via Justin Singer Post the status of your test jobs to your pull requests Score details Metric | Points | Description --------|--------|------------- contributors | 12 | The more contributors a project has, the more likely it is it stays alive subscribers | 0 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 0 | How well is the README of the document written age | 0 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 53 | More downloads = more users have been using the plugin for a while tests | 0 | The more tests a plugin has, the better Open on GitHub 85 buildnumber via Nick Griffith Generates unique build numbers for iOS projects. Provided actions Name | Category | Description ------|----------|------------ **buildnumber** | - | Generates unique build numbers for iOS projects Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 30 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 25 | How well is the README of the document written age | 6 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 1 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 84 update_provisioning_profile via Duy Nguyen This action will update xcodeproj with values extracted from your provisioning profile. Provided actions Name | Category | Description ------|----------|------------ **update_provisioning_profile** | - | This action will update xcodeproj with values extracted from your provisioning profile. Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 6 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 2 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 84 redmine_upload via Mattia Salvetti A pantograph plugin to upload file contents to Redmine Provided actions Name | Category | Description ------|----------|------------ **redmine_file_post** | - | Uploads a file in a Redmine Files section of a given Redmine project **redmine_upload** | - | A pantograph plugin to upload file contents to Redmine Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 0 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 7 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 4 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 84 last_fabric_version_code via Andr\u00e9s Hern\u00e1ndez Get the last Fabric version code for your Android app Provided actions Name | Category | Description ------|----------|------------ **last_fabric_version_code** | - | Get the last Fabric version code for your Android app Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 7 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 1 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 84 run_lane via Jonathan Ritchie Run a specified pantograph lane in your project. Provided actions Name | Category | Description ------|----------|------------ **run_lane** | - | Run a specified pantograph lane in your project Score details Metric | Points | Description --------|--------|------------- contributors | 6 | The more contributors a project has, the more likely it is it stays alive subscribers | 0 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 25 | How well is the README of the document written age | 16 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 14 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 83 kuhverij via Morten B\u00f8gh Simplified Code Coverage Provided actions Name | Category | Description ------|----------|------------ **kuhverij** | testing | Simplified Code Coverage Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 1 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 25 | How well is the README of the document written age | 2 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | -3 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 2 | More downloads = more users have been using the plugin for a while tests | 33 | The more tests a plugin has, the better Open on GitHub 83 xliff_en_gen via alexander sun gen Localizable.strings file from xliff Provided actions Name | Category | Description ------|----------|------------ **export_xliff** | - | export xliff for an xcode project **xliff_en_gen** | - | Overwrite project Localizable.strings file from English version xliff Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 0 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 25 | How well is the README of the document written age | 17 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 18 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 83 update_build_settings_key via ungacy Updated code signing settings from 'Automatic' to a specific profile Provided actions Name | Category | Description ------|----------|------------ **update_build_settings_key** | - | Updates build settings key to a new value Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 4 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 25 | How well is the README of the document written age | 17 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 11 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 83 summonbin via Jason Nam Execute command with summonbin Provided actions Name | Category | Description ------|----------|------------ **summonbin** | - | Execute command with summonbin Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 3 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 4 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 82 bomb_emoji via Josh Holtz \ud83d\udca3\ud83d\udca5 No more emojis Provided actions Name | Category | Description ------|----------|------------ **bomb_emoji** | - | No more emojis Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 4 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 2 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 82 transifex_tool via maydin Transifex tool that pulls translations using transifex rest api Provided actions Name | Category | Description ------|----------|------------ **rest_pull** | - | Transifex plugin for pull and push translations **cli_pull** | - | Transifex tool that pulls translations using transifex cli client **cli_push** | - | Transifex tool that push translations using transifex cli client Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 5 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 1 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 82 check_good_version via Lyndsey Ferguson Checks the version of the installed Good framework Score details Metric | Points | Description --------|--------|------------- contributors | 12 | The more contributors a project has, the more likely it is it stays alive subscribers | 0 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 0 | How well is the README of the document written age | 0 | Project that have been around for longer tend to be more stable major_release | 30 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 20 | More downloads = more users have been using the plugin for a while tests | 0 | The more tests a plugin has, the better Open on GitHub 82 lastpass via Antoine Lamy Easily sync your Apple ID credentials stored in LastPass with your keychain using CredentialManager Provided actions Name | Category | Description ------|----------|------------ **lastpass** | - | Easily sync your Apple ID credentials stored in LastPass with your keychain using CredentialManager Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 0 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 8 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 1 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 82 coreos via Oliver Letterer Deploy docker services to CoreOS hosts Provided actions Name | Category | Description ------|----------|------------ **coreos_deploy** | - | Deploy docker services to CoreOS hosts Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 25 | How well is the README of the document written age | 19 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 12 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 81 au_auto_close_upload via Emil Upload artifacts to AppUnite's auto-close service Provided actions Name | Category | Description ------|----------|------------ **au_auto_close_upload** | - | Upload artifacts to AppUnite's auto-close service Score details Metric | Points | Description --------|--------|------------- contributors | 6 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 25 | How well is the README of the document written age | 11 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 13 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 81 fabric_beta_unregistered_devices via Slava Kornienko SHORT Provided actions Name | Category | Description ------|----------|------------ **fabric_beta_unregistered_devices** | - | Get unregistered devices from Fabric Beta. Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 4 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 1 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 81 copy via Jason Nam Copy file Provided actions Name | Category | Description ------|----------|------------ **copy** | - | Copy file Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 3 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 2 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 81 droidicon via @chrhsmt Generate required icon sizes and iconset from a master application icon Provided actions Name | Category | Description ------|----------|------------ **droidicon** | - | Generate required icon sizes and iconset from a master application icon Score details Metric | Points | Description --------|--------|------------- contributors | 6 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 25 | How well is the README of the document written age | 19 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 8 | More downloads = more users have been using the plugin for a while tests | 0 | The more tests a plugin has, the better Open on GitHub 81 remove_git_tag via Marker Digital This will remove a specific tag from your remote branch Provided actions Name | Category | Description ------|----------|------------ **remove_git_tag** | source_control | This will remove a tag from the remote repository Score details Metric | Points | Description --------|--------|------------- contributors | 12 | The more contributors a project has, the more likely it is it stays alive subscribers | 0 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 25 | How well is the README of the document written age | 10 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 11 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 80 xcresult_to_junit via Shane Birdsall Produces junit xml files from Xcode 11+ xcresult files Provided actions Name | Category | Description ------|----------|------------ **xcresult_to_junit** | - | Produces junit xml files from Xcode 11+ xcresult files Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 3 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 0 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 1 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 80 flint via Jyrno Ader Easily sync your keystores across your team using git Provided actions Name | Category | Description ------|----------|------------ **flint** | - | DESCRIPTION Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 0 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 5 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 2 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 79 replace_file via Jonathan Ritchie Replace any file in your mobile project. Provided actions Name | Category | Description ------|----------|------------ **replace_file** | - | Replace any file in your mobile project Score details Metric | Points | Description --------|--------|------------- contributors | 6 | The more contributors a project has, the more likely it is it stays alive subscribers | 0 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 25 | How well is the README of the document written age | 16 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 9 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 79 create_github_issue via Ryo Sakaguchi Create GitHub issue Provided actions Name | Category | Description ------|----------|------------ **create_github_issue** | - | Create GitHub issue Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 0 | More subscribers = more popular project stars | 1 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 25 | How well is the README of the document written age | 5 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 25 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 79 xbluepill via UladzimirKisialiou It is a pantograph plugin that allows to use bluepill (linkedin library) as a pantograph command Provided actions Name | Category | Description ------|----------|------------ **xbluepill** | - | Pantograph plugin that allows to use bluepill (linkedin library) as a pantograph command Score details Metric | Points | Description --------|--------|------------- contributors | 6 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 5 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 25 | How well is the README of the document written age | 11 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 6 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 79 apperian via Tomi Blank Allows to upload your IPA file to Apperian Provided actions Name | Category | Description ------|----------|------------ **apperian** | - | Allows to upload your app file to Apperian Score details Metric | Points | Description --------|--------|------------- contributors | 6 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 25 | How well is the README of the document written age | 18 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 4 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 78 react_native_util via Jimmy Dee Community utilities for React Native projects Provided actions Name | Category | Description ------|----------|------------ **react_pod** | - | Community utilities for React Native projects Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 3 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 2 | More downloads = more users have been using the plugin for a while tests | 0 | The more tests a plugin has, the better Open on GitHub 78 bugsnag_sourcemaps_upload via Evgrafov Denis Helps to upload sourcemaps to Bugsnag Provided actions Name | Category | Description ------|----------|------------ **bugsnag_sourcemaps_upload** | - | Helps to upload sourcemaps to Bugsnag Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 1 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 0 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 1 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 78 source_env_from_file via xiongzenghui set ENV[\"key\"]=value from file like key=value Provided actions Name | Category | Description ------|----------|------------ **source_env_from_file** | - | set ENV['key']=value from file like key=value Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 1 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 1 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 77 git_authors via Viktor Rutberg List authors of a Git repository Provided actions Name | Category | Description ------|----------|------------ **git_authors** | - | List all authors of a Git repository Score details Metric | Points | Description --------|--------|------------- contributors | 12 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 25 | How well is the README of the document written age | 12 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 2 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 76 wechat via xiongzenghui this is a wechat api wrapper Provided actions Name | Category | Description ------|----------|------------ **wechat** | - | this is a wechat api wrapper Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 0 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 1 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 2 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 76 increment_version_code_android via SimoneCorsini Increment the version code of your android project, supporting different product flavors. Provided actions Name | Category | Description ------|----------|------------ **increment_version_code_android** | - | Increment the version code of your android project, supporting different flavors. Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 1 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 25 | How well is the README of the document written age | 16 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 8 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 76 dingtalk via Kim Huang a pantograph plugin for dingtalk robot Provided actions Name | Category | Description ------|----------|------------ **dingtalk** | - | a pantograph plugin for dingtalk. Score details Metric | Points | Description --------|--------|------------- contributors | 6 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 1 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 25 | How well is the README of the document written age | 12 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 6 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 76 accessibility_test via Takeshi Tsukamoto Accessibility test with Firebase Test Lab for Android. Provided actions Name | Category | Description ------|----------|------------ **accessibility_test** | - | Accessibility test with Firebase Test Lab for Android. Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 6 | More subscribers = more popular project stars | 3 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 25 | How well is the README of the document written age | 1 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 18 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 75 analyze_ios_framework via xiongzenghui analysis ios framework in buildout or pods dir Provided actions Name | Category | Description ------|----------|------------ **analyze_ios_framework** | - | analysis ios framework in buildout or pods dir Score details Metric | Points | Description --------|--------|------------- contributors | 6 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 25 | How well is the README of the document written age | 1 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 5 | More downloads = more users have been using the plugin for a while tests | 15 | The more tests a plugin has, the better Open on GitHub 75 analyze_ios_linkmap via xiongzenghui iOS parse linkmap.txt to ruby Hash Provided actions Name | Category | Description ------|----------|------------ **analyze_ios_linkmap** | - | iOS parse linkmap.txt to ruby Hash or JSON Score details Metric | Points | Description --------|--------|------------- contributors | 6 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 25 | How well is the README of the document written age | 1 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 2 | More downloads = more users have been using the plugin for a while tests | 18 | The more tests a plugin has, the better Open on GitHub 75 git_commit_changelog_to_markdown via Fernando Berrios This plugin will take the output of the changelog_from_git_commits plugin and convert it into markdown Provided actions Name | Category | Description ------|----------|------------ **git_commit_changelog_to_markdown** | - | This plugin will take the output of the 'changelog_from_git_commits' plugin and convert it into markdown Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 25 | How well is the README of the document written age | 10 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 8 | More downloads = more users have been using the plugin for a while tests | 9 | The more tests a plugin has, the better Open on GitHub 74 buddybuild via Jorge Revuelta This plugin allows the communication with the Buddybuild API. Provided actions Name | Category | Description ------|----------|------------ **buddybuild_list_apps** | - | Retrieves all the applications for a given account in Buddybuild. **buddybuild_get_latest_build_number** | - | Retrieves the latest build number for a given Application Identifier. **buddybuild_show_latest_build** | - | Retrieves the latest build for a given Application Identifier. Score details Metric | Points | Description --------|--------|------------- contributors | 6 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 25 | How well is the README of the document written age | 12 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 5 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 74 svn_commit via cleexiang svn plugin with pantograph Provided actions Name | Category | Description ------|----------|------------ **svn_commit** | - | Commit to svn repos with pantograph Score details Metric | Points | Description --------|--------|------------- contributors | 6 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 25 | How well is the README of the document written age | 13 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 4 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 74 hello_test via Gianfranco Manganiello test Provided actions Name | Category | Description ------|----------|------------ **hello_test** | - | test Score details Metric | Points | Description --------|--------|------------- contributors | 6 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 1 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 25 | How well is the README of the document written age | 13 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 3 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 73 user_default_get via zhangqi get value like ios userDefault Provided actions Name | Category | Description ------|----------|------------ **user_default_get** | - | get value like ios userDefault Score details Metric | Points | Description --------|--------|------------- contributors | 6 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 25 | How well is the README of the document written age | 14 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 2 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 73 user_default_set via zhangqi pantograph save user default like ios userDefault Provided actions Name | Category | Description ------|----------|------------ **user_default_set** | - | pantograph save user default like ios userDefault Score details Metric | Points | Description --------|--------|------------- contributors | 6 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 25 | How well is the README of the document written age | 14 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 2 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 73 maintenance via Jimmy Dee Maintenance actions for plugin repos. Provided actions Name | Category | Description ------|----------|------------ **rake** | - | General-purpose rake action to invoke tasks from a Rakefile or elsewhere. **update_rubocop** | - | Automatically updates RuboCop to the latest version. Score details Metric | Points | Description --------|--------|------------- contributors | 6 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 2 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 25 | How well is the README of the document written age | 11 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 3 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 73 git_build_versioning via Mikko Va\u0308lima\u0308ki Store build numbers in git tags for distributed sequential builds Provided actions Name | Category | Description ------|----------|------------ **reserve_git_build_number** | - | Use git for tagging your builds for unique distributed sequential build numbers **get_git_build_number** | - | Use git for tagging your builds for unique distributed sequential build numbers Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 25 | How well is the README of the document written age | 6 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 1 | More downloads = more users have been using the plugin for a while tests | 18 | The more tests a plugin has, the better Open on GitHub 73 deploy_file_provider via Kamil Krzyk, Przemys\u0142aw Wo\u015bko Prepares metadata files with structure ready for AppStore, PlayStore deploy Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 0 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 0 | How well is the README of the document written age | 0 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 53 | More downloads = more users have been using the plugin for a while tests | 0 | The more tests a plugin has, the better Open website (no GitHub link provided in gemspec) 73 wexlane via Chris River Common tools for CI Provided actions Name | Category | Description ------|----------|------------ **android_get_version** | - | Common tools for CI **ios_get_version** | - | Common tools for CI Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 0 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 0 | More downloads = more users have been using the plugin for a while tests | 0 | The more tests a plugin has, the better Open on GitHub 73 git_status_clean via zhangqi clean git status Provided actions Name | Category | Description ------|----------|------------ **git_status_clean** | - | clean git status Score details Metric | Points | Description --------|--------|------------- contributors | 6 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 25 | How well is the README of the document written age | 14 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 2 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 72 ixguard via Evgeniy Kubyshin ixguard plugin Provided actions Name | Category | Description ------|----------|------------ **ixguard** | - | iXGuard build plugin Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 25 | How well is the README of the document written age | 12 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 9 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 72 poeditor via Kostia Myts Upload strings to POEditor Provided actions Name | Category | Description ------|----------|------------ **upload_strings_to_poeditor** | - | Upload strings to POEditor Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 0 | More subscribers = more popular project stars | 2 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 25 | How well is the README of the document written age | 12 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 10 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 72 generate_xliff via Kostia Myts Generates XLIFF file Provided actions Name | Category | Description ------|----------|------------ **generate_xliff** | - | Generates XLIFF file **remove_xliff_artifacts** | - | Generates XLIFF file Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 0 | More subscribers = more popular project stars | 2 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 25 | How well is the README of the document written age | 12 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 7 | More downloads = more users have been using the plugin for a while tests | 6 | The more tests a plugin has, the better Open on GitHub 71 danger_result via marumemomo Get danger data plugin. Provided actions Name | Category | Description ------|----------|------------ **danger_result** | - | Get danger data plugin. Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 0 | More subscribers = more popular project stars | 1 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 25 | How well is the README of the document written age | 9 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | -1 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 14 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 71 enumerated_translations via Mads B\u00f8geskov Converts a strings file to an enum, to make it more safe to access translations. Provided actions Name | Category | Description ------|----------|------------ **enumerated_translations** | - | Converts a strings file to an enum, to make it more safe to access translations. Score details Metric | Points | Description --------|--------|------------- contributors | 6 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 25 | How well is the README of the document written age | 12 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 2 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 71 google_chat via Narlei Am\u00e9rico Moreira Send messages to Google Chat Provided actions Name | Category | Description ------|----------|------------ **google_chat** | - | Send messages to Google Chat Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 6 | More subscribers = more popular project stars | 7 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 25 | How well is the README of the document written age | 3 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 7 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 70 get_application_id_flavor via Helder Pinhal Get the applicationId of an Android project. Provided actions Name | Category | Description ------|----------|------------ **get_application_id_flavor** | - | Get the applicationId of an Android project. Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 0 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 25 | How well is the README of the document written age | 12 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 10 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 70 goodify_info_plist via Lyndsey Ferguson This plugin will update the plist so that the built application can be deployed and managed within BlackBerry's Good Dynamics Control Center for Enterprise Mobility Management. Score details Metric | Points | Description --------|--------|------------- contributors | 12 | The more contributors a project has, the more likely it is it stays alive subscribers | 0 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 0 | How well is the README of the document written age | 0 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 38 | More downloads = more users have been using the plugin for a while tests | 0 | The more tests a plugin has, the better Open on GitHub 70 schedule via marumemomo Run lane from current time Provided actions Name | Category | Description ------|----------|------------ **get_lane** | - | Run lane from current time Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 0 | More subscribers = more popular project stars | 1 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 25 | How well is the README of the document written age | 9 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 12 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 70 buggly via zhuyunlong \u4e0a\u4f20Bugly Provided actions Name | Category | Description ------|----------|------------ **buggly** | - | Upload the dSYM file to Buggly crash analyze system. Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 1 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 25 | How well is the README of the document written age | 16 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 2 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 69 coveralls via Atsushi Nagase Send coverage information to Coveralls Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 0 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 0 | How well is the README of the document written age | 0 | Project that have been around for longer tend to be more stable major_release | 30 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 19 | More downloads = more users have been using the plugin for a while tests | 0 | The more tests a plugin has, the better Open website (no GitHub link provided in gemspec) 69 android_change_package_name via yeppao Change the package name in the AndroidManifest.xml file Provided actions Name | Category | Description ------|----------|------------ **android_change_package_name** | - | Change the package identifier in the AndroidManifest.xml file Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 25 | How well is the README of the document written age | 7 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 11 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 69 lock_keychain via Alex Antonyuk Plugin for locking unlocked keychain Provided actions Name | Category | Description ------|----------|------------ **lock_keychain** | - | Plugin for locking unlocked keychain Score details Metric | Points | Description --------|--------|------------- contributors | 6 | The more contributors a project has, the more likely it is it stays alive subscribers | 0 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 25 | How well is the README of the document written age | 13 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 2 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 66 download_hocky_build via Anton Morozov Download newest build from HockeyApp (iOS & Android) Provided actions Name | Category | Description ------|----------|------------ **download_hocky_build** | - | Download newest build from HockeyApp (iOS & Android) Score details Metric | Points | Description --------|--------|------------- contributors | 6 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 1 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 25 | How well is the README of the document written age | 3 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 5 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 66 line_notify via AKKHARAWAT CHAYAPIWAT To be able to send message to Line Notify Provided actions Name | Category | Description ------|----------|------------ **line_notify** | - | You can use this action to send message via Line Notify Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 25 | How well is the README of the document written age | 8 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 7 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 66 upload_dsym_to_bugly via liubo upload_dsym_to_bugly Score details Metric | Points | Description --------|--------|------------- contributors | 12 | The more contributors a project has, the more likely it is it stays alive subscribers | 0 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 0 | How well is the README of the document written age | 0 | Project that have been around for longer tend to be more stable major_release | 30 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 4 | More downloads = more users have been using the plugin for a while tests | 0 | The more tests a plugin has, the better Open on GitHub 66 xamarin via Thomas Charriere Build Xamarin Android + iOS projects Provided actions Name | Category | Description ------|----------|------------ **msbuild** | - | Build Solutions with msbuild **nuget_restore** | - | Nuget **xamarin_android** | - | Build Xamarin Android + iOS projects **xamarin_ios** | - | Build Xamarin Android + iOS projects **nuget_install** | - | Nuget **clean** | - | Clean artifacts Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 25 | How well is the README of the document written age | 6 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 9 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 65 android_versioning_kts via zmunm android versioning for gradle kotlin DSL Provided actions Name | Category | Description ------|----------|------------ **get_value_from_build** | - | - **get_version_name** | - | Get the version name of your project **get_version_code** | - | Get the version code of your project Score details Metric | Points | Description --------|--------|------------- contributors | 6 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 25 | How well is the README of the document written age | 1 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 1 | More downloads = more users have been using the plugin for a while tests | 9 | The more tests a plugin has, the better Open on GitHub 64 line_message via Wasith Theerapattrathamrong Use to send message to Line chat Provided actions Name | Category | Description ------|----------|------------ **line_message** | notifications | Use to send message to Line chat Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 2 | More stars = more popular project forks | 5 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 25 | How well is the README of the document written age | 3 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | -1 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 4 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 64 flutter_build via viniciusmo Build your flutter project directly from your lane. Provided actions Name | Category | Description ------|----------|------------ **flutter_build** | - | Build our project directly from your lane. Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 1 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 25 | How well is the README of the document written age | 5 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 7 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 64 discord via Matheus Gambati Discord integration with Pantograph Provided actions Name | Category | Description ------|----------|------------ **discord** | - | Discord integration with Pantograph Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 25 | How well is the README of the document written age | 5 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 5 | More downloads = more users have been using the plugin for a while tests | 6 | The more tests a plugin has, the better Open on GitHub 63 managed_google_play via Jan Piotrowski Create Managed Google Play Apps Provided actions Name | Category | Description ------|----------|------------ **get_managed_play_store_publishing_rights** | - | Obtain publishing rights for custom apps on Managed Google Play Store **managed_google_play** | - | Create Managed Google Play Apps **create_app_on_managed_play_store** | - | Create Managed Google Play Apps Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 3 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 25 | How well is the README of the document written age | 7 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | -5 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 7 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 63 publish_dropbox via Tommyvanvliet This plugin publishes artifacts over to Dropbox via a generated api token from Dropbox Developer API. Provided actions Name | Category | Description ------|----------|------------ **publish_dropbox** | - | This plugin publishes artifacts over to Dropbox via a generated api token from Dropbox Developer API. Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 25 | How well is the README of the document written age | 7 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 5 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 62 git_pull_branch via Bhuvanesh BS pull code from different branch Provided actions Name | Category | Description ------|----------|------------ **git_pull_branch** | - | pull code from different branch Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 25 | How well is the README of the document written age | 7 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 4 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 62 ding_talk_msg_push via asynclog dingTalk robot msg push tool Provided actions Name | Category | Description ------|----------|------------ **ding_talk_msg_push** | - | dingTalk robot msg push tool Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 0 | More subscribers = more popular project stars | 1 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 25 | How well is the README of the document written age | 9 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 4 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 61 androidmanifest_editor via \u4efb\u798f\u65b0 edit meta-data in AndroidManifest.xml Provided actions Name | Category | Description ------|----------|------------ **modify_meta_data** | - | edit meta-data in AndroidManifest.xml **modify_intent_scheme** | - | edit scheme data of intent-filter in AndroidManifest.xml **androidmanifest_editor** | - | edit meta-data in AndroidManifest.xml Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 25 | How well is the README of the document written age | 5 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 5 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 60 resize_screenshots via Levi Bostian Resize screenshots taken from your simulator to use for Frameit. Provided actions Name | Category | Description ------|----------|------------ **resize_screenshots** | - | Resize screenshots taken from your simulator to use for Frameit. Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 0 | More subscribers = more popular project stars | 2 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 25 | How well is the README of the document written age | 10 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | -2 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 2 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 60 dependency_manager_outdated via matsuda Pantograph plugin to check project's outdated dependencies Provided actions Name | Category | Description ------|----------|------------ **cocoapods_outdated** | - | Check outdated CocoaPods dependencies **dependency_manager_outdated** | - | Pantograph plugin to check project's outdated dependencies **carthage_outdated** | - | Check outdated Carthage dependencies Score details Metric | Points | Description --------|--------|------------- contributors | 6 | The more contributors a project has, the more likely it is it stays alive subscribers | 0 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 25 | How well is the README of the document written age | 3 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 3 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 60 upload_dsym via xiongzenghui upload dsym to your specify server Provided actions Name | Category | Description ------|----------|------------ **upload_dsym** | - | upload dsym to your specify server Score details Metric | Points | Description --------|--------|------------- contributors | 6 | The more contributors a project has, the more likely it is it stays alive subscribers | 0 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 25 | How well is the README of the document written age | 2 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 4 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 59 promo_code via marumemomo promo_code Provided actions Name | Category | Description ------|----------|------------ **promo_code** | - | promo_code Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 0 | More subscribers = more popular project stars | 1 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 25 | How well is the README of the document written age | 9 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 1 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 59 release_version via Leon Keijzer This plugin makes it possible to release an already approved version in AppStore Connect Provided actions Name | Category | Description ------|----------|------------ **reject_version** | - | This action makes it possible to reject a binary in AppStore Connect **release_version** | - | This plugin makes it possible to release an already approved version in AppStore Connect Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 25 | How well is the README of the document written age | 7 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 1 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 59 gsheet_metadata via Kevin Morais Generate metadata from Google Spreadsheet Provided actions Name | Category | Description ------|----------|------------ **gsheet_metadata** | - | Generate metadata from Google Spreadsheet Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 25 | How well is the README of the document written age | 6 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 2 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 59 gitlab_branch_diff via xiongzenghui gitlab compare two branch to get diffs Provided actions Name | Category | Description ------|----------|------------ **gitlab_branch_diff** | - | gitlab compare two branch to get diffs Score details Metric | Points | Description --------|--------|------------- contributors | 6 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 25 | How well is the README of the document written age | 1 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 1 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 59 android_channels via icyleaf Package unsign apk with channels Provided actions Name | Category | Description ------|----------|------------ **android_channels** | building | Package apk file with channels Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 25 | How well is the README of the document written age | 6 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 2 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 59 bugtags via wliu6 Upload symbols to Bugtags Provided actions Name | Category | Description ------|----------|------------ **bugtags** | - | Upload symbols to Bugtags Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 1 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 25 | How well is the README of the document written age | 6 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 1 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 58 acknowledgements via Simon Rice, Christophe Knage Use Pantograph to give credit where it's rightfully due Provided actions Name | Category | Description ------|----------|------------ **acknowledgements** | - | Use Pantograph to give credit where it's rightfully due. Score details Metric | Points | Description --------|--------|------------- contributors | 6 | The more contributors a project has, the more likely it is it stays alive subscribers | 0 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | -50 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 15 | Project that have been around for longer tend to be more stable major_release | 30 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 4 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 58 gitlab_get_max_version_branch via xiongzenghui get a max version branch from a gitlab project, like: master_5.11.9 Provided actions Name | Category | Description ------|----------|------------ **gitlab_get_max_version_branch** | - | get a max version branch from a gitlab project, like: master_5.11.9 Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 25 | How well is the README of the document written age | 1 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 3 | More downloads = more users have been using the plugin for a while tests | 6 | The more tests a plugin has, the better Open on GitHub 58 speculid via Leo Dion Use speculid to easily manage graphics in Xcode projects Provided actions Name | Category | Description ------|----------|------------ **speculid** | - | Use speculid to Easily Manage Graphics in Xcode Projects Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 25 | How well is the README of the document written age | 5 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 2 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 56 report via Bruno Migue\u0302ns After an action, like scan for instance, you're able to generate a report file. This pantograph plugin gives you a way to upload and share your report using Slack. Score details Metric | Points | Description --------|--------|------------- contributors | 12 | The more contributors a project has, the more likely it is it stays alive subscribers | 0 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 0 | How well is the README of the document written age | 0 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 24 | More downloads = more users have been using the plugin for a while tests | 0 | The more tests a plugin has, the better Open on GitHub 56 get_derived_data_path via Rajiv Shah Retrieves the path of a workspace in DerivedData Provided actions Name | Category | Description ------|----------|------------ **get_derived_data_path** | - | Retrieves the path of a workspace in DerivedData Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 25 | How well is the README of the document written age | 5 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | -1 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 1 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 56 logme via Lui\u0301s Esteves Provides a simple way to get logs from two delta commits Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 0 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 0 | How well is the README of the document written age | 0 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 36 | More downloads = more users have been using the plugin for a while tests | 0 | The more tests a plugin has, the better Open website (no GitHub link provided in gemspec) 56 checkbuild via Johannes Steudle This plugin will check any binary library for unwanted symbols and architectures Provided actions Name | Category | Description ------|----------|------------ **checkbuild** | - | This plugin will check any binary library for unwanted symbols and architectures. Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 25 | How well is the README of the document written age | 4 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 1 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 56 ci_apps via JiaqiangSong Config multiple apps of CI Provided actions Name | Category | Description ------|----------|------------ **get_extensions** | - | A short description with < = 80 characters of what this action does **ci_apps** | - | Config multiple apps of CI **get_ci_apps** | - | A short description with < = 80 characters of what this action does **get_ci_app_value** | - | A short description with < = 80 characters of what this action does **get_ci_app** | - | A short description with < = 80 characters of what this action does **get_emtitlements_plist_file_path** | - | A short description with < = 80 characters of what this action does **get_target_type** | - | A short description with < = 80 characters of what this action does **get_info_plist_file_path** | - | A short description with < = 80 characters of what this action does Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 25 | How well is the README of the document written age | 4 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 1 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 55 bowl via Benjamin Wulff Handles uploads to BOWL backend Provided actions Name | Category | Description ------|----------|------------ **bowl** | - | Handles uploads to BOWL backend **get_gradle_property** | - | - **set_gradle_property** | - | Set the value of your project Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 25 | How well is the README of the document written age | 3 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 1 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 54 mailjet via thibaut noah plugin to send mail notifications for build release Provided actions Name | Category | Description ------|----------|------------ **mailjet** | - | Send a custom message to an email group with mailjet Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 0 | More subscribers = more popular project stars | 1 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 25 | How well is the README of the document written age | 2 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 3 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 54 s3_cert via Josh Lesch Store and install encrypted Certs from s3 Provided actions Name | Category | Description ------|----------|------------ **s3_upload_certs** | - | Upload encrypted certs to s3 **s3_cert** | - | Pull Certs from s3 and install them into keychain. Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 0 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 25 | How well is the README of the document written age | 5 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 1 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 54 rm_derived_data via xiongzenghui de Provided actions Name | Category | Description ------|----------|------------ **rm_derived_data** | building | after build finish remove xx.xcworkspace/xx.xcodeproj specify DerivedDatagst/* Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 25 | How well is the README of the document written age | 1 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 2 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 54 git_add_tag via xiongzenghui git add tag wrapper Provided actions Name | Category | Description ------|----------|------------ **git_add_tag** | source_control | git add tag wrapper Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 25 | How well is the README of the document written age | 1 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 2 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 54 secrets via Cyril Cermak, Jo\u0308rg Nestele Securely store secrets in source code. Provided actions Name | Category | Description ------|----------|------------ **decrypt_secrets** | - | Securely store secrets in source code **encrypt_secrets** | - | Securely store secrets in source code Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 25 | How well is the README of the document written age | 1 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 2 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 53 gitlab_merge_request_participants via xiongzenghui Get a list of merge request participants Provided actions Name | Category | Description ------|----------|------------ **gitlab_merge_request_participants** | - | Get a list of merge request participants Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 25 | How well is the README of the document written age | 1 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 1 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 53 git_remove_tag via xiongzenghui remove git origin and remote repo tag Provided actions Name | Category | Description ------|----------|------------ **git_remove_tag** | source_control | remove git origin and remote repo tag Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 25 | How well is the README of the document written age | 1 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 1 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 53 ipa_install_plist_generate via xiongzenghui iOS ipa enterprise install plist generate plugn Provided actions Name | Category | Description ------|----------|------------ **ipa_install_plist_generate** | - | iOS ipa enterprise install plist generate plugn Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 25 | How well is the README of the document written age | 1 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 1 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 53 appcenter_get_recent_release_version via Kitti Pariyaakkarakul Get recent release version from appcenter Provided actions Name | Category | Description ------|----------|------------ **appcenter_get_recent_release_version** | - | Get recent release version from appcenter Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 25 | How well is the README of the document written age | 1 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 1 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 53 make via xiongzenghui Linux GNU Makefile make wrapper Provided actions Name | Category | Description ------|----------|------------ **make** | building | Linux GNU Makefile make wrapper Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 25 | How well is the README of the document written age | 1 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 1 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 53 moss via Shaggon du Moss is a tool that allows developers on Apple platforms to use any frameworks as a shared cache for frameworks built with Carthage. Provided actions Name | Category | Description ------|----------|------------ **moss** | - | moss is a tool that allows developers on Apple platforms to use any frameworks as a shared cache for frameworks built with Carthage. Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 25 | How well is the README of the document written age | 4 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 1 | More downloads = more users have been using the plugin for a while tests | 0 | The more tests a plugin has, the better Open on GitHub 53 cuttly_api via Yalan pantograph plugin for cuttly. Provided actions Name | Category | Description ------|----------|------------ **cuttly_api** | - | pantograph plugin for cuttly. Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 25 | How well is the README of the document written age | 1 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 1 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 53 goyuyun via vincentwu08 \u4e00\u952e\u53d1\u5e03\u81f3\u4e70\u597d\u4e91 Provided actions Name | Category | Description ------|----------|------------ **goyuyun** | - | \u4e00\u952e\u53d1\u5e03\u81f3\u4e70\u597d\u4e91 Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 25 | How well is the README of the document written age | 0 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 2 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 53 gitlab_merge_request_add_note via xiongzenghui add merge request note for gitlab server api Provided actions Name | Category | Description ------|----------|------------ **gitlab_merge_request_add_note** | - | add merge request note for gitlab server api Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 25 | How well is the README of the document written age | 1 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 1 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 52 git_clone via xiongzenghui a wrapper for git clone command Provided actions Name | Category | Description ------|----------|------------ **git_clone** | source_control | this is a wrapper for git clone command Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 0 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 25 | How well is the README of the document written age | 2 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 2 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 52 avd_emulator via Guillaume Elloy This plugin is listing available android avd emulators, allowing you to start the selected one. Provided actions Name | Category | Description ------|----------|------------ **start_avd_emulator** | - | This plugin is listing available android avd emulators, allowing you to start the selected one. Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 0 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 25 | How well is the README of the document written age | 2 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 2 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 52 bugly via chaosky Upload dSYM to bugly. Provided actions Name | Category | Description ------|----------|------------ **bugly** | - | Upload dSYM to bugly. Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 0 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 25 | How well is the README of the document written age | 2 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 2 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 51 gitlab_increate_line_notes via xiongzenghui filter gitlab merge request changes files & swiftlint json, last add line code with gitlab discussion Provided actions Name | Category | Description ------|----------|------------ **gitlab_increate_line_notes** | - | filter gitlab merge request changes files & swiftlint json, last add line code with gitlab discussion Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 0 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 25 | How well is the README of the document written age | 2 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 1 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 50 get_application_id via Helder Pinhal Get the applicationId of an Android project. Score details Metric | Points | Description --------|--------|------------- contributors | 12 | The more contributors a project has, the more likely it is it stays alive subscribers | 0 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 0 | How well is the README of the document written age | 0 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 18 | More downloads = more users have been using the plugin for a while tests | 0 | The more tests a plugin has, the better Open on GitHub 47 deploy_module_bintray via Bruno Oliveira Gradle action to deploy a Module from an Android project Provided actions Name | Category | Description ------|----------|------------ **deploy_module_bintray** | - | Gradle actions to deploy a module from an Android project Score details Metric | Points | Description --------|--------|------------- contributors | 6 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 0 | How well is the README of the document written age | 11 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 7 | More downloads = more users have been using the plugin for a while tests | 0 | The more tests a plugin has, the better Open on GitHub 45 redpill via omniprojects Pantograph plugin to use bluepill in pantograph Provided actions Name | Category | Description ------|----------|------------ **redpill** | - | Plugin to use bluepill in pantograph Score details Metric | Points | Description --------|--------|------------- contributors | 6 | The more contributors a project has, the more likely it is it stays alive subscribers | 3 | More subscribers = more popular project stars | 3 | More stars = more popular project forks | 10 | More forks = more people seem to use/modify this project has_mit_license | -50 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 11 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | -1 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 13 | More downloads = more users have been using the plugin for a while tests | 0 | The more tests a plugin has, the better Open on GitHub 44 u3d via Jerome Lacoste Fastgame's u3d (a Unity3d CLI) integration Score details Metric | Points | Description --------|--------|------------- contributors | 12 | The more contributors a project has, the more likely it is it stays alive subscribers | 0 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 0 | How well is the README of the document written age | 0 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 12 | More downloads = more users have been using the plugin for a while tests | 0 | The more tests a plugin has, the better Open on GitHub 44 android_change_app_name via MaximusMcCann Changes the manifest's label attribute (appName). Stores the original name for revertinng. Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 0 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 0 | How well is the README of the document written age | 0 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 24 | More downloads = more users have been using the plugin for a while tests | 0 | The more tests a plugin has, the better Open website (no GitHub link provided in gemspec) 43 emoji_fetcher via Felix Krause Fetch the emoji font file and copy it to a local directory Score details Metric | Points | Description --------|--------|------------- contributors | 12 | The more contributors a project has, the more likely it is it stays alive subscribers | 0 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 0 | How well is the README of the document written age | 0 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 11 | More downloads = more users have been using the plugin for a while tests | 0 | The more tests a plugin has, the better Open on GitHub 42 resetsims via Lui\u0301s Esteves Makes an reset on xcode simulators Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 0 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 0 | How well is the README of the document written age | 0 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 22 | More downloads = more users have been using the plugin for a while tests | 0 | The more tests a plugin has, the better Open website (no GitHub link provided in gemspec) 38 au_danger_gitlab via Emil Allows to use Danger on GitLab Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 0 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 0 | How well is the README of the document written age | 0 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 18 | More downloads = more users have been using the plugin for a while tests | 0 | The more tests a plugin has, the better Open website (no GitHub link provided in gemspec) 38 fetch_itc_versions via Bennett Rogers Returns a listing of all app versions and their latest builds from iTunes Connect. Score details Metric | Points | Description --------|--------|------------- contributors | 12 | The more contributors a project has, the more likely it is it stays alive subscribers | 0 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 0 | How well is the README of the document written age | 0 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 6 | More downloads = more users have been using the plugin for a while tests | 0 | The more tests a plugin has, the better Open on GitHub 37 update_device_name via huyanping update device name Score details Metric | Points | Description --------|--------|------------- contributors | 12 | The more contributors a project has, the more likely it is it stays alive subscribers | 0 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 0 | How well is the README of the document written age | 0 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 5 | More downloads = more users have been using the plugin for a while tests | 0 | The more tests a plugin has, the better Open on GitHub 37 fiv_increment_build_no via Fivethree pantograph plugin for ionic 4 Provided actions Name | Category | Description ------|----------|------------ **fivethree_ionic** | - | Pantograph plugin for Ionic v4 Projects **fiv_update_version_and_build_no** | - | Pantograph plugin for Ionic v4 Projects **fiv_update_version** | - | A short description with < = 80 characters of what this action does **fiv_increment_build_no** | - | pantograph plugin for ionic 4 **fiv_build_ionic_android** | - | A short description with < = 80 characters of what this action does **fiv_add_transparent_statusbar** | - | You can use this action to do cool things... Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 6 | More subscribers = more popular project stars | 2 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 0 | How well is the README of the document written age | 7 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 2 | More downloads = more users have been using the plugin for a while tests | 0 | The more tests a plugin has, the better Open on GitHub 37 pgyer-password via Kila2 distribute app to pgyer beta testing service Score details Metric | Points | Description --------|--------|------------- contributors | 12 | The more contributors a project has, the more likely it is it stays alive subscribers | 0 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 0 | How well is the README of the document written age | 0 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 5 | More downloads = more users have been using the plugin for a while tests | 0 | The more tests a plugin has, the better Open on GitHub 37 transifex_api via alexander sun basic transifex api wrapper Score details Metric | Points | Description --------|--------|------------- contributors | 12 | The more contributors a project has, the more likely it is it stays alive subscribers | 0 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 0 | How well is the README of the document written age | 0 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 5 | More downloads = more users have been using the plugin for a while tests | 0 | The more tests a plugin has, the better Open on GitHub 36 profile_expiration_info via Steven Chung Returns if the provisioning profile has expired and the DateTime it expires Score details Metric | Points | Description --------|--------|------------- contributors | 12 | The more contributors a project has, the more likely it is it stays alive subscribers | 0 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 0 | How well is the README of the document written age | 0 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 4 | More downloads = more users have been using the plugin for a while tests | 0 | The more tests a plugin has, the better Open on GitHub 36 update_app_associated_domains via Nicolas TRUTET [iOS] Replace associated domains array for the key in the entitlement file. Score details Metric | Points | Description --------|--------|------------- contributors | 12 | The more contributors a project has, the more likely it is it stays alive subscribers | 0 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 0 | How well is the README of the document written age | 0 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 4 | More downloads = more users have been using the plugin for a while tests | 0 | The more tests a plugin has, the better Open on GitHub 35 gen_dev_workspace via Andrew Breckenridge Configures an xcworkspace with specified xcodeprojs Score details Metric | Points | Description --------|--------|------------- contributors | 12 | The more contributors a project has, the more likely it is it stays alive subscribers | 0 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 0 | How well is the README of the document written age | 0 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 3 | More downloads = more users have been using the plugin for a while tests | 0 | The more tests a plugin has, the better Open on GitHub 35 version_from_last_tag via Jeff Stein Perform a regex on last (latest) git tag and perform a regex to extract a version number such as Release 1.2.3 Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 0 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 0 | How well is the README of the document written age | 0 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 15 | More downloads = more users have been using the plugin for a while tests | 0 | The more tests a plugin has, the better Open website (no GitHub link provided in gemspec) 35 appmetrica via Yandex, LLC Upload dSYM symbolication files to AppMetrica Provided actions Name | Category | Description ------|----------|------------ **upload_symbols_to_appmetrica** | - | Upload dSYM symbolication files to AppMetrica Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 27 | More subscribers = more popular project stars | 3 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | -50 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 0 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 2 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 35 rescan_flaky_tests via Ichiko Moro Re-run scan action for each failed test cases. Score details Metric | Points | Description --------|--------|------------- contributors | 12 | The more contributors a project has, the more likely it is it stays alive subscribers | 0 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 0 | How well is the README of the document written age | 0 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 3 | More downloads = more users have been using the plugin for a while tests | 0 | The more tests a plugin has, the better Open on GitHub 35 xcode8_srgb_workaround via Siarhei Fiedartsou Converts PNGs and JPEGs in your project to sRGB format to avoid crashes when building with Xcode 8 for iOS 8 and earlier deployment target Score details Metric | Points | Description --------|--------|------------- contributors | 12 | The more contributors a project has, the more likely it is it stays alive subscribers | 0 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 0 | How well is the README of the document written age | 0 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 3 | More downloads = more users have been using the plugin for a while tests | 0 | The more tests a plugin has, the better Open on GitHub 34 fivethree_ionic via Marc Stammerjohann Pantograph plugin for Ionic v4 Projects Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 0 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 0 | How well is the README of the document written age | 0 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 14 | More downloads = more users have been using the plugin for a while tests | 0 | The more tests a plugin has, the better Open website (no GitHub link provided in gemspec) 34 parse_json via Felix Krause Parse a JSON file Score details Metric | Points | Description --------|--------|------------- contributors | 12 | The more contributors a project has, the more likely it is it stays alive subscribers | 0 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 0 | How well is the README of the document written age | 0 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 2 | More downloads = more users have been using the plugin for a while tests | 0 | The more tests a plugin has, the better Open on GitHub 34 testin via rudy.li testin Score details Metric | Points | Description --------|--------|------------- contributors | 12 | The more contributors a project has, the more likely it is it stays alive subscribers | 0 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 0 | How well is the README of the document written age | 0 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 2 | More downloads = more users have been using the plugin for a while tests | 0 | The more tests a plugin has, the better Open on GitHub 34 ipa_scale via Danilo Caetano \"Checks the size of your built .ipa and warns you if you you are near the given threshold.\" Score details Metric | Points | Description --------|--------|------------- contributors | 12 | The more contributors a project has, the more likely it is it stays alive subscribers | 0 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 0 | How well is the README of the document written age | 0 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 2 | More downloads = more users have been using the plugin for a while tests | 0 | The more tests a plugin has, the better Open on GitHub 33 test_demo via StephenCurry30 A test demo of pantograph plugin Score details Metric | Points | Description --------|--------|------------- contributors | 12 | The more contributors a project has, the more likely it is it stays alive subscribers | 0 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 0 | How well is the README of the document written age | 0 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 1 | More downloads = more users have been using the plugin for a while tests | 0 | The more tests a plugin has, the better Open on GitHub 33 bluepillarx via jterhorst Pantograph Plugin to Run XCUITests in Parallel using Bluepill. Score details Metric | Points | Description --------|--------|------------- contributors | 12 | The more contributors a project has, the more likely it is it stays alive subscribers | 0 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 0 | How well is the README of the document written age | 0 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 1 | More downloads = more users have been using the plugin for a while tests | 0 | The more tests a plugin has, the better Open on GitHub 33 parse_configurations via Melki It is used to parse json configration Score details Metric | Points | Description --------|--------|------------- contributors | 12 | The more contributors a project has, the more likely it is it stays alive subscribers | 0 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 0 | How well is the README of the document written age | 0 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 1 | More downloads = more users have been using the plugin for a while tests | 0 | The more tests a plugin has, the better Open on GitHub 33 itargetchecker via Catalin Prata Checks the xcode proj file for targets and points out which files from the project are not present in a certain target. Provided actions Name | Category | Description ------|----------|------------ **itargetchecker** | - | Checks the xcodeproj file for targets and points out which files from the project are not present in a certain target. Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 9 | More subscribers = more popular project stars | 2 | More stars = more popular project forks | 5 | More forks = more people seem to use/modify this project has_mit_license | -50 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 50 | How well is the README of the document written age | 9 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 5 | More downloads = more users have been using the plugin for a while tests | 3 | The more tests a plugin has, the better Open on GitHub 32 install_certificates via Dylan Gyesbreghs Install all the certificates located in you're project. Score details Metric | Points | Description --------|--------|------------- contributors | 12 | The more contributors a project has, the more likely it is it stays alive subscribers | 0 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 0 | How well is the README of the document written age | 0 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 0 | More downloads = more users have been using the plugin for a while tests | 0 | The more tests a plugin has, the better Open on GitHub 31 pixie via Piotrek Dubiel Show your build status on PIXIE! Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 0 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 0 | How well is the README of the document written age | 0 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 11 | More downloads = more users have been using the plugin for a while tests | 0 | The more tests a plugin has, the better Open website (no GitHub link provided in gemspec) 31 rename_android_package via Josh Holtz Renames Android package Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 0 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 0 | How well is the README of the document written age | 0 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 11 | More downloads = more users have been using the plugin for a while tests | 0 | The more tests a plugin has, the better Open website (no GitHub link provided in gemspec) 31 imagesgoldenrun via Lui\u0301s Esteves this allows comparing images from a golden run with the actual results Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 0 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 0 | How well is the README of the document written age | 0 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 11 | More downloads = more users have been using the plugin for a while tests | 0 | The more tests a plugin has, the better Open website (no GitHub link provided in gemspec) 30 carthage_cache_ftps via Wolfgang Lutz Allows to publish or install the carthage builds via ftps to avoid recompilation Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 0 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 0 | How well is the README of the document written age | 0 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 10 | More downloads = more users have been using the plugin for a while tests | 0 | The more tests a plugin has, the better Open website (no GitHub link provided in gemspec) 29 appcenter_get_version via Markus Kramm get the latest build version from the app center Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 0 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 0 | How well is the README of the document written age | 0 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 9 | More downloads = more users have been using the plugin for a while tests | 0 | The more tests a plugin has, the better Open website (no GitHub link provided in gemspec) 29 bluepillar via Shashikant86 Pantograph Plugin to Run XCUITests in Parallel using Bluepill. Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 0 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 0 | How well is the README of the document written age | 0 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 9 | More downloads = more users have been using the plugin for a while tests | 0 | The more tests a plugin has, the better Open website (no GitHub link provided in gemspec) 28 intentconfirmation via Kamil Krzyk Halts the lane invocation, asks user to confirm if he wants to continue, may require password or key. Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 0 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 0 | How well is the README of the document written age | 0 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 8 | More downloads = more users have been using the plugin for a while tests | 0 | The more tests a plugin has, the better Open website (no GitHub link provided in gemspec) 27 playship via Helmut Januschka Interact with Google Play Api Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 0 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 0 | How well is the README of the document written age | 0 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 7 | More downloads = more users have been using the plugin for a while tests | 0 | The more tests a plugin has, the better Open website (no GitHub link provided in gemspec) 27 box via Wesley Sui library for the Box Content API Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 0 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 0 | How well is the README of the document written age | 0 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 7 | More downloads = more users have been using the plugin for a while tests | 0 | The more tests a plugin has, the better Open website (no GitHub link provided in gemspec) 26 figlet via Jeff Stein Wrapper around figlet which makes large ascii text words Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 0 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 0 | How well is the README of the document written age | 0 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 6 | More downloads = more users have been using the plugin for a while tests | 0 | The more tests a plugin has, the better Open website (no GitHub link provided in gemspec) 25 ensure_swift_version via Shashikant86 This plugin ensure version of Swift language used for project Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 0 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 0 | How well is the README of the document written age | 0 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 5 | More downloads = more users have been using the plugin for a while tests | 0 | The more tests a plugin has, the better Open website (no GitHub link provided in gemspec) 25 git_commit_lzx via zhenxingliu git commit all add change to git Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 0 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 0 | How well is the README of the document written age | 0 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 5 | More downloads = more users have been using the plugin for a while tests | 0 | The more tests a plugin has, the better Open website (no GitHub link provided in gemspec) 24 screenshot_notifier via Moyuru Aizawa Post screenshots to a pull request Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 0 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 0 | How well is the README of the document written age | 0 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 4 | More downloads = more users have been using the plugin for a while tests | 0 | The more tests a plugin has, the better Open website (no GitHub link provided in gemspec) 24 covfefe via Jakob Jensen A templating engine for generating common file structures. Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 0 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 0 | How well is the README of the document written age | 0 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 4 | More downloads = more users have been using the plugin for a while tests | 0 | The more tests a plugin has, the better Open website (no GitHub link provided in gemspec) 24 devicelab_bot via Almouro Automatically install your app on your devicelab with the devicelab bot Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 0 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 0 | How well is the README of the document written age | 0 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 4 | More downloads = more users have been using the plugin for a while tests | 0 | The more tests a plugin has, the better Open website (no GitHub link provided in gemspec) 23 devresponse via Helmut Januschka Enables Spaceship to deal with developer response Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 0 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 0 | How well is the README of the document written age | 0 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 3 | More downloads = more users have been using the plugin for a while tests | 0 | The more tests a plugin has, the better Open website (no GitHub link provided in gemspec) 23 jenkins_job_config via Jerome Lacoste Generate the config for a Jenkins job Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 0 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 0 | How well is the README of the document written age | 0 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 3 | More downloads = more users have been using the plugin for a while tests | 0 | The more tests a plugin has, the better Open website (no GitHub link provided in gemspec) 22 bump_android_version via Sea\u0301n Labastille Bump Android Manifest Version Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 0 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 0 | How well is the README of the document written age | 0 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 2 | More downloads = more users have been using the plugin for a while tests | 0 | The more tests a plugin has, the better Open website (no GitHub link provided in gemspec) 22 install_provisioning_profile via Alexey Martynov This plugin installs provisioning profile to Xcode Provisioning Profiles directory Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 0 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 0 | How well is the README of the document written age | 0 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 2 | More downloads = more users have been using the plugin for a while tests | 0 | The more tests a plugin has, the better Open website (no GitHub link provided in gemspec) 22 mobile_common via Alexander Semenov Collection of common CI actions for Android, iOS and MacOSX projects - like unit tests, app publishing, version increment, screenshots, etc. Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 0 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 0 | How well is the README of the document written age | 0 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 2 | More downloads = more users have been using the plugin for a while tests | 0 | The more tests a plugin has, the better Open website (no GitHub link provided in gemspec) 22 asciii via Danielle Tomlinson Add ascii text to your pantograph output Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 0 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 0 | How well is the README of the document written age | 0 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 2 | More downloads = more users have been using the plugin for a while tests | 0 | The more tests a plugin has, the better Open website (no GitHub link provided in gemspec) 22 add_fix_version via Dmitry Krasulia Create and makr tickets with fix version Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 0 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 0 | How well is the README of the document written age | 0 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 2 | More downloads = more users have been using the plugin for a while tests | 0 | The more tests a plugin has, the better Open website (no GitHub link provided in gemspec) 22 killsimulator via Lui\u0301s Esteves Kill all the open simulatores Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 0 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 0 | How well is the README of the document written age | 0 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 2 | More downloads = more users have been using the plugin for a while tests | 0 | The more tests a plugin has, the better Open website (no GitHub link provided in gemspec) 21 manage_android_versions via Bruno Correia An easy way to manage your Android App versions. Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 0 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 0 | How well is the README of the document written age | 0 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 1 | More downloads = more users have been using the plugin for a while tests | 0 | The more tests a plugin has, the better Open website (no GitHub link provided in gemspec) 21 gitlab_increate_swiftlint via xiongzenghui Incremental Code Check using swiftlint for swift language files on gitlab platform ! Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 0 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 0 | How well is the README of the document written age | 0 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 1 | More downloads = more users have been using the plugin for a while tests | 0 | The more tests a plugin has, the better Open website (no GitHub link provided in gemspec) 21 current_datetime via Melki To get current date and time as string Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 0 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 0 | How well is the README of the document written age | 0 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 1 | More downloads = more users have been using the plugin for a while tests | 0 | The more tests a plugin has, the better Open website (no GitHub link provided in gemspec) 21 incloud_xamarin_build via punksta, torben.carstens@incloud.de Build xamarin android\\ios projects Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 0 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 0 | How well is the README of the document written age | 0 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 1 | More downloads = more users have been using the plugin for a while tests | 0 | The more tests a plugin has, the better Open website (no GitHub link provided in gemspec) 21 switchmedia_xamarin_build via punksta Build xamarin android\\ios projects Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 0 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 0 | How well is the README of the document written age | 0 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 1 | More downloads = more users have been using the plugin for a while tests | 0 | The more tests a plugin has, the better Open website (no GitHub link provided in gemspec) 21 update_app_name via huyanping update app name Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 0 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 0 | How well is the README of the document written age | 0 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 1 | More downloads = more users have been using the plugin for a while tests | 0 | The more tests a plugin has, the better Open website (no GitHub link provided in gemspec) 21 xamarin_build_switch via punksta Build xamarin android\\ios projects Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 0 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 0 | How well is the README of the document written age | 0 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 1 | More downloads = more users have been using the plugin for a while tests | 0 | The more tests a plugin has, the better Open website (no GitHub link provided in gemspec) 20 mynewplu via lingshijun new plugin Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 0 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 0 | How well is the README of the document written age | 0 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 0 | More downloads = more users have been using the plugin for a while tests | 0 | The more tests a plugin has, the better Open website (no GitHub link provided in gemspec) 20 ram_disk via icyleaf Use a temporary ram disk to do anything else Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 0 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | 20 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 0 | How well is the README of the document written age | 0 | Project that have been around for longer tend to be more stable major_release | 0 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 0 | More downloads = more users have been using the plugin for a while tests | 0 | The more tests a plugin has, the better Open website (no GitHub link provided in gemspec) -17 retry_failed_tests via Gloria Chow Retries failed iOS tests Score details Metric | Points | Description --------|--------|------------- contributors | 0 | The more contributors a project has, the more likely it is it stays alive subscribers | 0 | More subscribers = more popular project stars | 0 | More stars = more popular project forks | 0 | More forks = more people seem to use/modify this project has_mit_license | -50 | pantograph is MIT licensed, it's good to have plugins use MIT too readme_score | 0 | How well is the README of the document written age | 0 | Project that have been around for longer tend to be more stable major_release | 30 | Post 1.0 releases are great github_issues | 0 | Lots of open issues are not a good sign usually, unless the project is really popular downloads | 3 | More downloads = more users have been using the plugin for a while tests | 0 | The more tests a plugin has, the better Open website (no GitHub link provided in gemspec)","title":"Available Plugins"},{"location":"plugins/available-plugins/#available-plugins","text":"4498","title":"Available Plugins"},{"location":"plugins/create-plugin/","text":"Create your own pantograph plugin cd ~/new/folder/ pantograph new_plugin [ plugin_name ] pantograph creates the directory structure that's needed to be a valid Ruby gem Edit the lib/pantograph/plugin/[plugin_name]/actions/[plugin_name].rb and implement your action Easily test the plugin locally by running pantograph add_plugin in your project's directory and specifying the local path when asked for it New plugin for existing gem If you already have an existing gem you want to provide a pantograph plugin for, you'll still have to create a new Ruby gem. The reason for that is the way plugins are imported. All you have to do if you have an existing gem: Navigate to your gem pantograph new_plugin [plugin_name] Inside the newly created folder, edit the pantograph-plugin-[plugin_name].gemspec and add your gem as a dependency. It is recommended to also specify a version number requirement Publishing your plugin RubyGems The recommended way to publish your plugin is to publish it on RubyGems.org . Follow the steps below to publish your plugin. Create an account at RubyGems.org Publish your plugin to a GitHub repo Update the pantograph-plugin-[plugin_name].gemspec file so that the spec.homepage points to your github repo. Publish the first release of your plugin: bundle install rake install rake release Now all your users can run pantograph add_plugin [plugin_name] to install and use your plugin. GitHub If for some reason you don't want to use RubyGems, you can also make your plugin available on GitHub. Your users then need to add the following to the Pluginfile gem 'pantograph-plugin-[plugin_name]' , git : 'https://github.com/[user]/[plugin_name]' Advanced Multiple actions in one plugin Let's assume you work on a pantograph plugin for project management software. You could call it pantograph-plugin-pm and it may contain any number of actions and helpers, just add them to your actions folder. Make sure to mention the available actions in your plugin's README.md .","title":"Create Your Own Plugin"},{"location":"plugins/create-plugin/#create-your-own-pantograph-plugin","text":"cd ~/new/folder/ pantograph new_plugin [ plugin_name ] pantograph creates the directory structure that's needed to be a valid Ruby gem Edit the lib/pantograph/plugin/[plugin_name]/actions/[plugin_name].rb and implement your action Easily test the plugin locally by running pantograph add_plugin in your project's directory and specifying the local path when asked for it","title":"Create your own pantograph plugin"},{"location":"plugins/create-plugin/#new-plugin-for-existing-gem","text":"If you already have an existing gem you want to provide a pantograph plugin for, you'll still have to create a new Ruby gem. The reason for that is the way plugins are imported. All you have to do if you have an existing gem: Navigate to your gem pantograph new_plugin [plugin_name] Inside the newly created folder, edit the pantograph-plugin-[plugin_name].gemspec and add your gem as a dependency. It is recommended to also specify a version number requirement","title":"New plugin for existing gem"},{"location":"plugins/create-plugin/#publishing-your-plugin","text":"","title":"Publishing your plugin"},{"location":"plugins/create-plugin/#rubygems","text":"The recommended way to publish your plugin is to publish it on RubyGems.org . Follow the steps below to publish your plugin. Create an account at RubyGems.org Publish your plugin to a GitHub repo Update the pantograph-plugin-[plugin_name].gemspec file so that the spec.homepage points to your github repo. Publish the first release of your plugin: bundle install rake install rake release Now all your users can run pantograph add_plugin [plugin_name] to install and use your plugin.","title":"RubyGems"},{"location":"plugins/create-plugin/#github","text":"If for some reason you don't want to use RubyGems, you can also make your plugin available on GitHub. Your users then need to add the following to the Pluginfile gem 'pantograph-plugin-[plugin_name]' , git : 'https://github.com/[user]/[plugin_name]'","title":"GitHub"},{"location":"plugins/create-plugin/#advanced","text":"","title":"Advanced"},{"location":"plugins/create-plugin/#multiple-actions-in-one-plugin","text":"Let's assume you work on a pantograph plugin for project management software. You could call it pantograph-plugin-pm and it may contain any number of actions and helpers, just add them to your actions folder. Make sure to mention the available actions in your plugin's README.md .","title":"Multiple actions in one plugin"},{"location":"plugins/plugins-troubleshooting/","text":"pantograph plugins troubleshooting If you're having trouble calling a plugin action, here is a simple guide on how to resolve the issue: Make sure pantograph is up to date Run pantograph -v and bundle exec pantograph -v and make sure it's at least version 1.93.0. Update your plugins Run pantograph update_plugins to make sure to have all the latest plugins and their dependencies installed. Use bundle exec Run pantograph using bundle exec pantograph [lane] to make sure your plugins are properly loaded. This is required when you use plugins from a local path or a git remote. Use the --verbose mode Running pantograph [lane] --verbose will show a lot more information that might be useful to resolve the issue. Make sure the action name is correct A plugin can contain any number of actions. Make sure to read the docs for the plugin itself! Additionally check out the source code of the plugin: lib / pantograph / plugin /[ plugin_name ]/ actions /[ action_name ] . rb Open the [action_name].rb file and make sure the name of the class on line 3 looks like this: class [ ActionName ] Action < Action Note how the name of the class should be capitalised and have Action appended in the name. Additionally this class must be a subclass of Action . Gemfile and Pluginfile Your Gemfile should look something like this: gem \"pantograph\" plugins_path = File . join ( File . dirname ( __FILE__ ), 'pantograph' , 'Pluginfile' ) eval_gemfile ( plugins_path ) if File . exist? ( plugins_path ) Your Pluginfile should look something like this # Autogenerated by pantograph gem 'pantograph-plugin-ruby' Building your own plugin If you have issues with running your local plugins during plugin development, make sure to run bundle install --with development to install all required development dependencies More help If it's still not working for you, please submit a new GitHub issue with your Gemfile , Gemfile.lock , Pluginfile , Pantfile and terminal output when running pantograph using the --verbose flag.","title":"Plugins Troubleshooting"},{"location":"plugins/plugins-troubleshooting/#pantograph-plugins-troubleshooting","text":"If you're having trouble calling a plugin action, here is a simple guide on how to resolve the issue:","title":"pantograph plugins troubleshooting"},{"location":"plugins/plugins-troubleshooting/#make-sure-pantograph-is-up-to-date","text":"Run pantograph -v and bundle exec pantograph -v and make sure it's at least version 1.93.0.","title":"Make sure pantograph is up to date"},{"location":"plugins/plugins-troubleshooting/#update-your-plugins","text":"Run pantograph update_plugins to make sure to have all the latest plugins and their dependencies installed.","title":"Update your plugins"},{"location":"plugins/plugins-troubleshooting/#use-bundle-exec","text":"Run pantograph using bundle exec pantograph [lane] to make sure your plugins are properly loaded. This is required when you use plugins from a local path or a git remote.","title":"Use bundle exec"},{"location":"plugins/plugins-troubleshooting/#use-the-verbose-mode","text":"Running pantograph [lane] --verbose will show a lot more information that might be useful to resolve the issue.","title":"Use the --verbose mode"},{"location":"plugins/plugins-troubleshooting/#make-sure-the-action-name-is-correct","text":"A plugin can contain any number of actions. Make sure to read the docs for the plugin itself! Additionally check out the source code of the plugin: lib / pantograph / plugin /[ plugin_name ]/ actions /[ action_name ] . rb Open the [action_name].rb file and make sure the name of the class on line 3 looks like this: class [ ActionName ] Action < Action Note how the name of the class should be capitalised and have Action appended in the name. Additionally this class must be a subclass of Action .","title":"Make sure the action name is correct"},{"location":"plugins/plugins-troubleshooting/#gemfile-and-pluginfile","text":"Your Gemfile should look something like this: gem \"pantograph\" plugins_path = File . join ( File . dirname ( __FILE__ ), 'pantograph' , 'Pluginfile' ) eval_gemfile ( plugins_path ) if File . exist? ( plugins_path ) Your Pluginfile should look something like this # Autogenerated by pantograph gem 'pantograph-plugin-ruby'","title":"Gemfile and Pluginfile"},{"location":"plugins/plugins-troubleshooting/#building-your-own-plugin","text":"If you have issues with running your local plugins during plugin development, make sure to run bundle install --with development to install all required development dependencies","title":"Building your own plugin"},{"location":"plugins/plugins-troubleshooting/#more-help","text":"If it's still not working for you, please submit a new GitHub issue with your Gemfile , Gemfile.lock , Pluginfile , Pantfile and terminal output when running pantograph using the --verbose flag.","title":"More help"},{"location":"plugins/using-plugins/","text":"pantograph Plugins The instructions below require pantograph 0.1.9 or higher pantograph is an open platform and we enable every developer to extend it to fit their needs. That's why we built a plugin system that allows you and your company to provide pantograph plugins to other pantograph users. You have the full power and responsibility of maintaining your plugin and keeping it up to date. This is useful if you maintain your own library or web service, and want to make sure the pantograph plugin is always up to date. Local actions (function () { var anchorMap = { \"local-actions\": \"/create-action/\" } var hash = window.location.hash.substring(1); if (hash) { if (anchorMap[hash]) { link = anchorMap[hash] + '#' + hash; window.location.replace(link); } } })(); This content was moved and now lives here . Find a plugin Head over to Available Plugins for a list of plugins you can use. List all available plugins using pantograph search_plugins To search for something specific pantograph search_plugins [ query ] Add a plugin to your project pantograph add_plugin [ name ] pantograph will assist you on setting up your project to start using plugins. This will: Add the plugin to pantograph/Pluginfile Make sure your pantograph/Pluginfile is properly referenced from your ./Gemfile Run pantograph install_plugins to make sure all required dependencies are installed on your local machine (this step might ask for your admin password to install Ruby gems) You'll have 3 new files, that should all be checked into version control: Gemfile , Gemfile.lock and pantograph/Pluginfile Plugin Source Your pantograph/Pluginfile contains the list of all pantograph plugins your project uses. The Pluginfile is a Gemfile that gets imported from your main Gemfile . You specify all dependencies, including the required version numbers: # Fetched from RubyGems.org gem 'pantograph-plugin-maven' # Fetched from GitHub gem 'pantograph-plugin-maven' , git : 'https://github.com/johnknapprs/pantograph-plugin-maven' # Fetched from a local directory gem 'pantograph-plugin-maven' , path : '../pantograph-plugin-maven' # Specify a version requirements gem 'pantograph-plugin-maven' , '1.1.0' gem 'pantograph-plugin-maven' , '>= 1.0' More information about a Gemfile Run with plugins Run pantograph using bundle exec pantograph [lane] to make sure your plugins are properly loaded. This is required when you use plugins from a local path or a git remote. If you have multiple versions of the same plugin loaded, you may not be using the one you specified in your Pluginfile or Gemfile . Install plugins on another machine To make sure all plugins are installed on the local machine, run pantograph install_plugins Update all plugins To make sure all plugins are updated to the latest version, run pantograph update_plugins Remove a plugin Open your pantograph/Pluginfile and remove the line that looks like this gem 'pantograph-plugin-[plugin_name]'","title":"Use Plugins"},{"location":"plugins/using-plugins/#pantograph-plugins","text":"The instructions below require pantograph 0.1.9 or higher pantograph is an open platform and we enable every developer to extend it to fit their needs. That's why we built a plugin system that allows you and your company to provide pantograph plugins to other pantograph users. You have the full power and responsibility of maintaining your plugin and keeping it up to date. This is useful if you maintain your own library or web service, and want to make sure the pantograph plugin is always up to date.","title":"pantograph Plugins"},{"location":"plugins/using-plugins/#local-actions","text":"(function () { var anchorMap = { \"local-actions\": \"/create-action/\" } var hash = window.location.hash.substring(1); if (hash) { if (anchorMap[hash]) { link = anchorMap[hash] + '#' + hash; window.location.replace(link); } } })(); This content was moved and now lives here .","title":"Local actions"},{"location":"plugins/using-plugins/#find-a-plugin","text":"Head over to Available Plugins for a list of plugins you can use. List all available plugins using pantograph search_plugins To search for something specific pantograph search_plugins [ query ]","title":"Find a plugin"},{"location":"plugins/using-plugins/#add-a-plugin-to-your-project","text":"pantograph add_plugin [ name ] pantograph will assist you on setting up your project to start using plugins. This will: Add the plugin to pantograph/Pluginfile Make sure your pantograph/Pluginfile is properly referenced from your ./Gemfile Run pantograph install_plugins to make sure all required dependencies are installed on your local machine (this step might ask for your admin password to install Ruby gems) You'll have 3 new files, that should all be checked into version control: Gemfile , Gemfile.lock and pantograph/Pluginfile","title":"Add a plugin to your project"},{"location":"plugins/using-plugins/#plugin-source","text":"Your pantograph/Pluginfile contains the list of all pantograph plugins your project uses. The Pluginfile is a Gemfile that gets imported from your main Gemfile . You specify all dependencies, including the required version numbers: # Fetched from RubyGems.org gem 'pantograph-plugin-maven' # Fetched from GitHub gem 'pantograph-plugin-maven' , git : 'https://github.com/johnknapprs/pantograph-plugin-maven' # Fetched from a local directory gem 'pantograph-plugin-maven' , path : '../pantograph-plugin-maven' # Specify a version requirements gem 'pantograph-plugin-maven' , '1.1.0' gem 'pantograph-plugin-maven' , '>= 1.0' More information about a Gemfile","title":"Plugin Source"},{"location":"plugins/using-plugins/#run-with-plugins","text":"Run pantograph using bundle exec pantograph [lane] to make sure your plugins are properly loaded. This is required when you use plugins from a local path or a git remote. If you have multiple versions of the same plugin loaded, you may not be using the one you specified in your Pluginfile or Gemfile .","title":"Run with plugins"},{"location":"plugins/using-plugins/#install-plugins-on-another-machine","text":"To make sure all plugins are installed on the local machine, run pantograph install_plugins","title":"Install plugins on another machine"},{"location":"plugins/using-plugins/#update-all-plugins","text":"To make sure all plugins are updated to the latest version, run pantograph update_plugins","title":"Update all plugins"},{"location":"plugins/using-plugins/#remove-a-plugin","text":"Open your pantograph/Pluginfile and remove the line that looks like this gem 'pantograph-plugin-[plugin_name]'","title":"Remove a plugin"}]}